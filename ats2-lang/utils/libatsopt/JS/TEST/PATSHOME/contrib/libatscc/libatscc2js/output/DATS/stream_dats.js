/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2016-12-25: 21h:46m
**
*/

function
_ats2jspre_stream_patsfun_6__closurerize(env0)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_6(cenv[1]); }, env0];
}


function
_ats2jspre_stream_patsfun_17__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_17(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_23__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_23(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_25__closurerize(env0)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_25(cenv[1]); }, env0];
}


function
_ats2jspre_stream_patsfun_27__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_27(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_29__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_29(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_31__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_31(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_33__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_33(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_36__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_36(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_39__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_39(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_42__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_42(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_46__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_patsfun_46(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_patsfun_49__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_49(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_52__closurerize(env0, env1, env2, env3)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_52(cenv[1], cenv[2], cenv[3], cenv[4]); }, env0, env1, env2, env3];
}


function
_ats2jspre_stream_patsfun_53__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_53(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_56__closurerize(env0)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_56(cenv[1]); }, env0];
}


function
_ats2jspre_stream_patsfun_58__closurerize(env0)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_58(cenv[1]); }, env0];
}


function
_ats2jspre_stream_patsfun_60__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_60(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_65__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return _ats2jspre_stream_patsfun_65(cenv[1], arg0, arg1); }, env0];
}


function
_ats2jspre_stream_patsfun_67__closurerize(env0)
{
  return [function(cenv, arg0, arg1) { return _ats2jspre_stream_patsfun_67(cenv[1], arg0, arg1); }, env0];
}


function
_ats2jspre_stream_patsfun_70__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_70(cenv[1], cenv[2]); }, env0, env1];
}


function
_ats2jspre_stream_patsfun_72__closurerize(env0, env1)
{
  return [function(cenv) { return _ats2jspre_stream_patsfun_72(cenv[1], cenv[2]); }, env0, env1];
}


function
ats2jspre_stream_make_list(arg0)
{
//
// knd = 0
  var tmpret7
  var tmplab, tmplab_js
//
  // __patsflab_stream_make_list
  tmpret7 = ATSPMVlazyval(_ats2jspre_stream_patsfun_6__closurerize(arg0));
  return tmpret7;
} // end-of-function


function
_ats2jspre_stream_patsfun_6(env0)
{
//
// knd = 0
  var tmpret8
  var tmp9
  var tmp10
  var tmp11
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_6
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab0
      if(ATSCKptriscons(env0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab1
      tmpret8 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab2
      case 4: // __atstmplab3
      tmp9 = env0[0];
      tmp10 = env0[1];
      tmp11 = ats2jspre_stream_make_list(tmp10);
      tmpret8 = [tmp9, tmp11];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret8;
} // end-of-function


function
ats2jspre_stream_make_list0(arg0)
{
//
// knd = 0
  var tmpret12
  var tmplab, tmplab_js
//
  // __patsflab_stream_make_list0
  tmpret12 = ats2jspre_stream_make_list(arg0);
  return tmpret12;
} // end-of-function


function
ats2jspre_stream_nth_opt(arg0, arg1)
{
//
// knd = 0
  var tmpret13
  var tmplab, tmplab_js
//
  // __patsflab_stream_nth_opt
  tmpret13 = _ats2jspre_stream_loop_9(arg0, arg1);
  return tmpret13;
} // end-of-function


function
_ats2jspre_stream_loop_9(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret14
  var tmp15
  var tmp16
  var tmp17
  var tmp18
  var tmp19
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_loop_9
    tmp15 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab4
        if(ATSCKptriscons(tmp15)) { tmplab_js = 4; break; }
        case 2: // __atstmplab5
        tmpret14 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab6
        case 4: // __atstmplab7
        tmp16 = tmp15[0];
        tmp17 = tmp15[1];
        tmp18 = ats2jspre_gt_int1_int1(arg1, 0);
        if(tmp18) {
          tmp19 = ats2jspre_pred_int1(arg1);
          // ATStailcalseq_beg
          apy0 = tmp17;
          apy1 = tmp19;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab__ats2jspre_stream_loop_9
          // ATStailcalseq_end
        } else {
          tmpret14 = [tmp16];
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret14;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_length(arg0)
{
//
// knd = 0
  var tmpret20
  var tmplab, tmplab_js
//
  // __patsflab_stream_length
  tmpret20 = _ats2jspre_stream_loop_11(arg0, 0);
  return tmpret20;
} // end-of-function


function
_ats2jspre_stream_loop_11(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret21
  var tmp22
  var tmp24
  var tmp25
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_loop_11
    tmp22 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab8
        if(ATSCKptriscons(tmp22)) { tmplab_js = 4; break; }
        case 2: // __atstmplab9
        tmpret21 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab10
        case 4: // __atstmplab11
        tmp24 = tmp22[1];
        tmp25 = ats2jspre_add_int1_int1(arg1, 1);
        // ATStailcalseq_beg
        apy0 = tmp24;
        apy1 = tmp25;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_loop_11
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret21;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream2list(arg0)
{
//
// knd = 0
  var tmpret26
  var tmplab, tmplab_js
//
  // __patsflab_stream2list
  tmpret26 = _ats2jspre_stream_aux_13(arg0);
  return tmpret26;
} // end-of-function


function
_ats2jspre_stream_aux_13(arg0)
{
//
// knd = 0
  var tmpret27
  var tmp28
  var tmp29
  var tmp30
  var tmp31
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_aux_13
  tmp28 = ATSPMVlazyval_eval(arg0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab12
      if(ATSCKptriscons(tmp28)) { tmplab_js = 4; break; }
      case 2: // __atstmplab13
      tmpret27 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab14
      case 4: // __atstmplab15
      tmp29 = tmp28[0];
      tmp30 = tmp28[1];
      tmp31 = _ats2jspre_stream_aux_13(tmp30);
      tmpret27 = [tmp29, tmp31];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret27;
} // end-of-function


function
ats2jspre_stream2list_rev(arg0)
{
//
// knd = 0
  var tmpret32
  var tmp38
  var tmplab, tmplab_js
//
  // __patsflab_stream2list_rev
  tmp38 = null;
  tmpret32 = _ats2jspre_stream_loop_15(arg0, tmp38);
  return tmpret32;
} // end-of-function


function
_ats2jspre_stream_loop_15(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret33
  var tmp34
  var tmp35
  var tmp36
  var tmp37
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_loop_15
    tmp34 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab16
        if(ATSCKptriscons(tmp34)) { tmplab_js = 4; break; }
        case 2: // __atstmplab17
        tmpret33 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab18
        case 4: // __atstmplab19
        tmp35 = tmp34[0];
        tmp36 = tmp34[1];
        tmp37 = [tmp35, arg1];
        // ATStailcalseq_beg
        apy0 = tmp36;
        apy1 = tmp37;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_loop_15
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret33;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_takeLte(arg0, arg1)
{
//
// knd = 0
  var tmpret39
  var tmplab, tmplab_js
//
  // __patsflab_stream_takeLte
  tmpret39 = ATSPMVllazyval(_ats2jspre_stream_patsfun_17__closurerize(arg0, arg1));
  return tmpret39;
} // end-of-function


function
_ats2jspre_stream_patsfun_17(env0, env1, arg0)
{
//
// knd = 0
  var tmpret40
  var tmp41
  var tmp42
  var tmp43
  var tmp44
  var tmp45
  var tmp46
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_17
  if(arg0) {
    tmp41 = ats2jspre_gt_int1_int1(env1, 0);
    if(tmp41) {
      tmp42 = ATSPMVlazyval_eval(env0); 
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab20
          if(ATSCKptriscons(tmp42)) { tmplab_js = 4; break; }
          case 2: // __atstmplab21
          tmpret40 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab22
          case 4: // __atstmplab23
          tmp43 = tmp42[0];
          tmp44 = tmp42[1];
          tmp46 = ats2jspre_sub_int1_int1(env1, 1);
          tmp45 = ats2jspre_stream_takeLte(tmp44, tmp46);
          tmpret40 = [tmp43, tmp45];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
    } else {
      tmpret40 = null;
    } // endif
  } else {
  } // endif
  return tmpret40;
} // end-of-function


function
ats2jspre_stream_take_opt(arg0, arg1)
{
//
// knd = 0
  var tmpret47
  var tmp56
  var tmplab, tmplab_js
//
  // __patsflab_stream_take_opt
  tmp56 = null;
  tmpret47 = _ats2jspre_stream_auxmain_19(arg1, arg0, 0, tmp56);
  return tmpret47;
} // end-of-function


function
_ats2jspre_stream_auxmain_19(env0, arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret48
  var tmp49
  var tmp50
  var tmp51
  var tmp52
  var tmp53
  var tmp54
  var tmp55
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_auxmain_19
    tmp49 = ats2jspre_lt_int1_int1(arg1, env0);
    if(tmp49) {
      tmp50 = ATSPMVlazyval_eval(arg0); 
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab24
          if(ATSCKptriscons(tmp50)) { tmplab_js = 4; break; }
          case 2: // __atstmplab25
          tmpret48 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab26
          case 4: // __atstmplab27
          tmp51 = tmp50[0];
          tmp52 = tmp50[1];
          tmp53 = ats2jspre_add_int1_int1(arg1, 1);
          tmp54 = [tmp51, arg2];
          // ATStailcalseq_beg
          apy0 = tmp52;
          apy1 = tmp53;
          apy2 = tmp54;
          arg0 = apy0;
          arg1 = apy1;
          arg2 = apy2;
          funlab_js = 1; // __patsflab__ats2jspre_stream_auxmain_19
          // ATStailcalseq_end
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
    } else {
      tmp55 = ats2jspre_list_reverse(arg2);
      tmpret48 = [tmp55];
    } // endif
    if (funlab_js > 0) continue; else return tmpret48;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_drop_opt(arg0, arg1)
{
//
// knd = 0
  var tmpret57
  var tmplab, tmplab_js
//
  // __patsflab_stream_drop_opt
  tmpret57 = _ats2jspre_stream_auxmain_21(arg1, arg0, 0);
  return tmpret57;
} // end-of-function


function
_ats2jspre_stream_auxmain_21(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret58
  var tmp59
  var tmp60
  var tmp62
  var tmp63
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_auxmain_21
    tmp59 = ats2jspre_lt_int1_int1(arg1, env0);
    if(tmp59) {
      tmp60 = ATSPMVlazyval_eval(arg0); 
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab28
          if(ATSCKptriscons(tmp60)) { tmplab_js = 4; break; }
          case 2: // __atstmplab29
          tmpret58 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab30
          case 4: // __atstmplab31
          tmp62 = tmp60[1];
          tmp63 = ats2jspre_add_int1_int1(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp62;
          apy1 = tmp63;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab__ats2jspre_stream_auxmain_21
          // ATStailcalseq_end
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
    } else {
      tmpret58 = [arg0];
    } // endif
    if (funlab_js > 0) continue; else return tmpret58;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_append(arg0, arg1)
{
//
// knd = 0
  var tmpret64
  var tmplab, tmplab_js
//
  // __patsflab_stream_append
  tmpret64 = ATSPMVlazyval(_ats2jspre_stream_patsfun_23__closurerize(arg0, arg1));
  return tmpret64;
} // end-of-function


function
_ats2jspre_stream_patsfun_23(env0, env1)
{
//
// knd = 0
  var tmpret65
  var tmp66
  var tmp67
  var tmp68
  var tmp69
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_23
  tmp66 = ATSPMVlazyval_eval(env0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab32
      if(ATSCKptriscons(tmp66)) { tmplab_js = 4; break; }
      case 2: // __atstmplab33
      tmpret65 = ATSPMVlazyval_eval(env1); 
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab34
      case 4: // __atstmplab35
      tmp67 = tmp66[0];
      tmp68 = tmp66[1];
      tmp69 = ats2jspre_stream_append(tmp68, env1);
      tmpret65 = [tmp67, tmp69];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret65;
} // end-of-function


function
ats2jspre_stream_concat(arg0)
{
//
// knd = 0
  var tmpret70
  var tmplab, tmplab_js
//
  // __patsflab_stream_concat
  tmpret70 = ATSPMVlazyval(_ats2jspre_stream_patsfun_25__closurerize(arg0));
  return tmpret70;
} // end-of-function


function
_ats2jspre_stream_patsfun_25(env0)
{
//
// knd = 0
  var tmpret71
  var tmp72
  var tmp73
  var tmp74
  var tmp75
  var tmp76
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_25
  tmp72 = ATSPMVlazyval_eval(env0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab36
      if(ATSCKptriscons(tmp72)) { tmplab_js = 4; break; }
      case 2: // __atstmplab37
      tmpret71 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab38
      case 4: // __atstmplab39
      tmp73 = tmp72[0];
      tmp74 = tmp72[1];
      tmp76 = ats2jspre_stream_concat(tmp74);
      tmp75 = ats2jspre_stream_append(tmp73, tmp76);
      tmpret71 = ATSPMVlazyval_eval(tmp75); 
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret71;
} // end-of-function


function
ats2jspre_stream_map_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret77
  var tmplab, tmplab_js
//
  // __patsflab_stream_map_cloref
  tmpret77 = ATSPMVlazyval(_ats2jspre_stream_patsfun_27__closurerize(arg0, arg1));
  return tmpret77;
} // end-of-function


function
_ats2jspre_stream_patsfun_27(env0, env1)
{
//
// knd = 0
  var tmpret78
  var tmp79
  var tmp80
  var tmp81
  var tmp82
  var tmp83
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_27
  tmp79 = ATSPMVlazyval_eval(env0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab40
      if(ATSCKptriscons(tmp79)) { tmplab_js = 4; break; }
      case 2: // __atstmplab41
      tmpret78 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab42
      case 4: // __atstmplab43
      tmp80 = tmp79[0];
      tmp81 = tmp79[1];
      tmp82 = env1[0](env1, tmp80);
      tmp83 = ats2jspre_stream_map_cloref(tmp81, env1);
      tmpret78 = [tmp82, tmp83];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret78;
} // end-of-function


function
ats2jspre_stream_map_method(arg0, arg1)
{
//
// knd = 0
  var tmpret84
  var tmplab, tmplab_js
//
  // __patsflab_stream_map_method
  tmpret84 = _ats2jspre_stream_patsfun_29__closurerize(arg0);
  return tmpret84;
} // end-of-function


function
_ats2jspre_stream_patsfun_29(env0, arg0)
{
//
// knd = 0
  var tmpret85
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_29
  tmpret85 = ats2jspre_stream_map_cloref(env0, arg0);
  return tmpret85;
} // end-of-function


function
ats2jspre_stream_filter_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret86
  var tmplab, tmplab_js
//
  // __patsflab_stream_filter_cloref
  tmpret86 = ATSPMVlazyval(_ats2jspre_stream_patsfun_31__closurerize(arg0, arg1));
  return tmpret86;
} // end-of-function


function
_ats2jspre_stream_patsfun_31(env0, env1)
{
//
// knd = 0
  var tmpret87
  var tmp88
  var tmp89
  var tmp90
  var tmp91
  var tmp92
  var tmp93
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_31
  tmp88 = ATSPMVlazyval_eval(env0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab44
      if(ATSCKptriscons(tmp88)) { tmplab_js = 4; break; }
      case 2: // __atstmplab45
      tmpret87 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab46
      case 4: // __atstmplab47
      tmp89 = tmp88[0];
      tmp90 = tmp88[1];
      tmp91 = env1[0](env1, tmp89);
      if(tmp91) {
        tmp92 = ats2jspre_stream_filter_cloref(tmp90, env1);
        tmpret87 = [tmp89, tmp92];
      } else {
        tmp93 = ats2jspre_stream_filter_cloref(tmp90, env1);
        tmpret87 = ATSPMVlazyval_eval(tmp93); 
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret87;
} // end-of-function


function
ats2jspre_stream_filter_method(arg0)
{
//
// knd = 0
  var tmpret94
  var tmplab, tmplab_js
//
  // __patsflab_stream_filter_method
  tmpret94 = _ats2jspre_stream_patsfun_33__closurerize(arg0);
  return tmpret94;
} // end-of-function


function
_ats2jspre_stream_patsfun_33(env0, arg0)
{
//
// knd = 0
  var tmpret95
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_33
  tmpret95 = ats2jspre_stream_filter_cloref(env0, arg0);
  return tmpret95;
} // end-of-function


function
ats2jspre_stream_forall_cloref(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret96
  var tmp97
  var tmp98
  var tmp99
  var tmp100
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_stream_forall_cloref
    tmp97 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab48
        if(ATSCKptriscons(tmp97)) { tmplab_js = 4; break; }
        case 2: // __atstmplab49
        tmpret96 = true;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab50
        case 4: // __atstmplab51
        tmp98 = tmp97[0];
        tmp99 = tmp97[1];
        tmp100 = arg1[0](arg1, tmp98);
        if(tmp100) {
          // ATStailcalseq_beg
          apy0 = tmp99;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_stream_forall_cloref
          // ATStailcalseq_end
        } else {
          tmpret96 = false;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret96;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_forall_method(arg0)
{
//
// knd = 0
  var tmpret101
  var tmplab, tmplab_js
//
  // __patsflab_stream_forall_method
  tmpret101 = _ats2jspre_stream_patsfun_36__closurerize(arg0);
  return tmpret101;
} // end-of-function


function
_ats2jspre_stream_patsfun_36(env0, arg0)
{
//
// knd = 0
  var tmpret102
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_36
  tmpret102 = ats2jspre_stream_forall_cloref(env0, arg0);
  return tmpret102;
} // end-of-function


function
ats2jspre_stream_exists_cloref(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret103
  var tmp104
  var tmp105
  var tmp106
  var tmp107
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_stream_exists_cloref
    tmp104 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab52
        if(ATSCKptriscons(tmp104)) { tmplab_js = 4; break; }
        case 2: // __atstmplab53
        tmpret103 = false;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab54
        case 4: // __atstmplab55
        tmp105 = tmp104[0];
        tmp106 = tmp104[1];
        tmp107 = arg1[0](arg1, tmp105);
        if(tmp107) {
          tmpret103 = true;
        } else {
          // ATStailcalseq_beg
          apy0 = tmp106;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_stream_exists_cloref
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret103;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_exists_method(arg0)
{
//
// knd = 0
  var tmpret108
  var tmplab, tmplab_js
//
  // __patsflab_stream_exists_method
  tmpret108 = _ats2jspre_stream_patsfun_39__closurerize(arg0);
  return tmpret108;
} // end-of-function


function
_ats2jspre_stream_patsfun_39(env0, arg0)
{
//
// knd = 0
  var tmpret109
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_39
  tmpret109 = ats2jspre_stream_exists_cloref(env0, arg0);
  return tmpret109;
} // end-of-function


function
ats2jspre_stream_foreach_cloref(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp111
  var tmp112
  var tmp113
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_stream_foreach_cloref
    tmp111 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab56
        if(ATSCKptriscons(tmp111)) { tmplab_js = 4; break; }
        case 2: // __atstmplab57
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab58
        case 4: // __atstmplab59
        tmp112 = tmp111[0];
        tmp113 = tmp111[1];
        arg1[0](arg1, tmp112);
        // ATStailcalseq_beg
        apy0 = tmp113;
        apy1 = arg1;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_stream_foreach_cloref
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_foreach_method(arg0)
{
//
// knd = 0
  var tmpret115
  var tmplab, tmplab_js
//
  // __patsflab_stream_foreach_method
  tmpret115 = _ats2jspre_stream_patsfun_42__closurerize(arg0);
  return tmpret115;
} // end-of-function


function
_ats2jspre_stream_patsfun_42(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_42
  ats2jspre_stream_foreach_cloref(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_iforeach_cloref(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_stream_iforeach_cloref
  _ats2jspre_stream_loop_44(arg1, 0, arg0);
  return/*_void*/;
} // end-of-function


function
_ats2jspre_stream_loop_44(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp119
  var tmp120
  var tmp121
  var tmp123
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_loop_44
    tmp119 = ATSPMVlazyval_eval(arg1); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab60
        if(ATSCKptriscons(tmp119)) { tmplab_js = 4; break; }
        case 2: // __atstmplab61
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab62
        case 4: // __atstmplab63
        tmp120 = tmp119[0];
        tmp121 = tmp119[1];
        env0[0](env0, arg0, tmp120);
        tmp123 = ats2jspre_add_int1_int1(arg0, 1);
        // ATStailcalseq_beg
        apy0 = tmp123;
        apy1 = tmp121;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_loop_44
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_iforeach_method(arg0)
{
//
// knd = 0
  var tmpret124
  var tmplab, tmplab_js
//
  // __patsflab_stream_iforeach_method
  tmpret124 = _ats2jspre_stream_patsfun_46__closurerize(arg0);
  return tmpret124;
} // end-of-function


function
_ats2jspre_stream_patsfun_46(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_46
  ats2jspre_stream_iforeach_cloref(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_tabulate_cloref(arg0)
{
//
// knd = 0
  var tmpret126
  var tmplab, tmplab_js
//
  // __patsflab_stream_tabulate_cloref
  tmpret126 = _ats2jspre_stream_auxmain_48(arg0, 0);
  return tmpret126;
} // end-of-function


function
_ats2jspre_stream_auxmain_48(env0, arg0)
{
//
// knd = 0
  var tmpret127
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_auxmain_48
  tmpret127 = ATSPMVlazyval(_ats2jspre_stream_patsfun_49__closurerize(env0, arg0));
  return tmpret127;
} // end-of-function


function
_ats2jspre_stream_patsfun_49(env0, env1)
{
//
// knd = 0
  var tmpret128
  var tmp129
  var tmp130
  var tmp131
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_49
  tmp129 = env0[0](env0, env1);
  tmp131 = ats2jspre_add_int1_int1(env1, 1);
  tmp130 = _ats2jspre_stream_auxmain_48(env0, tmp131);
  tmpret128 = [tmp129, tmp130];
  return tmpret128;
} // end-of-function


function
ats2jspre_cross_stream_list(arg0, arg1)
{
//
// knd = 0
  var tmpret132
  var tmplab, tmplab_js
//
  // __patsflab_cross_stream_list
  tmpret132 = ATSPMVlazyval(_ats2jspre_stream_patsfun_53__closurerize(arg0, arg1));
  return tmpret132;
} // end-of-function


function
_ats2jspre_stream_auxmain_51(arg0, arg1, arg2, arg3)
{
//
// knd = 0
  var tmpret133
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_auxmain_51
  tmpret133 = ATSPMVlazyval(_ats2jspre_stream_patsfun_52__closurerize(arg0, arg1, arg2, arg3));
  return tmpret133;
} // end-of-function


function
_ats2jspre_stream_patsfun_52(env0, env1, env2, env3)
{
//
// knd = 0
  var tmpret134
  var tmp135
  var tmp136
  var tmp137
  var tmp138
  var tmp139
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_52
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab64
      if(ATSCKptriscons(env3)) { tmplab_js = 4; break; }
      case 2: // __atstmplab65
      tmp137 = ats2jspre_cross_stream_list(env1, env2);
      tmpret134 = ATSPMVlazyval_eval(tmp137); 
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab66
      case 4: // __atstmplab67
      tmp135 = env3[0];
      tmp136 = env3[1];
      tmp138 = [env0, tmp135];
      tmp139 = _ats2jspre_stream_auxmain_51(env0, env1, env2, tmp136);
      tmpret134 = [tmp138, tmp139];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret134;
} // end-of-function


function
_ats2jspre_stream_patsfun_53(env0, env1)
{
//
// knd = 0
  var tmpret140
  var tmp141
  var tmp142
  var tmp143
  var tmp144
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_53
  tmp141 = ATSPMVlazyval_eval(env0); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab68
      if(ATSCKptriscons(tmp141)) { tmplab_js = 4; break; }
      case 2: // __atstmplab69
      tmpret140 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab70
      if(ATSCKptrisnull(tmp141)) ATSINScaseof_fail("/home/hwxi/Research/ATS-Postiats-contrib/contrib/libatscc/DATS/stream.dats: 6907(line=451, offs=1) -- 6999(line=453, offs=50)");
      case 4: // __atstmplab71
      tmp142 = tmp141[0];
      tmp143 = tmp141[1];
      tmp144 = _ats2jspre_stream_auxmain_51(tmp142, tmp143, env1, env1);
      tmpret140 = ATSPMVlazyval_eval(tmp144); 
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret140;
} // end-of-function


function
ats2jspre_cross_stream_list0(arg0, arg1)
{
//
// knd = 0
  var tmpret145
  var tmplab, tmplab_js
//
  // __patsflab_cross_stream_list0
  tmpret145 = ats2jspre_cross_stream_list(arg0, arg1);
  return tmpret145;
} // end-of-function


function
ats2jspre_stream2cloref_exn(arg0)
{
//
// knd = 0
  var tmpret146
  var tmp147
  var tmplab, tmplab_js
//
  // __patsflab_stream2cloref_exn
  tmp147 = ats2jspre_ref(arg0);
  tmpret146 = _ats2jspre_stream_patsfun_56__closurerize(tmp147);
  return tmpret146;
} // end-of-function


function
_ats2jspre_stream_patsfun_56(env0)
{
//
// knd = 0
  var tmpret148
  var tmp149
  var tmp150
  var tmp151
  var tmp152
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_56
  tmp149 = ats2jspre_ref_get_elt(env0);
  tmp150 = ATSPMVlazyval_eval(tmp149); 
  if(ATSCKptrisnull(tmp150)) ATSINScaseof_fail("/home/hwxi/Research/ATS-Postiats-contrib/contrib/libatscc/DATS/stream.dats: 7300(line=479, offs=5) -- 7324(line=479, offs=29)");
  tmp151 = tmp150[0];
  tmp152 = tmp150[1];
  ats2jspre_ref_set_elt(env0, tmp152);
  tmpret148 = tmp151;
  return tmpret148;
} // end-of-function


function
ats2jspre_stream2cloref_opt(arg0)
{
//
// knd = 0
  var tmpret154
  var tmp155
  var tmplab, tmplab_js
//
  // __patsflab_stream2cloref_opt
  tmp155 = ats2jspre_ref(arg0);
  tmpret154 = _ats2jspre_stream_patsfun_58__closurerize(tmp155);
  return tmpret154;
} // end-of-function


function
_ats2jspre_stream_patsfun_58(env0)
{
//
// knd = 0
  var tmpret156
  var tmp157
  var tmp158
  var tmp159
  var tmp160
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_58
  tmp157 = ats2jspre_ref_get_elt(env0);
  tmp158 = ATSPMVlazyval_eval(tmp157); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab72
      if(ATSCKptriscons(tmp158)) { tmplab_js = 4; break; }
      case 2: // __atstmplab73
      tmpret156 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab74
      case 4: // __atstmplab75
      tmp159 = tmp158[0];
      tmp160 = tmp158[1];
      ats2jspre_ref_set_elt(env0, tmp160);
      tmpret156 = [tmp159];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret156;
} // end-of-function


function
ats2jspre_stream2cloref_last(arg0, arg1)
{
//
// knd = 0
  var tmpret162
  var tmp163
  var tmp164
  var tmplab, tmplab_js
//
  // __patsflab_stream2cloref_last
  tmp163 = ats2jspre_ref(arg0);
  tmp164 = ats2jspre_ref(arg1);
  tmpret162 = _ats2jspre_stream_patsfun_60__closurerize(tmp163, tmp164);
  return tmpret162;
} // end-of-function


function
_ats2jspre_stream_patsfun_60(env0, env1)
{
//
// knd = 0
  var tmpret165
  var tmp166
  var tmp167
  var tmp168
  var tmp169
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_60
  tmp166 = ats2jspre_ref_get_elt(env0);
  tmp167 = ATSPMVlazyval_eval(tmp166); 
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab76
      if(ATSCKptriscons(tmp167)) { tmplab_js = 4; break; }
      case 2: // __atstmplab77
      tmpret165 = ats2jspre_ref_get_elt(env1);
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab78
      case 4: // __atstmplab79
      tmp168 = tmp167[0];
      tmp169 = tmp167[1];
      ats2jspre_ref_set_elt(env0, tmp169);
      ats2jspre_ref_set_elt(env1, tmp168);
      tmpret165 = tmp168;
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret165;
} // end-of-function


function
ats2jspre_stream_take_while_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret172
  var tmp173
  var tmp174
  var tmp175
  var tmp176
  var tmplab, tmplab_js
//
  // __patsflab_stream_take_while_cloref
  tmp173 = ats2jspre_stream_rtake_while_cloref(arg0, arg1);
  tmp174 = tmp173[0];
  tmp175 = tmp173[1];
  tmp176 = ats2jspre_list_reverse(tmp175);
  tmpret172 = [tmp174, tmp176];
  return tmpret172;
} // end-of-function


function
ats2jspre_stream_rtake_while_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret177
  var tmp185
  var tmplab, tmplab_js
//
  // __patsflab_stream_rtake_while_cloref
  tmp185 = null;
  tmpret177 = _ats2jspre_stream_loop_63(arg1, arg0, 0, tmp185);
  return tmpret177;
} // end-of-function


function
_ats2jspre_stream_loop_63(env0, arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret178
  var tmp179
  var tmp180
  var tmp181
  var tmp182
  var tmp183
  var tmp184
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_loop_63
    tmp179 = ATSPMVlazyval_eval(arg0); 
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab80
        if(ATSCKptriscons(tmp179)) { tmplab_js = 4; break; }
        case 2: // __atstmplab81
        tmpret178 = [arg0, arg2];
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab82
        case 4: // __atstmplab83
        tmp180 = tmp179[0];
        tmp181 = tmp179[1];
        tmp182 = env0[0](env0, arg1, tmp180);
        if(tmp182) {
          tmp183 = ats2jspre_add_int1_int1(arg1, 1);
          tmp184 = [tmp180, arg2];
          // ATStailcalseq_beg
          apy0 = tmp181;
          apy1 = tmp183;
          apy2 = tmp184;
          arg0 = apy0;
          arg1 = apy1;
          arg2 = apy2;
          funlab_js = 1; // __patsflab__ats2jspre_stream_loop_63
          // ATStailcalseq_end
        } else {
          tmpret178 = [arg0, arg2];
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret178;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_take_until_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret186
  var tmplab, tmplab_js
//
  // __patsflab_stream_take_until_cloref
  tmpret186 = ats2jspre_stream_take_while_cloref(arg0, _ats2jspre_stream_patsfun_65__closurerize(arg1));
  return tmpret186;
} // end-of-function


function
_ats2jspre_stream_patsfun_65(env0, arg0, arg1)
{
//
// knd = 0
  var tmpret187
  var tmp188
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_65
  tmp188 = env0[0](env0, arg0, arg1);
  tmpret187 = atspre_neg_bool0(tmp188);
  return tmpret187;
} // end-of-function


function
ats2jspre_stream_rtake_until_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret189
  var tmplab, tmplab_js
//
  // __patsflab_stream_rtake_until_cloref
  tmpret189 = ats2jspre_stream_rtake_while_cloref(arg0, _ats2jspre_stream_patsfun_67__closurerize(arg1));
  return tmpret189;
} // end-of-function


function
_ats2jspre_stream_patsfun_67(env0, arg0, arg1)
{
//
// knd = 0
  var tmpret190
  var tmp191
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_67
  tmp191 = env0[0](env0, arg0, arg1);
  tmpret190 = atspre_neg_bool0(tmp191);
  return tmpret190;
} // end-of-function


function
ats2jspre_stream_list_xprod2(arg0, arg1)
{
//
// knd = 0
  var tmpret192
  var tmplab, tmplab_js
//
  // __patsflab_stream_list_xprod2
  tmpret192 = _ats2jspre_stream_auxlst_71(arg0, arg1);
  return tmpret192;
} // end-of-function


function
_ats2jspre_stream_aux_69(arg0, arg1)
{
//
// knd = 0
  var tmpret193
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_aux_69
  tmpret193 = ATSPMVlazyval(_ats2jspre_stream_patsfun_70__closurerize(arg0, arg1));
  return tmpret193;
} // end-of-function


function
_ats2jspre_stream_patsfun_70(env0, env1)
{
//
// knd = 0
  var tmpret194
  var tmp195
  var tmp196
  var tmp197
  var tmp198
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_70
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab84
      if(ATSCKptriscons(env1)) { tmplab_js = 4; break; }
      case 2: // __atstmplab85
      tmpret194 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab86
      case 4: // __atstmplab87
      tmp195 = env1[0];
      tmp196 = env1[1];
      tmp197 = [env0, tmp195];
      tmp198 = _ats2jspre_stream_aux_69(env0, tmp196);
      tmpret194 = [tmp197, tmp198];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret194;
} // end-of-function


function
_ats2jspre_stream_auxlst_71(arg0, arg1)
{
//
// knd = 0
  var tmpret199
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_auxlst_71
  tmpret199 = ATSPMVlazyval(_ats2jspre_stream_patsfun_72__closurerize(arg0, arg1));
  return tmpret199;
} // end-of-function


function
_ats2jspre_stream_patsfun_72(env0, env1)
{
//
// knd = 0
  var tmpret200
  var tmp201
  var tmp202
  var tmp203
  var tmp204
  var tmp205
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_patsfun_72
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab88
      if(ATSCKptriscons(env0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab89
      tmpret200 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab90
      case 4: // __atstmplab91
      tmp201 = env0[0];
      tmp202 = env0[1];
      tmp204 = _ats2jspre_stream_aux_69(tmp201, env1);
      tmp205 = _ats2jspre_stream_auxlst_71(tmp202, env1);
      tmp203 = ats2jspre_stream_append(tmp204, tmp205);
      tmpret200 = ATSPMVlazyval_eval(tmp203); 
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret200;
} // end-of-function


function
ats2jspre_stream_nth_exn(arg0, arg1)
{
//
// knd = 0
  var tmpret206
  var tmp207
  var tmp208
  var tmplab, tmplab_js
//
  // __patsflab_stream_nth_exn
  tmp207 = ats2jspre_stream_nth_opt(arg0, arg1);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab92
      if(ATSCKptrisnull(tmp207)) { tmplab_js = 4; break; }
      case 2: // __atstmplab93
      tmp208 = tmp207[0];
      // ATSINSfreecon(tmp207);
      tmpret206 = tmp208;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab94
      case 4: // __atstmplab95
      tmpret206 = ats2jspre_StreamSubscriptExn_throw();
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret206;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
