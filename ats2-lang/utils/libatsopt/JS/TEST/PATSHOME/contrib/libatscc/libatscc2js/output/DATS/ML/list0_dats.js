/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2016-12-25: 21h:46m
**
*/

function
_ats2jspre_ML_list0_patsfun_27__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_27(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_30__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_30(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_33__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_33(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_36__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_36(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_40__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_40(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_43__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_43(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_46__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_46(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_49__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_49(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_52__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_52(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_56__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_56(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_62__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_62(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
ats2jspre_ML_list0_head_opt(arg0)
{
//
// knd = 0
  var tmpret7
  var tmp8
  var tmplab, tmplab_js
//
  // __patsflab_list0_head_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab6
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab7
      tmpret7 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab8
      case 4: // __atstmplab9
      tmp8 = arg0[0];
      tmpret7 = [tmp8];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret7;
} // end-of-function


function
ats2jspre_ML_list0_tail_opt(arg0)
{
//
// knd = 0
  var tmpret10
  var tmp12
  var tmplab, tmplab_js
//
  // __patsflab_list0_tail_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab10
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab11
      tmpret10 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab12
      case 4: // __atstmplab13
      tmp12 = arg0[1];
      tmpret10 = [tmp12];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret10;
} // end-of-function


function
ats2jspre_ML_list0_length(arg0)
{
//
// knd = 0
  var tmpret13
  var tmplab, tmplab_js
//
  // __patsflab_list0_length
  tmpret13 = ats2jspre_list_length(arg0);
  return tmpret13;
} // end-of-function


function
ats2jspre_ML_list0_last_opt(arg0)
{
//
// knd = 0
  var tmpret14
  var tmp18
  var tmp19
  var tmp20
  var tmplab, tmplab_js
//
  // __patsflab_list0_last_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab18
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab19
      tmpret14 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab20
      case 4: // __atstmplab21
      tmp18 = arg0[0];
      tmp19 = arg0[1];
      tmp20 = _ats2jspre_ML_list0_loop_8(tmp18, tmp19);
      tmpret14 = [tmp20];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret14;
} // end-of-function


function
_ats2jspre_ML_list0_loop_8(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret15
  var tmp16
  var tmp17
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_ML_list0_loop_8
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab14
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab15
        tmpret15 = arg0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab16
        case 4: // __atstmplab17
        tmp16 = arg1[0];
        tmp17 = arg1[1];
        // ATStailcalseq_beg
        apy0 = tmp16;
        apy1 = tmp17;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_ML_list0_loop_8
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret15;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_get_at_opt(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_get_at_opt
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab22
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab23
        tmpret21 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab24
        case 4: // __atstmplab25
        tmp22 = arg0[0];
        tmp23 = arg0[1];
        tmp24 = ats2jspre_gt_int1_int1(arg1, 0);
        if(tmp24) {
          tmp25 = ats2jspre_sub_int1_int1(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp23;
          apy1 = tmp25;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_get_at_opt
          // ATStailcalseq_end
        } else {
          tmpret21 = [tmp22];
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret21;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_make_intrange_2(arg0, arg1)
{
//
// knd = 0
  var tmpret26
  var tmp27
  var tmplab, tmplab_js
//
  // __patsflab_list0_make_intrange_2
  tmp27 = ats2jspre_list_make_intrange_2(arg0, arg1);
  tmpret26 = tmp27;
  return tmpret26;
} // end-of-function


function
ats2jspre_ML_list0_make_intrange_3(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret28
  var tmp29
  var tmplab, tmplab_js
//
  // __patsflab_list0_make_intrange_3
  tmp29 = ats2jspre_list_make_intrange_3(arg0, arg1, arg2);
  tmpret28 = tmp29;
  return tmpret28;
} // end-of-function


function
ats2jspre_ML_list0_snoc(arg0, arg1)
{
//
// knd = 0
  var tmpret41
  var tmp42
  var tmplab, tmplab_js
//
  // __patsflab_list0_snoc
  tmp42 = ats2jspre_list_snoc(arg0, arg1);
  tmpret41 = tmp42;
  return tmpret41;
} // end-of-function


function
ats2jspre_ML_list0_extend(arg0, arg1)
{
//
// knd = 0
  var tmpret43
  var tmp44
  var tmplab, tmplab_js
//
  // __patsflab_list0_extend
  tmp44 = ats2jspre_list_extend(arg0, arg1);
  tmpret43 = tmp44;
  return tmpret43;
} // end-of-function


function
ats2jspre_ML_list0_append(arg0, arg1)
{
//
// knd = 0
  var tmpret45
  var tmp46
  var tmplab, tmplab_js
//
  // __patsflab_list0_append
  tmp46 = ats2jspre_list_append(arg0, arg1);
  tmpret45 = tmp46;
  return tmpret45;
} // end-of-function


function
ats2jspre_ML_list0_reverse(arg0)
{
//
// knd = 0
  var tmpret47
  var tmp48
  var tmplab, tmplab_js
//
  // __patsflab_list0_reverse
  tmp48 = ats2jspre_list_reverse(arg0);
  tmpret47 = tmp48;
  return tmpret47;
} // end-of-function


function
ats2jspre_ML_list0_reverse_append(arg0, arg1)
{
//
// knd = 0
  var tmpret49
  var tmp50
  var tmplab, tmplab_js
//
  // __patsflab_list0_reverse_append
  tmp50 = ats2jspre_list_reverse_append(arg0, arg1);
  tmpret49 = tmp50;
  return tmpret49;
} // end-of-function


function
ats2jspre_ML_list0_concat(arg0)
{
//
// knd = 0
  var tmpret51
  var tmp52
  var tmplab, tmplab_js
//
  // __patsflab_list0_concat
  tmp52 = ats2jspre_list_concat(arg0);
  tmpret51 = tmp52;
  return tmpret51;
} // end-of-function


function
ats2jspre_ML_list0_remove_at_opt(arg0, arg1)
{
//
// knd = 0
  var tmpret53
  var tmplab, tmplab_js
//
  // __patsflab_list0_remove_at_opt
  tmpret53 = _ats2jspre_ML_list0_aux_24(arg0, 0);
  return tmpret53;
} // end-of-function


function
_ats2jspre_ML_list0_aux_24(arg0, arg1)
{
//
// knd = 0
  var tmpret54
  var tmp55
  var tmp56
  var tmp57
  var tmp58
  var tmp59
  var tmp60
  var tmp61
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_24
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab30
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab31
      tmpret54 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab32
      case 4: // __atstmplab33
      tmp55 = arg0[0];
      tmp56 = arg0[1];
      tmp57 = ats2jspre_gt_int1_int1(arg1, 0);
      if(tmp57) {
        tmp59 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp58 = _ats2jspre_ML_list0_aux_24(tmp56, tmp59);
        // ATScaseofseq_beg
        tmplab_js = 1;
        while(true) {
          tmplab = tmplab_js; tmplab_js = 0;
          switch(tmplab) {
            // ATSbranchseq_beg
            case 1: // __atstmplab34
            if(ATSCKptriscons(tmp58)) { tmplab_js = 4; break; }
            case 2: // __atstmplab35
            tmpret54 = null;
            break;
            // ATSbranchseq_end
            // ATSbranchseq_beg
            case 3: // __atstmplab36
            case 4: // __atstmplab37
            tmp60 = tmp58[0];
            tmp61 = [tmp55, tmp60];
            tmpret54 = [tmp61];
            break;
            // ATSbranchseq_end
          } // end-of-switch
          if (tmplab_js === 0) break;
        } // endwhile
        // ATScaseofseq_end
      } else {
        tmpret54 = [tmp56];
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret54;
} // end-of-function


function
ats2jspre_ML_list0_exists(arg0, arg1)
{
//
// knd = 0
  var tmpret62
  var tmplab, tmplab_js
//
  // __patsflab_list0_exists
  tmpret62 = ats2jspre_list_exists(arg0, arg1);
  return tmpret62;
} // end-of-function


function
ats2jspre_ML_list0_exists_method(arg0)
{
//
// knd = 0
  var tmpret63
  var tmplab, tmplab_js
//
  // __patsflab_list0_exists_method
  tmpret63 = _ats2jspre_ML_list0_patsfun_27__closurerize(arg0);
  return tmpret63;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_27(env0, arg0)
{
//
// knd = 0
  var tmpret64
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_27
  tmpret64 = ats2jspre_ML_list0_exists(env0, arg0);
  return tmpret64;
} // end-of-function


function
ats2jspre_ML_list0_iexists(arg0, arg1)
{
//
// knd = 0
  var tmpret65
  var tmplab, tmplab_js
//
  // __patsflab_list0_iexists
  tmpret65 = ats2jspre_list_iexists(arg0, arg1);
  return tmpret65;
} // end-of-function


function
ats2jspre_ML_list0_iexists_method(arg0)
{
//
// knd = 0
  var tmpret66
  var tmplab, tmplab_js
//
  // __patsflab_list0_iexists_method
  tmpret66 = _ats2jspre_ML_list0_patsfun_30__closurerize(arg0);
  return tmpret66;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_30(env0, arg0)
{
//
// knd = 0
  var tmpret67
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_30
  tmpret67 = ats2jspre_ML_list0_iexists(env0, arg0);
  return tmpret67;
} // end-of-function


function
ats2jspre_ML_list0_forall(arg0, arg1)
{
//
// knd = 0
  var tmpret68
  var tmplab, tmplab_js
//
  // __patsflab_list0_forall
  tmpret68 = ats2jspre_list_forall(arg0, arg1);
  return tmpret68;
} // end-of-function


function
ats2jspre_ML_list0_forall_method(arg0)
{
//
// knd = 0
  var tmpret69
  var tmplab, tmplab_js
//
  // __patsflab_list0_forall_method
  tmpret69 = _ats2jspre_ML_list0_patsfun_33__closurerize(arg0);
  return tmpret69;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_33(env0, arg0)
{
//
// knd = 0
  var tmpret70
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_33
  tmpret70 = ats2jspre_ML_list0_forall(env0, arg0);
  return tmpret70;
} // end-of-function


function
ats2jspre_ML_list0_iforall(arg0, arg1)
{
//
// knd = 0
  var tmpret71
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforall
  tmpret71 = ats2jspre_list_iforall(arg0, arg1);
  return tmpret71;
} // end-of-function


function
ats2jspre_ML_list0_iforall_method(arg0)
{
//
// knd = 0
  var tmpret72
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforall_method
  tmpret72 = _ats2jspre_ML_list0_patsfun_36__closurerize(arg0);
  return tmpret72;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_36(env0, arg0)
{
//
// knd = 0
  var tmpret73
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_36
  tmpret73 = ats2jspre_ML_list0_iforall(env0, arg0);
  return tmpret73;
} // end-of-function


function
ats2jspre_ML_list0_app(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_app
  ats2jspre_ML_list0_foreach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_foreach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_foreach
  ats2jspre_list_foreach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_foreach_method(arg0)
{
//
// knd = 0
  var tmpret76
  var tmplab, tmplab_js
//
  // __patsflab_list0_foreach_method
  tmpret76 = _ats2jspre_ML_list0_patsfun_40__closurerize(arg0);
  return tmpret76;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_40(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_40
  ats2jspre_ML_list0_foreach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_iforeach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforeach
  ats2jspre_list_iforeach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_iforeach_method(arg0)
{
//
// knd = 0
  var tmpret79
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforeach_method
  tmpret79 = _ats2jspre_ML_list0_patsfun_43__closurerize(arg0);
  return tmpret79;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_43(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_43
  ats2jspre_ML_list0_iforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_rforeach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_rforeach
  ats2jspre_list_rforeach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_rforeach_method(arg0)
{
//
// knd = 0
  var tmpret82
  var tmplab, tmplab_js
//
  // __patsflab_list0_rforeach_method
  tmpret82 = _ats2jspre_ML_list0_patsfun_46__closurerize(arg0);
  return tmpret82;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_46(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_46
  ats2jspre_ML_list0_rforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_filter(arg0, arg1)
{
//
// knd = 0
  var tmpret84
  var tmp85
  var tmplab, tmplab_js
//
  // __patsflab_list0_filter
  tmp85 = ats2jspre_list_filter(arg0, arg1);
  tmpret84 = tmp85;
  return tmpret84;
} // end-of-function


function
ats2jspre_ML_list0_filter_method(arg0)
{
//
// knd = 0
  var tmpret86
  var tmplab, tmplab_js
//
  // __patsflab_list0_filter_method
  tmpret86 = _ats2jspre_ML_list0_patsfun_49__closurerize(arg0);
  return tmpret86;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_49(env0, arg0)
{
//
// knd = 0
  var tmpret87
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_49
  tmpret87 = ats2jspre_ML_list0_filter(env0, arg0);
  return tmpret87;
} // end-of-function


function
ats2jspre_ML_list0_map(arg0, arg1)
{
//
// knd = 0
  var tmpret88
  var tmp89
  var tmplab, tmplab_js
//
  // __patsflab_list0_map
  tmp89 = ats2jspre_list_map(arg0, arg1);
  tmpret88 = tmp89;
  return tmpret88;
} // end-of-function


function
ats2jspre_ML_list0_map_method(arg0, arg1)
{
//
// knd = 0
  var tmpret90
  var tmplab, tmplab_js
//
  // __patsflab_list0_map_method
  tmpret90 = _ats2jspre_ML_list0_patsfun_52__closurerize(arg0);
  return tmpret90;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_52(env0, arg0)
{
//
// knd = 0
  var tmpret91
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_52
  tmpret91 = ats2jspre_ML_list0_map(env0, arg0);
  return tmpret91;
} // end-of-function


function
ats2jspre_ML_list0_mapcons(arg0, arg1)
{
//
// knd = 0
  var tmpret92
  var tmp93
  var tmp94
  var tmp95
  var tmp96
  var tmplab, tmplab_js
//
  // __patsflab_list0_mapcons
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab38
      if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
      case 2: // __atstmplab39
      tmpret92 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab40
      case 4: // __atstmplab41
      tmp93 = arg1[0];
      tmp94 = arg1[1];
      tmp95 = [arg0, tmp93];
      tmp96 = ats2jspre_ML_list0_mapcons(arg0, tmp94);
      tmpret92 = [tmp95, tmp96];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret92;
} // end-of-function


function
ats2jspre_ML_list0_find_opt(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret97
  var tmp98
  var tmp99
  var tmp100
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_find_opt
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab42
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab43
        tmpret97 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab44
        case 4: // __atstmplab45
        tmp98 = arg0[0];
        tmp99 = arg0[1];
        tmp100 = arg1[0](arg1, tmp98);
        if(tmp100) {
          tmpret97 = [tmp98];
        } else {
          // ATStailcalseq_beg
          apy0 = tmp99;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_find_opt
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret97;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_find_opt_method(arg0)
{
//
// knd = 0
  var tmpret101
  var tmplab, tmplab_js
//
  // __patsflab_list0_find_opt_method
  tmpret101 = _ats2jspre_ML_list0_patsfun_56__closurerize(arg0);
  return tmpret101;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_56(env0, arg0)
{
//
// knd = 0
  var tmpret102
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_56
  tmpret102 = ats2jspre_ML_list0_find_opt(env0, arg0);
  return tmpret102;
} // end-of-function


function
ats2jspre_ML_list0_zip(arg0, arg1)
{
//
// knd = 0
  var tmpret103
  var tmplab, tmplab_js
//
  // __patsflab_list0_zip
  tmpret103 = _ats2jspre_ML_list0_aux_58(arg0, arg1);
  return tmpret103;
} // end-of-function


function
_ats2jspre_ML_list0_aux_58(arg0, arg1)
{
//
// knd = 0
  var tmpret104
  var tmp105
  var tmp106
  var tmp107
  var tmp108
  var tmp109
  var tmp110
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_58
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab46
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab47
      tmpret104 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab48
      case 4: // __atstmplab49
      tmp105 = arg0[0];
      tmp106 = arg0[1];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab50
          if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
          case 2: // __atstmplab51
          tmpret104 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab52
          case 4: // __atstmplab53
          tmp107 = arg1[0];
          tmp108 = arg1[1];
          tmp109 = [tmp105, tmp107];
          tmp110 = _ats2jspre_ML_list0_aux_58(tmp106, tmp108);
          tmpret104 = [tmp109, tmp110];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret104;
} // end-of-function


function
ats2jspre_ML_list0_zipwith(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret111
  var tmplab, tmplab_js
//
  // __patsflab_list0_zipwith
  tmpret111 = _ats2jspre_ML_list0_aux_60(arg0, arg1, arg2);
  return tmpret111;
} // end-of-function


function
_ats2jspre_ML_list0_aux_60(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret112
  var tmp113
  var tmp114
  var tmp115
  var tmp116
  var tmp117
  var tmp118
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_60
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab54
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab55
      tmpret112 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab56
      case 4: // __atstmplab57
      tmp113 = arg0[0];
      tmp114 = arg0[1];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab58
          if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
          case 2: // __atstmplab59
          tmpret112 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab60
          case 4: // __atstmplab61
          tmp115 = arg1[0];
          tmp116 = arg1[1];
          tmp117 = arg2[0](arg2, tmp113, tmp115);
          tmp118 = _ats2jspre_ML_list0_aux_60(tmp114, tmp116, arg2);
          tmpret112 = [tmp117, tmp118];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret112;
} // end-of-function


function
ats2jspre_ML_list0_zipwith_method(arg0, arg1)
{
//
// knd = 0
  var tmpret119
  var tmplab, tmplab_js
//
  // __patsflab_list0_zipwith_method
  tmpret119 = _ats2jspre_ML_list0_patsfun_62__closurerize(arg0, arg1);
  return tmpret119;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_62(env0, env1, arg0)
{
//
// knd = 0
  var tmpret120
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_62
  tmpret120 = ats2jspre_ML_list0_zipwith(env0, env1, arg0);
  return tmpret120;
} // end-of-function


function
ats2jspre_ML_list0_foldleft(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret121
  var tmplab, tmplab_js
//
  // __patsflab_list0_foldleft
  tmpret121 = _ats2jspre_ML_list0_aux_64(arg2, arg1, arg0);
  return tmpret121;
} // end-of-function


function
_ats2jspre_ML_list0_aux_64(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret122
  var tmp123
  var tmp124
  var tmp125
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_ML_list0_aux_64
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab62
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab63
        tmpret122 = arg0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab64
        case 4: // __atstmplab65
        tmp123 = arg1[0];
        tmp124 = arg1[1];
        tmp125 = env0[0](env0, arg0, tmp123);
        // ATStailcalseq_beg
        apy0 = tmp125;
        apy1 = tmp124;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_ML_list0_aux_64
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret122;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_foldright(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret126
  var tmplab, tmplab_js
//
  // __patsflab_list0_foldright
  tmpret126 = _ats2jspre_ML_list0_aux_66(arg1, arg2, arg0, arg2);
  return tmpret126;
} // end-of-function


function
_ats2jspre_ML_list0_aux_66(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmpret127
  var tmp128
  var tmp129
  var tmp130
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_66
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab66
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab67
      tmpret127 = arg1;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab68
      case 4: // __atstmplab69
      tmp128 = arg0[0];
      tmp129 = arg0[1];
      tmp130 = _ats2jspre_ML_list0_aux_66(env0, env1, tmp129, env1);
      tmpret127 = env0[0](env0, tmp128, tmp130);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret127;
} // end-of-function


function
ats2jspre_ML_list0_sort_2(arg0, arg1)
{
//
// knd = 0
  var tmpret133
  var tmp134
  var tmplab, tmplab_js
//
  // __patsflab_list0_sort_2
  tmp134 = ats2jspre_list_sort_2(arg0, arg1);
  tmpret133 = tmp134;
  return tmpret133;
} // end-of-function


function
ats2jspre_ML_streamize_list0_zip(arg0, arg1)
{
//
// knd = 0
  var tmpret135
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list0_zip
  tmpret135 = ats2jspre_streamize_list_zip(arg0, arg1);
  return tmpret135;
} // end-of-function


function
ats2jspre_ML_streamize_list0_cross(arg0, arg1)
{
//
// knd = 0
  var tmpret136
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list0_cross
  tmpret136 = ats2jspre_streamize_list_cross(arg0, arg1);
  return tmpret136;
} // end-of-function


function
ats2jspre_ML_list0_head_exn(arg0)
{
//
// knd = 0
  var tmpret140
  var tmp141
  var tmplab, tmplab_js
//
  // __patsflab_list0_head_exn
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab70
      if(ATSCKptrisnull(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab71
      tmp141 = arg0[0];
      tmpret140 = tmp141;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab72
      case 4: // __atstmplab73
      tmpret140 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret140;
} // end-of-function


function
ats2jspre_ML_list0_tail_exn(arg0)
{
//
// knd = 0
  var tmpret143
  var tmp145
  var tmplab, tmplab_js
//
  // __patsflab_list0_tail_exn
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab74
      if(ATSCKptrisnull(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab75
      tmp145 = arg0[1];
      tmpret143 = tmp145;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab76
      case 4: // __atstmplab77
      tmpret143 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret143;
} // end-of-function


function
ats2jspre_ML_list0_get_at_exn(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret146
  var tmp147
  var tmp148
  var tmp149
  var tmp150
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_get_at_exn
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab78
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab79
        tmpret146 = ats2jspre_ListSubscriptExn_throw();
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab80
        case 4: // __atstmplab81
        tmp147 = arg0[0];
        tmp148 = arg0[1];
        tmp149 = ats2jspre_gt_int1_int1(arg1, 0);
        if(tmp149) {
          tmp150 = ats2jspre_sub_int1_int1(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp148;
          apy1 = tmp150;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_get_at_exn
          // ATStailcalseq_end
        } else {
          tmpret146 = tmp147;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret146;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_insert_at_exn(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret151
  var tmplab, tmplab_js
//
  // __patsflab_list0_insert_at_exn
  tmpret151 = _ats2jspre_ML_list0_aux_79(arg2, arg0, arg1);
  return tmpret151;
} // end-of-function


function
_ats2jspre_ML_list0_aux_79(env0, arg0, arg1)
{
//
// knd = 0
  var tmpret152
  var tmp153
  var tmp154
  var tmp155
  var tmp156
  var tmp157
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_79
  tmp153 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp153) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab82
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab83
        tmpret152 = ats2jspre_ListSubscriptExn_throw();
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab84
        case 4: // __atstmplab85
        tmp154 = arg0[0];
        tmp155 = arg0[1];
        tmp157 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp156 = _ats2jspre_ML_list0_aux_79(env0, tmp155, tmp157);
        tmpret152 = [tmp154, tmp156];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    tmpret152 = [env0, arg0];
  } // endif
  return tmpret152;
} // end-of-function


function
ats2jspre_ML_list0_remove_at_exn(arg0, arg1)
{
//
// knd = 0
  var tmpret158
  var tmplab, tmplab_js
//
  // __patsflab_list0_remove_at_exn
  tmpret158 = _ats2jspre_ML_list0_aux_81(arg0, arg1);
  return tmpret158;
} // end-of-function


function
_ats2jspre_ML_list0_aux_81(arg0, arg1)
{
//
// knd = 0
  var tmpret159
  var tmp160
  var tmp161
  var tmp162
  var tmp163
  var tmp164
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_81
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab86
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab87
      tmpret159 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab88
      case 4: // __atstmplab89
      tmp160 = arg0[0];
      tmp161 = arg0[1];
      tmp162 = ats2jspre_gt_int1_int1(arg1, 0);
      if(tmp162) {
        tmp164 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp163 = _ats2jspre_ML_list0_aux_81(tmp161, tmp164);
        tmpret159 = [tmp160, tmp163];
      } else {
        tmpret159 = tmp161;
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret159;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
