/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2016-12-25: 21h:46m
**
*/

function
_ats2jspre_stream_vt_patsfun_7__closurerize(env0)
{
  return [function(cenv) { return _ats2jspre_stream_vt_patsfun_7(cenv[1]); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_10__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_10(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_stream_vt_patsfun_19__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_19(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_stream_vt_patsfun_22__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_22(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_25__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_25(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_stream_vt_patsfun_27__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_27(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_30__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_30(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_stream_vt_patsfun_32__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_32(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_36__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_36(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_40__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_40(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_44__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_44(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_48__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_48(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_52__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_52(cenv[1], arg0); }, env0];
}


function
_ats2jspre_stream_vt_patsfun_55__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_stream_vt_patsfun_55(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
ats2jspre_stream_vt_free(arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_free
  atspre_lazy_vt_free(arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_vt2t(arg0)
{
//
// knd = 0
  var tmpret6
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt2t
  tmpret6 = _ats2jspre_stream_vt_aux_6(arg0);
  return tmpret6;
} // end-of-function


function
_ats2jspre_stream_vt_aux_6(arg0)
{
//
// knd = 0
  var tmpret7
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_aux_6
  tmpret7 = ATSPMVlazyval(_ats2jspre_stream_vt_patsfun_7__closurerize(arg0));
  return tmpret7;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_7(env0)
{
//
// knd = 0
  var tmpret8
  var tmp9
  var tmp10
  var tmp11
  var tmp12
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_7
  tmp9 = ATSPMVllazyval_eval(env0);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab0
      if(ATSCKptriscons(tmp9)) { tmplab_js = 4; break; }
      case 2: // __atstmplab1
      tmpret8 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab2
      case 4: // __atstmplab3
      tmp10 = tmp9[0];
      tmp11 = tmp9[1];
      // ATSINSfreecon(tmp9);
      tmp12 = _ats2jspre_stream_vt_aux_6(tmp11);
      tmpret8 = [tmp10, tmp12];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret8;
} // end-of-function


function
ats2jspre_stream_vt_takeLte(arg0, arg1)
{
//
// knd = 0
  var tmpret13
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_takeLte
  tmpret13 = _ats2jspre_stream_vt_auxmain_9(arg0, arg1);
  return tmpret13;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_9(arg0, arg1)
{
//
// knd = 0
  var tmpret14
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_9
  tmpret14 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_10__closurerize(arg0, arg1));
  return tmpret14;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_10(env0, env1, arg0)
{
//
// knd = 0
  var tmpret15
  var tmp16
  var tmp17
  var tmp18
  var tmp19
  var tmp20
  var tmp21
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_10
  if(arg0) {
    tmp16 = ats2jspre_gt_int1_int1(env1, 0);
    if(tmp16) {
      tmp17 = ATSPMVllazyval_eval(env0);
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab4
          if(ATSCKptriscons(tmp17)) { tmplab_js = 4; break; }
          case 2: // __atstmplab5
          tmpret15 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab6
          case 4: // __atstmplab7
          tmp18 = tmp17[0];
          tmp19 = tmp17[1];
          // ATSINSfreecon(tmp17);
          tmp21 = ats2jspre_sub_int1_int1(env1, 1);
          tmp20 = _ats2jspre_stream_vt_auxmain_9(tmp19, tmp21);
          tmpret15 = [tmp18, tmp20];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
    } else {
      atspre_lazy_vt_free(env0);
      tmpret15 = null;
    } // endif
  } else {
    atspre_lazy_vt_free(env0);
  } // endif
  return tmpret15;
} // end-of-function


function
ats2jspre_stream_vt_length(arg0)
{
//
// knd = 0
  var tmpret24
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_length
  tmpret24 = _ats2jspre_stream_vt_loop_12(arg0, 0);
  return tmpret24;
} // end-of-function


function
_ats2jspre_stream_vt_loop_12(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret25
  var tmp26
  var tmp28
  var tmp29
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_12
    tmp26 = ATSPMVllazyval_eval(arg0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab8
        if(ATSCKptriscons(tmp26)) { tmplab_js = 4; break; }
        case 2: // __atstmplab9
        tmpret25 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab10
        case 4: // __atstmplab11
        tmp28 = tmp26[1];
        // ATSINSfreecon(tmp26);
        tmp29 = ats2jspre_add_int1_int1(arg1, 1);
        // ATStailcalseq_beg
        apy0 = tmp28;
        apy1 = tmp29;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_12
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret25;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream2list_vt(arg0)
{
//
// knd = 0
  var tmpret30
  var tmplab, tmplab_js
//
  // __patsflab_stream2list_vt
  tmpret30 = _ats2jspre_stream_vt_aux_14(arg0);
  return tmpret30;
} // end-of-function


function
_ats2jspre_stream_vt_aux_14(arg0)
{
//
// knd = 0
  var tmpret31
  var tmp32
  var tmp33
  var tmp34
  var tmp35
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_aux_14
  tmp32 = ATSPMVllazyval_eval(arg0);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab12
      if(ATSCKptriscons(tmp32)) { tmplab_js = 4; break; }
      case 2: // __atstmplab13
      tmpret31 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab14
      case 4: // __atstmplab15
      tmp33 = tmp32[0];
      tmp34 = tmp32[1];
      // ATSINSfreecon(tmp32);
      tmp35 = _ats2jspre_stream_vt_aux_14(tmp34);
      tmpret31 = [tmp33, tmp35];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret31;
} // end-of-function


function
ats2jspre_stream2list_vt_rev(arg0)
{
//
// knd = 0
  var tmpret36
  var tmp42
  var tmplab, tmplab_js
//
  // __patsflab_stream2list_vt_rev
  tmp42 = null;
  tmpret36 = _ats2jspre_stream_vt_loop_16(arg0, tmp42);
  return tmpret36;
} // end-of-function


function
_ats2jspre_stream_vt_loop_16(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret37
  var tmp38
  var tmp39
  var tmp40
  var tmp41
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_16
    tmp38 = ATSPMVllazyval_eval(arg0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab16
        if(ATSCKptriscons(tmp38)) { tmplab_js = 4; break; }
        case 2: // __atstmplab17
        tmpret37 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab18
        case 4: // __atstmplab19
        tmp39 = tmp38[0];
        tmp40 = tmp38[1];
        // ATSINSfreecon(tmp38);
        tmp41 = [tmp39, arg1];
        // ATStailcalseq_beg
        apy0 = tmp40;
        apy1 = tmp41;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_16
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret37;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_vt_append(arg0, arg1)
{
//
// knd = 0
  var tmpret43
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_append
  tmpret43 = _ats2jspre_stream_vt_auxmain_18(arg0, arg1);
  return tmpret43;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_18(arg0, arg1)
{
//
// knd = 0
  var tmpret44
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_18
  tmpret44 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_19__closurerize(arg0, arg1));
  return tmpret44;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_19(env0, env1, arg0)
{
//
// knd = 0
  var tmpret45
  var tmp46
  var tmp47
  var tmp48
  var tmp49
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_19
  if(arg0) {
    tmp46 = ATSPMVllazyval_eval(env0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab20
        if(ATSCKptriscons(tmp46)) { tmplab_js = 4; break; }
        case 2: // __atstmplab21
        tmpret45 = ATSPMVllazyval_eval(env1);
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab22
        case 4: // __atstmplab23
        tmp47 = tmp46[0];
        tmp48 = tmp46[1];
        // ATSINSfreecon(tmp46);
        tmp49 = _ats2jspre_stream_vt_auxmain_18(tmp48, env1);
        tmpret45 = [tmp47, tmp49];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    atspre_lazy_vt_free(env0);
    atspre_lazy_vt_free(env1);
  } // endif
  return tmpret45;
} // end-of-function


function
ats2jspre_stream_vt_concat(arg0)
{
//
// knd = 0
  var tmpret52
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_concat
  tmpret52 = _ats2jspre_stream_vt_auxmain_21(arg0);
  return tmpret52;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_21(arg0)
{
//
// knd = 0
  var tmpret53
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_21
  tmpret53 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_22__closurerize(arg0));
  return tmpret53;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_22(env0, arg0)
{
//
// knd = 0
  var tmpret54
  var tmp55
  var tmp56
  var tmp57
  var tmp58
  var tmp59
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_22
  if(arg0) {
    tmp55 = ATSPMVllazyval_eval(env0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab24
        if(ATSCKptriscons(tmp55)) { tmplab_js = 4; break; }
        case 2: // __atstmplab25
        tmpret54 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab26
        case 4: // __atstmplab27
        tmp56 = tmp55[0];
        tmp57 = tmp55[1];
        // ATSINSfreecon(tmp55);
        tmp59 = _ats2jspre_stream_vt_auxmain_21(tmp57);
        tmp58 = ats2jspre_stream_vt_append(tmp56, tmp59);
        tmpret54 = ATSPMVllazyval_eval(tmp58);
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    atspre_lazy_vt_free(env0);
  } // endif
  return tmpret54;
} // end-of-function


function
ats2jspre_stream_vt_map_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret61
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_map_cloref
  tmpret61 = _ats2jspre_stream_vt_auxmain_24(arg1, arg0);
  return tmpret61;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_24(env0, arg0)
{
//
// knd = 0
  var tmpret62
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_24
  tmpret62 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_25__closurerize(env0, arg0));
  return tmpret62;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_25(env0, env1, arg0)
{
//
// knd = 0
  var tmpret63
  var tmp64
  var tmp65
  var tmp66
  var tmp67
  var tmp68
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_25
  if(arg0) {
    tmp64 = ATSPMVllazyval_eval(env1);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab28
        if(ATSCKptriscons(tmp64)) { tmplab_js = 4; break; }
        case 2: // __atstmplab29
        tmpret63 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab30
        case 4: // __atstmplab31
        tmp65 = tmp64[0];
        tmp66 = tmp64[1];
        // ATSINSfreecon(tmp64);
        tmp67 = env0[0](env0, tmp65);
        tmp68 = _ats2jspre_stream_vt_auxmain_24(env0, tmp66);
        tmpret63 = [tmp67, tmp68];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    atspre_lazy_vt_free(env1);
  } // endif
  return tmpret63;
} // end-of-function


function
ats2jspre_stream_vt_map_method(arg0, arg1)
{
//
// knd = 0
  var tmpret70
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_map_method
  tmpret70 = _ats2jspre_stream_vt_patsfun_27__closurerize(arg0);
  return tmpret70;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_27(env0, arg0)
{
//
// knd = 0
  var tmpret71
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_27
  tmpret71 = ats2jspre_stream_vt_map_cloref(env0, arg0);
  return tmpret71;
} // end-of-function


function
ats2jspre_stream_vt_filter_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret72
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_filter_cloref
  tmpret72 = _ats2jspre_stream_vt_auxmain_29(arg1, arg0);
  return tmpret72;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_29(env0, arg0)
{
//
// knd = 0
  var tmpret73
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_29
  tmpret73 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_30__closurerize(env0, arg0));
  return tmpret73;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_30(env0, env1, arg0)
{
//
// knd = 0
  var tmpret74
  var tmp75
  var tmp76
  var tmp77
  var tmp78
  var tmp79
  var tmp80
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_30
  if(arg0) {
    tmp75 = ATSPMVllazyval_eval(env1);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab32
        if(ATSCKptriscons(tmp75)) { tmplab_js = 4; break; }
        case 2: // __atstmplab33
        tmpret74 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab34
        case 4: // __atstmplab35
        tmp76 = tmp75[0];
        tmp77 = tmp75[1];
        // ATSINSfreecon(tmp75);
        tmp78 = env0[0](env0, tmp76);
        if(tmp78) {
          tmp79 = _ats2jspre_stream_vt_auxmain_29(env0, tmp77);
          tmpret74 = [tmp76, tmp79];
        } else {
          tmp80 = _ats2jspre_stream_vt_auxmain_29(env0, tmp77);
          tmpret74 = ATSPMVllazyval_eval(tmp80);
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    atspre_lazy_vt_free(env1);
  } // endif
  return tmpret74;
} // end-of-function


function
ats2jspre_stream_vt_filter_method(arg0)
{
//
// knd = 0
  var tmpret82
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_filter_method
  tmpret82 = _ats2jspre_stream_vt_patsfun_32__closurerize(arg0);
  return tmpret82;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_32(env0, arg0)
{
//
// knd = 0
  var tmpret83
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_32
  tmpret83 = ats2jspre_stream_vt_filter_cloref(env0, arg0);
  return tmpret83;
} // end-of-function


function
ats2jspre_stream_vt_exists_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret84
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_exists_cloref
  tmpret84 = _ats2jspre_stream_vt_loop_34(arg1, arg0);
  return tmpret84;
} // end-of-function


function
_ats2jspre_stream_vt_loop_34(env0, arg0)
{
//
// knd = 1
  var apy0
  var tmpret85
  var tmp86
  var tmp87
  var tmp88
  var tmp89
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_34
    tmp86 = ATSPMVllazyval_eval(arg0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab36
        if(ATSCKptriscons(tmp86)) { tmplab_js = 4; break; }
        case 2: // __atstmplab37
        tmpret85 = false;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab38
        case 4: // __atstmplab39
        tmp87 = tmp86[0];
        tmp88 = tmp86[1];
        // ATSINSfreecon(tmp86);
        tmp89 = env0[0](env0, tmp87);
        if(tmp89) {
          atspre_lazy_vt_free(tmp88);
          tmpret85 = true;
        } else {
          // ATStailcalseq_beg
          apy0 = tmp88;
          arg0 = apy0;
          funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_34
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret85;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_vt_exists_method(arg0)
{
//
// knd = 0
  var tmpret91
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_exists_method
  tmpret91 = _ats2jspre_stream_vt_patsfun_36__closurerize(arg0);
  return tmpret91;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_36(env0, arg0)
{
//
// knd = 0
  var tmpret92
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_36
  tmpret92 = ats2jspre_stream_vt_exists_cloref(env0, arg0);
  return tmpret92;
} // end-of-function


function
ats2jspre_stream_vt_forall_cloref(arg0, arg1)
{
//
// knd = 0
  var tmpret93
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_forall_cloref
  tmpret93 = _ats2jspre_stream_vt_loop_38(arg1, arg0);
  return tmpret93;
} // end-of-function


function
_ats2jspre_stream_vt_loop_38(env0, arg0)
{
//
// knd = 1
  var apy0
  var tmpret94
  var tmp95
  var tmp96
  var tmp97
  var tmp98
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_38
    tmp95 = ATSPMVllazyval_eval(arg0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab40
        if(ATSCKptriscons(tmp95)) { tmplab_js = 4; break; }
        case 2: // __atstmplab41
        tmpret94 = true;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab42
        case 4: // __atstmplab43
        tmp96 = tmp95[0];
        tmp97 = tmp95[1];
        // ATSINSfreecon(tmp95);
        tmp98 = env0[0](env0, tmp96);
        if(tmp98) {
          // ATStailcalseq_beg
          apy0 = tmp97;
          arg0 = apy0;
          funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_38
          // ATStailcalseq_end
        } else {
          atspre_lazy_vt_free(tmp97);
          tmpret94 = false;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret94;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_vt_forall_method(arg0)
{
//
// knd = 0
  var tmpret100
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_forall_method
  tmpret100 = _ats2jspre_stream_vt_patsfun_40__closurerize(arg0);
  return tmpret100;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_40(env0, arg0)
{
//
// knd = 0
  var tmpret101
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_40
  tmpret101 = ats2jspre_stream_vt_forall_cloref(env0, arg0);
  return tmpret101;
} // end-of-function


function
ats2jspre_stream_vt_foreach_cloref(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_foreach_cloref
  _ats2jspre_stream_vt_loop_42(arg1, arg0);
  return/*_void*/;
} // end-of-function


function
_ats2jspre_stream_vt_loop_42(env0, arg0)
{
//
// knd = 1
  var apy0
  var tmp104
  var tmp105
  var tmp106
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_42
    tmp104 = ATSPMVllazyval_eval(arg0);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab44
        if(ATSCKptriscons(tmp104)) { tmplab_js = 4; break; }
        case 2: // __atstmplab45
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab46
        case 4: // __atstmplab47
        tmp105 = tmp104[0];
        tmp106 = tmp104[1];
        // ATSINSfreecon(tmp104);
        env0[0](env0, tmp105);
        // ATStailcalseq_beg
        apy0 = tmp106;
        arg0 = apy0;
        funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_42
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_vt_foreach_method(arg0)
{
//
// knd = 0
  var tmpret108
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_foreach_method
  tmpret108 = _ats2jspre_stream_vt_patsfun_44__closurerize(arg0);
  return tmpret108;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_44(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_44
  ats2jspre_stream_vt_foreach_cloref(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_vt_iforeach_cloref(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_iforeach_cloref
  _ats2jspre_stream_vt_loop_46(arg1, 0, arg0);
  return/*_void*/;
} // end-of-function


function
_ats2jspre_stream_vt_loop_46(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp112
  var tmp113
  var tmp114
  var tmp116
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_stream_vt_loop_46
    tmp112 = ATSPMVllazyval_eval(arg1);
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab48
        if(ATSCKptriscons(tmp112)) { tmplab_js = 4; break; }
        case 2: // __atstmplab49
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab50
        case 4: // __atstmplab51
        tmp113 = tmp112[0];
        tmp114 = tmp112[1];
        // ATSINSfreecon(tmp112);
        env0[0](env0, arg0, tmp113);
        tmp116 = ats2jspre_add_int1_int1(arg0, 1);
        // ATStailcalseq_beg
        apy0 = tmp116;
        apy1 = tmp114;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_stream_vt_loop_46
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_stream_vt_iforeach_method(arg0)
{
//
// knd = 0
  var tmpret117
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_iforeach_method
  tmpret117 = _ats2jspre_stream_vt_patsfun_48__closurerize(arg0);
  return tmpret117;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_48(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_48
  ats2jspre_stream_vt_iforeach_cloref(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_vt_rforeach_cloref(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_rforeach_cloref
  _ats2jspre_stream_vt_auxmain_50(arg1, arg0);
  return/*_void*/;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_50(env0, arg0)
{
//
// knd = 0
  var tmp121
  var tmp122
  var tmp123
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_50
  tmp121 = ATSPMVllazyval_eval(arg0);
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab52
      if(ATSCKptriscons(tmp121)) { tmplab_js = 4; break; }
      case 2: // __atstmplab53
      // ATSINSmove_void
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab54
      case 4: // __atstmplab55
      tmp122 = tmp121[0];
      tmp123 = tmp121[1];
      // ATSINSfreecon(tmp121);
      _ats2jspre_stream_vt_auxmain_50(env0, tmp123);
      env0[0](env0, tmp122);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_vt_rforeach_method(arg0)
{
//
// knd = 0
  var tmpret125
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_rforeach_method
  tmpret125 = _ats2jspre_stream_vt_patsfun_52__closurerize(arg0);
  return tmpret125;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_52(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_52
  ats2jspre_stream_vt_rforeach_cloref(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_stream_vt_tabulate_cloref(arg0)
{
//
// knd = 0
  var tmpret127
  var tmplab, tmplab_js
//
  // __patsflab_stream_vt_tabulate_cloref
  tmpret127 = _ats2jspre_stream_vt_auxmain_54(arg0, 0);
  return tmpret127;
} // end-of-function


function
_ats2jspre_stream_vt_auxmain_54(env0, arg0)
{
//
// knd = 0
  var tmpret128
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_auxmain_54
  tmpret128 = ATSPMVllazyval(_ats2jspre_stream_vt_patsfun_55__closurerize(env0, arg0));
  return tmpret128;
} // end-of-function


function
_ats2jspre_stream_vt_patsfun_55(env0, env1, arg0)
{
//
// knd = 0
  var tmpret129
  var tmp130
  var tmp131
  var tmp132
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_stream_vt_patsfun_55
  if(arg0) {
    tmp130 = env0[0](env0, env1);
    tmp132 = ats2jspre_add_int1_int1(env1, 1);
    tmp131 = _ats2jspre_stream_vt_auxmain_54(env0, tmp132);
    tmpret129 = [tmp130, tmp131];
  } else {
  } // endif
  return tmpret129;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
