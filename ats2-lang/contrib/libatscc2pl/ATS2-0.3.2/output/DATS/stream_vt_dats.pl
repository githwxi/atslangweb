######
##
## The Perl code is generated by atscc2pl
## The starting compilation time is: 2017-4-11: 16h:58m
##
######
sub
_ats2plpre_stream_vt_patsfun_7__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv) = @_; return _ats2plpre_stream_vt_patsfun_7($cenv->[1]); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_10__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_10($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_19__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_19($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_22__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_22($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_25__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_25($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_27__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_27($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_30__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_30($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_stream_vt_patsfun_32__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_32($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_36__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_36($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_40__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_40($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_44__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_44($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_48__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_48($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_52__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_52($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_stream_vt_patsfun_55__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_stream_vt_patsfun_55($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}


sub
ats2plpre_stream_vt_free($)
{
##
  my($arg0) = @_;
##
##
  __patsflab_stream_vt_free:
  atspre_lazy_vt_free($arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt2t($)
{
##
  my($arg0) = @_;
##
  my $tmpret6;
##
  __patsflab_stream_vt2t:
  $tmpret6 = _ats2plpre_stream_vt_aux_6($arg0);
  return $tmpret6;
} #end-of-function


sub
_ats2plpre_stream_vt_aux_6($)
{
##
  my($arg0) = @_;
##
  my $tmpret7;
##
  __patsflab__ats2plpre_stream_vt_aux_6:
  $tmpret7 = ATSPMVlazyval(_ats2plpre_stream_vt_patsfun_7__closurerize($arg0));
  return $tmpret7;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_7($)
{
##
  my($env0) = @_;
##
  my $tmpret8;
  my $tmp9;
  my $tmp10;
  my $tmp11;
  my $tmp12;
##
  __patsflab__ats2plpre_stream_vt_patsfun_7:
  $tmp9 = ATSPMVllazyval_eval($env0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab0:
    if(ATSCKptriscons($tmp9)) { goto __atstmplab3; }
    __atstmplab1:
    $tmpret8 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab2:
    __atstmplab3:
    $tmp10 = $tmp9->[0];
    $tmp11 = $tmp9->[1];
    #ATSINSfreecon($tmp9);
    $tmp12 = _ats2plpre_stream_vt_aux_6($tmp11);
    $tmpret8 = [$tmp10, $tmp12];
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret8;
} #end-of-function


sub
ats2plpre_stream_vt_takeLte($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret13;
##
  __patsflab_stream_vt_takeLte:
  $tmpret13 = _ats2plpre_stream_vt_auxmain_9($arg0, $arg1);
  return $tmpret13;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_9($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret14;
##
  __patsflab__ats2plpre_stream_vt_auxmain_9:
  $tmpret14 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_10__closurerize($arg0, $arg1));
  return $tmpret14;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_10($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret15;
  my $tmp16;
  my $tmp17;
  my $tmp18;
  my $tmp19;
  my $tmp20;
  my $tmp21;
##
  __patsflab__ats2plpre_stream_vt_patsfun_10:
  if($arg0) {
    $tmp16 = ats2plpre_gt_int1_int1($env1, 0);
    if($tmp16) {
      $tmp17 = ATSPMVllazyval_eval($env0);
      #ATScaseofseq_beg
      while(1)
      {
        #ATSbranchseq_beg
        __atstmplab4:
        if(ATSCKptriscons($tmp17)) { goto __atstmplab7; }
        __atstmplab5:
        $tmpret15 = 0;
        last;
        #ATSbranchseq_end
        #ATSbranchseq_beg
        __atstmplab6:
        __atstmplab7:
        $tmp18 = $tmp17->[0];
        $tmp19 = $tmp17->[1];
        #ATSINSfreecon($tmp17);
        $tmp21 = ats2plpre_sub_int1_int1($env1, 1);
        $tmp20 = _ats2plpre_stream_vt_auxmain_9($tmp19, $tmp21);
        $tmpret15 = [$tmp18, $tmp20];
        last;
        #ATSbranchseq_end
      } #end-of-while-loop;
      #ATScaseofseq_end
    } else {
      atspre_lazy_vt_free($env0);
      $tmpret15 = 0;
    } #endif
  } else {
    atspre_lazy_vt_free($env0);
  } #endif
  return $tmpret15;
} #end-of-function


sub
ats2plpre_stream_vt_length($)
{
##
  my($arg0) = @_;
##
  my $tmpret24;
##
  __patsflab_stream_vt_length:
  $tmpret24 = _ats2plpre_stream_vt_loop_12($arg0, 0);
  return $tmpret24;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_12($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret25;
  my $tmp26;
  my $tmp28;
  my $tmp29;
##
  __patsflab__ats2plpre_stream_vt_loop_12:
  $tmp26 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab8:
    if(ATSCKptriscons($tmp26)) { goto __atstmplab11; }
    __atstmplab9:
    $tmpret25 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab10:
    __atstmplab11:
    $tmp28 = $tmp26->[1];
    #ATSINSfreecon($tmp26);
    $tmp29 = ats2plpre_add_int1_int1($arg1, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp28;
    $apy1 = $tmp29;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_12;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret25;
} #end-of-function


sub
ats2plpre_stream2list_vt($)
{
##
  my($arg0) = @_;
##
  my $tmpret30;
##
  __patsflab_stream2list_vt:
  $tmpret30 = _ats2plpre_stream_vt_aux_14($arg0);
  return $tmpret30;
} #end-of-function


sub
_ats2plpre_stream_vt_aux_14($)
{
##
  my($arg0) = @_;
##
  my $tmpret31;
  my $tmp32;
  my $tmp33;
  my $tmp34;
  my $tmp35;
##
  __patsflab__ats2plpre_stream_vt_aux_14:
  $tmp32 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab12:
    if(ATSCKptriscons($tmp32)) { goto __atstmplab15; }
    __atstmplab13:
    $tmpret31 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab14:
    __atstmplab15:
    $tmp33 = $tmp32->[0];
    $tmp34 = $tmp32->[1];
    #ATSINSfreecon($tmp32);
    $tmp35 = _ats2plpre_stream_vt_aux_14($tmp34);
    $tmpret31 = [$tmp33, $tmp35];
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret31;
} #end-of-function


sub
ats2plpre_stream2list_vt_rev($)
{
##
  my($arg0) = @_;
##
  my $tmpret36;
  my $tmp42;
##
  __patsflab_stream2list_vt_rev:
  $tmp42 = 0;
  $tmpret36 = _ats2plpre_stream_vt_loop_16($arg0, $tmp42);
  return $tmpret36;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_16($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret37;
  my $tmp38;
  my $tmp39;
  my $tmp40;
  my $tmp41;
##
  __patsflab__ats2plpre_stream_vt_loop_16:
  $tmp38 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab16:
    if(ATSCKptriscons($tmp38)) { goto __atstmplab19; }
    __atstmplab17:
    $tmpret37 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab18:
    __atstmplab19:
    $tmp39 = $tmp38->[0];
    $tmp40 = $tmp38->[1];
    #ATSINSfreecon($tmp38);
    $tmp41 = [$tmp39, $arg1];
    #ATStailcalseq_beg
    $apy0 = $tmp40;
    $apy1 = $tmp41;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_16;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret37;
} #end-of-function


sub
ats2plpre_stream_vt_append($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret43;
##
  __patsflab_stream_vt_append:
  $tmpret43 = _ats2plpre_stream_vt_auxmain_18($arg0, $arg1);
  return $tmpret43;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_18($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret44;
##
  __patsflab__ats2plpre_stream_vt_auxmain_18:
  $tmpret44 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_19__closurerize($arg0, $arg1));
  return $tmpret44;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_19($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret45;
  my $tmp46;
  my $tmp47;
  my $tmp48;
  my $tmp49;
##
  __patsflab__ats2plpre_stream_vt_patsfun_19:
  if($arg0) {
    $tmp46 = ATSPMVllazyval_eval($env0);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab20:
      if(ATSCKptriscons($tmp46)) { goto __atstmplab23; }
      __atstmplab21:
      $tmpret45 = ATSPMVllazyval_eval($env1);
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab22:
      __atstmplab23:
      $tmp47 = $tmp46->[0];
      $tmp48 = $tmp46->[1];
      #ATSINSfreecon($tmp46);
      $tmp49 = _ats2plpre_stream_vt_auxmain_18($tmp48, $env1);
      $tmpret45 = [$tmp47, $tmp49];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env0);
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret45;
} #end-of-function


sub
ats2plpre_stream_vt_concat($)
{
##
  my($arg0) = @_;
##
  my $tmpret52;
##
  __patsflab_stream_vt_concat:
  $tmpret52 = _ats2plpre_stream_vt_auxmain_21($arg0);
  return $tmpret52;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_21($)
{
##
  my($arg0) = @_;
##
  my $tmpret53;
##
  __patsflab__ats2plpre_stream_vt_auxmain_21:
  $tmpret53 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_22__closurerize($arg0));
  return $tmpret53;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_22($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret54;
  my $tmp55;
  my $tmp56;
  my $tmp57;
  my $tmp58;
  my $tmp59;
##
  __patsflab__ats2plpre_stream_vt_patsfun_22:
  if($arg0) {
    $tmp55 = ATSPMVllazyval_eval($env0);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab24:
      if(ATSCKptriscons($tmp55)) { goto __atstmplab27; }
      __atstmplab25:
      $tmpret54 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab26:
      __atstmplab27:
      $tmp56 = $tmp55->[0];
      $tmp57 = $tmp55->[1];
      #ATSINSfreecon($tmp55);
      $tmp59 = _ats2plpre_stream_vt_auxmain_21($tmp57);
      $tmp58 = ats2plpre_stream_vt_append($tmp56, $tmp59);
      $tmpret54 = ATSPMVllazyval_eval($tmp58);
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env0);
  } #endif
  return $tmpret54;
} #end-of-function


sub
ats2plpre_stream_vt_map_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret61;
##
  __patsflab_stream_vt_map_cloref:
  $tmpret61 = _ats2plpre_stream_vt_auxmain_24($arg1, $arg0);
  return $tmpret61;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_24($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret62;
##
  __patsflab__ats2plpre_stream_vt_auxmain_24:
  $tmpret62 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_25__closurerize($env0, $arg0));
  return $tmpret62;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_25($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret63;
  my $tmp64;
  my $tmp65;
  my $tmp66;
  my $tmp67;
  my $tmp68;
##
  __patsflab__ats2plpre_stream_vt_patsfun_25:
  if($arg0) {
    $tmp64 = ATSPMVllazyval_eval($env1);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab28:
      if(ATSCKptriscons($tmp64)) { goto __atstmplab31; }
      __atstmplab29:
      $tmpret63 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab30:
      __atstmplab31:
      $tmp65 = $tmp64->[0];
      $tmp66 = $tmp64->[1];
      #ATSINSfreecon($tmp64);
      $tmp67 = &{$env0->[0]}($env0, $tmp65);
      $tmp68 = _ats2plpre_stream_vt_auxmain_24($env0, $tmp66);
      $tmpret63 = [$tmp67, $tmp68];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret63;
} #end-of-function


sub
ats2plpre_stream_vt_map_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret70;
##
  __patsflab_stream_vt_map_method:
  $tmpret70 = _ats2plpre_stream_vt_patsfun_27__closurerize($arg0);
  return $tmpret70;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_27($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret71;
##
  __patsflab__ats2plpre_stream_vt_patsfun_27:
  $tmpret71 = ats2plpre_stream_vt_map_cloref($env0, $arg0);
  return $tmpret71;
} #end-of-function


sub
ats2plpre_stream_vt_filter_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret72;
##
  __patsflab_stream_vt_filter_cloref:
  $tmpret72 = _ats2plpre_stream_vt_auxmain_29($arg1, $arg0);
  return $tmpret72;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_29($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret73;
##
  __patsflab__ats2plpre_stream_vt_auxmain_29:
  $tmpret73 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_30__closurerize($env0, $arg0));
  return $tmpret73;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_30($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret74;
  my $tmp75;
  my $tmp76;
  my $tmp77;
  my $tmp78;
  my $tmp79;
  my $tmp80;
##
  __patsflab__ats2plpre_stream_vt_patsfun_30:
  if($arg0) {
    $tmp75 = ATSPMVllazyval_eval($env1);
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab32:
      if(ATSCKptriscons($tmp75)) { goto __atstmplab35; }
      __atstmplab33:
      $tmpret74 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab34:
      __atstmplab35:
      $tmp76 = $tmp75->[0];
      $tmp77 = $tmp75->[1];
      #ATSINSfreecon($tmp75);
      $tmp78 = &{$env0->[0]}($env0, $tmp76);
      if($tmp78) {
        $tmp79 = _ats2plpre_stream_vt_auxmain_29($env0, $tmp77);
        $tmpret74 = [$tmp76, $tmp79];
      } else {
        $tmp80 = _ats2plpre_stream_vt_auxmain_29($env0, $tmp77);
        $tmpret74 = ATSPMVllazyval_eval($tmp80);
      } #endif
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
    atspre_lazy_vt_free($env1);
  } #endif
  return $tmpret74;
} #end-of-function


sub
ats2plpre_stream_vt_filter_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret82;
##
  __patsflab_stream_vt_filter_method:
  $tmpret82 = _ats2plpre_stream_vt_patsfun_32__closurerize($arg0);
  return $tmpret82;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_32($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret83;
##
  __patsflab__ats2plpre_stream_vt_patsfun_32:
  $tmpret83 = ats2plpre_stream_vt_filter_cloref($env0, $arg0);
  return $tmpret83;
} #end-of-function


sub
ats2plpre_stream_vt_exists_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret84;
##
  __patsflab_stream_vt_exists_cloref:
  $tmpret84 = _ats2plpre_stream_vt_loop_34($arg1, $arg0);
  return $tmpret84;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_34($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmpret85;
  my $tmp86;
  my $tmp87;
  my $tmp88;
  my $tmp89;
##
  __patsflab__ats2plpre_stream_vt_loop_34:
  $tmp86 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab36:
    if(ATSCKptriscons($tmp86)) { goto __atstmplab39; }
    __atstmplab37:
    $tmpret85 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab38:
    __atstmplab39:
    $tmp87 = $tmp86->[0];
    $tmp88 = $tmp86->[1];
    #ATSINSfreecon($tmp86);
    $tmp89 = &{$env0->[0]}($env0, $tmp87);
    if($tmp89) {
      atspre_lazy_vt_free($tmp88);
      $tmpret85 = 1;
    } else {
      #ATStailcalseq_beg
      $apy0 = $tmp88;
      $arg0 = $apy0;
      goto __patsflab__ats2plpre_stream_vt_loop_34;
      #ATStailcalseq_end
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret85;
} #end-of-function


sub
ats2plpre_stream_vt_exists_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret91;
##
  __patsflab_stream_vt_exists_method:
  $tmpret91 = _ats2plpre_stream_vt_patsfun_36__closurerize($arg0);
  return $tmpret91;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_36($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret92;
##
  __patsflab__ats2plpre_stream_vt_patsfun_36:
  $tmpret92 = ats2plpre_stream_vt_exists_cloref($env0, $arg0);
  return $tmpret92;
} #end-of-function


sub
ats2plpre_stream_vt_forall_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret93;
##
  __patsflab_stream_vt_forall_cloref:
  $tmpret93 = _ats2plpre_stream_vt_loop_38($arg1, $arg0);
  return $tmpret93;
} #end-of-function


sub
_ats2plpre_stream_vt_loop_38($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmpret94;
  my $tmp95;
  my $tmp96;
  my $tmp97;
  my $tmp98;
##
  __patsflab__ats2plpre_stream_vt_loop_38:
  $tmp95 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab40:
    if(ATSCKptriscons($tmp95)) { goto __atstmplab43; }
    __atstmplab41:
    $tmpret94 = 1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab42:
    __atstmplab43:
    $tmp96 = $tmp95->[0];
    $tmp97 = $tmp95->[1];
    #ATSINSfreecon($tmp95);
    $tmp98 = &{$env0->[0]}($env0, $tmp96);
    if($tmp98) {
      #ATStailcalseq_beg
      $apy0 = $tmp97;
      $arg0 = $apy0;
      goto __patsflab__ats2plpre_stream_vt_loop_38;
      #ATStailcalseq_end
    } else {
      atspre_lazy_vt_free($tmp97);
      $tmpret94 = 0;
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret94;
} #end-of-function


sub
ats2plpre_stream_vt_forall_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret100;
##
  __patsflab_stream_vt_forall_method:
  $tmpret100 = _ats2plpre_stream_vt_patsfun_40__closurerize($arg0);
  return $tmpret100;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_40($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret101;
##
  __patsflab__ats2plpre_stream_vt_patsfun_40:
  $tmpret101 = ats2plpre_stream_vt_forall_cloref($env0, $arg0);
  return $tmpret101;
} #end-of-function


sub
ats2plpre_stream_vt_foreach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_foreach_cloref:
  _ats2plpre_stream_vt_loop_42($arg1, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_loop_42($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmp104;
  my $tmp105;
  my $tmp106;
##
  __patsflab__ats2plpre_stream_vt_loop_42:
  $tmp104 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab44:
    if(ATSCKptriscons($tmp104)) { goto __atstmplab47; }
    __atstmplab45:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab46:
    __atstmplab47:
    $tmp105 = $tmp104->[0];
    $tmp106 = $tmp104->[1];
    #ATSINSfreecon($tmp104);
    &{$env0->[0]}($env0, $tmp105);
    #ATStailcalseq_beg
    $apy0 = $tmp106;
    $arg0 = $apy0;
    goto __patsflab__ats2plpre_stream_vt_loop_42;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_foreach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret108;
##
  __patsflab_stream_vt_foreach_method:
  $tmpret108 = _ats2plpre_stream_vt_patsfun_44__closurerize($arg0);
  return $tmpret108;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_44($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_44:
  ats2plpre_stream_vt_foreach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_iforeach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_iforeach_cloref:
  _ats2plpre_stream_vt_loop_46($arg1, 0, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_loop_46($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmp112;
  my $tmp113;
  my $tmp114;
  my $tmp116;
##
  __patsflab__ats2plpre_stream_vt_loop_46:
  $tmp112 = ATSPMVllazyval_eval($arg1);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab48:
    if(ATSCKptriscons($tmp112)) { goto __atstmplab51; }
    __atstmplab49:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab50:
    __atstmplab51:
    $tmp113 = $tmp112->[0];
    $tmp114 = $tmp112->[1];
    #ATSINSfreecon($tmp112);
    &{$env0->[0]}($env0, $arg0, $tmp113);
    $tmp116 = ats2plpre_add_int1_int1($arg0, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp116;
    $apy1 = $tmp114;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_stream_vt_loop_46;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_iforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret117;
##
  __patsflab_stream_vt_iforeach_method:
  $tmpret117 = _ats2plpre_stream_vt_patsfun_48__closurerize($arg0);
  return $tmpret117;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_48($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_48:
  ats2plpre_stream_vt_iforeach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_rforeach_cloref($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_stream_vt_rforeach_cloref:
  _ats2plpre_stream_vt_auxmain_50($arg1, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_50($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmp121;
  my $tmp122;
  my $tmp123;
##
  __patsflab__ats2plpre_stream_vt_auxmain_50:
  $tmp121 = ATSPMVllazyval_eval($arg0);
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab52:
    if(ATSCKptriscons($tmp121)) { goto __atstmplab55; }
    __atstmplab53:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab54:
    __atstmplab55:
    $tmp122 = $tmp121->[0];
    $tmp123 = $tmp121->[1];
    #ATSINSfreecon($tmp121);
    _ats2plpre_stream_vt_auxmain_50($env0, $tmp123);
    &{$env0->[0]}($env0, $tmp122);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_rforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret125;
##
  __patsflab_stream_vt_rforeach_method:
  $tmpret125 = _ats2plpre_stream_vt_patsfun_52__closurerize($arg0);
  return $tmpret125;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_52($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_stream_vt_patsfun_52:
  ats2plpre_stream_vt_rforeach_cloref($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_stream_vt_tabulate_cloref($)
{
##
  my($arg0) = @_;
##
  my $tmpret127;
##
  __patsflab_stream_vt_tabulate_cloref:
  $tmpret127 = _ats2plpre_stream_vt_auxmain_54($arg0, 0);
  return $tmpret127;
} #end-of-function


sub
_ats2plpre_stream_vt_auxmain_54($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret128;
##
  __patsflab__ats2plpre_stream_vt_auxmain_54:
  $tmpret128 = ATSPMVllazyval(_ats2plpre_stream_vt_patsfun_55__closurerize($env0, $arg0));
  return $tmpret128;
} #end-of-function


sub
_ats2plpre_stream_vt_patsfun_55($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret129;
  my $tmp130;
  my $tmp131;
  my $tmp132;
##
  __patsflab__ats2plpre_stream_vt_patsfun_55:
  if($arg0) {
    $tmp130 = &{$env0->[0]}($env0, $env1);
    $tmp132 = ats2plpre_add_int1_int1($env1, 1);
    $tmp131 = _ats2plpre_stream_vt_auxmain_54($env0, $tmp132);
    $tmpret129 = [$tmp130, $tmp131];
  } else {
  } #endif
  return $tmpret129;
} #end-of-function


######
#ATSextcode_beg()
######
######
1; ##note that it is needed by 'use' or 'require'
######
######
#ATSextcode_end()
######
######
##
## end-of-compilation-unit
##
######
