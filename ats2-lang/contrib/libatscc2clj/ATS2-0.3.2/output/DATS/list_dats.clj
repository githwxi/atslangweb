;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2017-4-12:  0h:42m
;;
;;;;;;
(declare _ats2cljpre_list_loop_3)
(declare _ats2cljpre_list_loop1_6)
(declare _ats2cljpre_list_loop2_7)
(declare _ats2cljpre_list_loop_14)
(declare _ats2cljpre_list_loop_21)
(declare _ats2cljpre_list_loop_24)
(declare _ats2cljpre_list_auxlst_26)
(declare _ats2cljpre_list_patsfun_35)
(declare _ats2cljpre_list_loop_37)
(declare _ats2cljpre_list_patsfun_39)
(declare _ats2cljpre_list_patsfun_42)
(declare _ats2cljpre_list_loop_44)
(declare _ats2cljpre_list_patsfun_46)
(declare _ats2cljpre_list_patsfun_50)
(declare _ats2cljpre_list_aux_52)
(declare _ats2cljpre_list_patsfun_54)
(declare _ats2cljpre_list_patsfun_57)
(declare _ats2cljpre_list_aux_59)
(declare _ats2cljpre_list_patsfun_61)
(declare _ats2cljpre_list_aux_63)
(declare _ats2cljpre_list_patsfun_65)
(declare _ats2cljpre_list_loop_67)
(declare _ats2cljpre_list_patsfun_69)
(declare _ats2cljpre_list_loop_71)
(declare _ats2cljpre_list_patsfun_73)
(declare _ats2cljpre_list_aux_75)
(declare _ats2cljpre_list_patsfun_77)
(declare _ats2cljpre_list_aux_79)
(declare _ats2cljpre_list_patsfun_81)
(declare _ats2cljpre_list_auxmain_85)
(declare _ats2cljpre_list_patsfun_86)
(declare _ats2cljpre_list_auxmain_88)
(declare _ats2cljpre_list_patsfun_89)
(declare _ats2cljpre_list_auxone_91)
(declare _ats2cljpre_list_patsfun_92)
(declare _ats2cljpre_list_auxmain_93)
(declare _ats2cljpre_list_patsfun_94)
(declare _ats2cljpre_list_aux_103)
(declare _ats2cljpre_list_patsfun_105)
(declare ats2cljpre_list_make_elt)
(declare _ats2cljpre_list_loop_3)
(declare ats2cljpre_list_make_intrange_2)
(declare ats2cljpre_list_make_intrange_3)
(declare _ats2cljpre_list_loop1_6)
(declare _ats2cljpre_list_loop2_7)
(declare ats2cljpre_list_length)
(declare _ats2cljpre_list_loop_14)
(declare ats2cljpre_list_last)
(declare ats2cljpre_list_get_at)
(declare ats2cljpre_list_snoc)
(declare ats2cljpre_list_extend)
(declare ats2cljpre_list_append)
(declare ats2cljpre_mul_int_list)
(declare _ats2cljpre_list_loop_21)
(declare ats2cljpre_list_reverse)
(declare ats2cljpre_list_reverse_append)
(declare _ats2cljpre_list_loop_24)
(declare ats2cljpre_list_concat)
(declare _ats2cljpre_list_auxlst_26)
(declare ats2cljpre_list_take)
(declare ats2cljpre_list_drop)
(declare ats2cljpre_list_split_at)
(declare ats2cljpre_list_insert_at)
(declare ats2cljpre_list_remove_at)
(declare ats2cljpre_list_takeout_at)
(declare ats2cljpre_list_exists)
(declare ats2cljpre_list_exists_method)
(declare _ats2cljpre_list_patsfun_35)
(declare ats2cljpre_list_iexists)
(declare _ats2cljpre_list_loop_37)
(declare ats2cljpre_list_iexists_method)
(declare _ats2cljpre_list_patsfun_39)
(declare ats2cljpre_list_forall)
(declare ats2cljpre_list_forall_method)
(declare _ats2cljpre_list_patsfun_42)
(declare ats2cljpre_list_iforall)
(declare _ats2cljpre_list_loop_44)
(declare ats2cljpre_list_iforall_method)
(declare _ats2cljpre_list_patsfun_46)
(declare ats2cljpre_list_app)
(declare ats2cljpre_list_foreach)
(declare ats2cljpre_list_foreach_method)
(declare _ats2cljpre_list_patsfun_50)
(declare ats2cljpre_list_iforeach)
(declare _ats2cljpre_list_aux_52)
(declare ats2cljpre_list_iforeach_method)
(declare _ats2cljpre_list_patsfun_54)
(declare ats2cljpre_list_rforeach)
(declare ats2cljpre_list_rforeach_method)
(declare _ats2cljpre_list_patsfun_57)
(declare ats2cljpre_list_filter)
(declare _ats2cljpre_list_aux_59)
(declare ats2cljpre_list_filter_method)
(declare _ats2cljpre_list_patsfun_61)
(declare ats2cljpre_list_map)
(declare _ats2cljpre_list_aux_63)
(declare ats2cljpre_list_map_method)
(declare _ats2cljpre_list_patsfun_65)
(declare ats2cljpre_list_foldleft)
(declare _ats2cljpre_list_loop_67)
(declare ats2cljpre_list_foldleft_method)
(declare _ats2cljpre_list_patsfun_69)
(declare ats2cljpre_list_ifoldleft)
(declare _ats2cljpre_list_loop_71)
(declare ats2cljpre_list_ifoldleft_method)
(declare _ats2cljpre_list_patsfun_73)
(declare ats2cljpre_list_foldright)
(declare _ats2cljpre_list_aux_75)
(declare ats2cljpre_list_foldright_method)
(declare _ats2cljpre_list_patsfun_77)
(declare ats2cljpre_list_ifoldright)
(declare _ats2cljpre_list_aux_79)
(declare ats2cljpre_list_ifoldright_method)
(declare _ats2cljpre_list_patsfun_81)
(declare ats2cljpre_streamize_list_elt)
(declare _ats2cljpre_list_auxmain_85)
(declare _ats2cljpre_list_patsfun_86)
(declare ats2cljpre_streamize_list_zip)
(declare _ats2cljpre_list_auxmain_88)
(declare _ats2cljpre_list_patsfun_89)
(declare ats2cljpre_streamize_list_cross)
(declare _ats2cljpre_list_auxone_91)
(declare _ats2cljpre_list_patsfun_92)
(declare _ats2cljpre_list_auxmain_93)
(declare _ats2cljpre_list_patsfun_94)
(declare ats2cljpre_CLJlist_oflist_rev)
(declare _ats2cljpre_list_aux_103)
(declare ats2cljpre_list_sort_2)
(declare _ats2cljpre_list_patsfun_105)
;;;;;;


;;
;; ATSextcode_beg()
;;
;; list.dats
;; declared: stream_vt.dats
(declare ats2cljpre_stream_vt_append)
;;
;; ATSextcode_end()
;;

(defn
_ats2cljpre_list_patsfun_35__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_35 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_39__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_39 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_42__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_42 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_46__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_46 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_50__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_50 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_54__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_54 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_57__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_57 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_61__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_61 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_65__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_65 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_69__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_69 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_73__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_73 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_77__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_77 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_81__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_81 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_86__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_86 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_89__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_89 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_92__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_92 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_94__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_list_patsfun_94 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_list_patsfun_105__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0 xarg1](_ats2cljpre_list_patsfun_105 (ATSCCget_1 _fcenvs_) xarg0 xarg1)) xenv0)
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_list_make_elt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret2 nil
  tmp7 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_make_elt
  (ATSINStmpset tmp7 atscc2clj_null)
  (_ats2cljpre_list_loop_3 arg1 arg0 @tmp7)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_3[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret3 nil
  tmp4 nil
  tmp5 nil
  tmp6 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_3
    (ATSINStmpset tmp4 (ats2cljpre_gt_int1_int1 arg0 0))
    (if @tmp4
      (do
       (ATSINStmpset tmp5 (ats2cljpre_sub_int1_int1 arg0 1))
       (ATSINStmpset tmp6 (ATSPMVtysum env0 arg1))
       ;; apy0 = @tmp5
       ;; apy1 = @tmp6
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_3
       (recur env0 @tmp5 @tmp6)
      ) ;; if-then
      (do
       arg1
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret3;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_make_intrange_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret8 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_make_intrange_2
  (ats2cljpre_list_make_intrange_3 arg0 arg1 1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_make_intrange_3[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret9 nil
  tmp20 nil
  tmp21 nil
  tmp22 nil
  tmp23 nil
  tmp24 nil
  tmp25 nil
  tmp26 nil
  tmp27 nil
  tmp28 nil
  tmp29 nil
  tmp30 nil
  tmp31 nil
  tmp32 nil
  tmp33 nil
  tmp34 nil
  tmp35 nil
  tmp36 nil
  tmp37 nil
  tmp38 nil
  tmp39 nil
  tmp40 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_make_intrange_3
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (ATSINStmpset tmp20 (ats2cljpre_gt_int0_int0 arg2 0))
       (if (not (ATSCKpat_bool @tmp20 atscc2clj_true))
         (casefnx 2)
         (do
          (ATSINStmpset tmp21 (ats2cljpre_lt_int0_int0 arg0 arg1))
          (if @tmp21
            (do
             (ATSINStmpset tmp25 (ats2cljpre_sub_int0_int0 arg1 arg0))
             (ATSINStmpset tmp24 (ats2cljpre_add_int0_int0 @tmp25 arg2))
             (ATSINStmpset tmp23 (ats2cljpre_sub_int0_int0 @tmp24 1))
             (ATSINStmpset tmp22 (ats2cljpre_div_int0_int0 @tmp23 arg2))
             (ATSINStmpset tmp28 (ats2cljpre_sub_int0_int0 @tmp22 1))
             (ATSINStmpset tmp27 (ats2cljpre_mul_int0_int0 @tmp28 arg2))
             (ATSINStmpset tmp26 (ats2cljpre_add_int0_int0 arg0 @tmp27))
             (ATSINStmpset tmp29 atscc2clj_null)
             (_ats2cljpre_list_loop1_6 @tmp22 @tmp26 arg2 @tmp29)
            ) ;; if-then
            (do
             atscc2clj_null
            ) ;; if-else
          )
         )
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      2 (do
       (ATSINStmpset tmp30 (ats2cljpre_lt_int0_int0 arg2 0))
       (if (not (ATSCKpat_bool @tmp30 atscc2clj_true))
         (casefnx 3)
         (do
          (ATSINStmpset tmp31 (ats2cljpre_gt_int0_int0 arg0 arg1))
          (if @tmp31
            (do
             (ATSINStmpset tmp32 (ats2cljpre_neg_int0 arg2))
             (ATSINStmpset tmp36 (ats2cljpre_sub_int0_int0 arg0 arg1))
             (ATSINStmpset tmp35 (ats2cljpre_add_int0_int0 @tmp36 @tmp32))
             (ATSINStmpset tmp34 (ats2cljpre_sub_int0_int0 @tmp35 1))
             (ATSINStmpset tmp33 (ats2cljpre_div_int0_int0 @tmp34 @tmp32))
             (ATSINStmpset tmp39 (ats2cljpre_sub_int0_int0 @tmp33 1))
             (ATSINStmpset tmp38 (ats2cljpre_mul_int0_int0 @tmp39 @tmp32))
             (ATSINStmpset tmp37 (ats2cljpre_sub_int0_int0 arg0 @tmp38))
             (ATSINStmpset tmp40 atscc2clj_null)
             (_ats2cljpre_list_loop2_7 @tmp33 @tmp37 @tmp32 @tmp40)
            ) ;; if-then
            (do
             atscc2clj_null
            ) ;; if-else
          )
         )
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop1_6[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
  tmpret10 nil
  tmp11 nil
  tmp12 nil
  tmp13 nil
  tmp14 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop1_6
    (ATSINStmpset tmp11 (ats2cljpre_gt_int0_int0 arg0 0))
    (if @tmp11
      (do
       (ATSINStmpset tmp12 (ats2cljpre_sub_int0_int0 arg0 1))
       (ATSINStmpset tmp13 (ats2cljpre_sub_int0_int0 arg1 arg2))
       (ATSINStmpset tmp14 (ATSPMVtysum arg1 arg3))
       ;; apy0 = @tmp12
       ;; apy1 = @tmp13
       ;; apy2 = arg2
       ;; apy3 = @tmp14
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; arg3 = apy3
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop1_6
       (recur @tmp12 @tmp13 arg2 @tmp14)
      ) ;; if-then
      (do
       arg3
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret10;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop2_7[arg0 arg1 arg2 arg3]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
;;apy3 nil
  tmpret15 nil
  tmp16 nil
  tmp17 nil
  tmp18 nil
  tmp19 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
     arg2 arg2
     arg3 arg3
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop2_7
    (ATSINStmpset tmp16 (ats2cljpre_gt_int0_int0 arg0 0))
    (if @tmp16
      (do
       (ATSINStmpset tmp17 (ats2cljpre_sub_int0_int0 arg0 1))
       (ATSINStmpset tmp18 (ats2cljpre_add_int0_int0 arg1 arg2))
       (ATSINStmpset tmp19 (ATSPMVtysum arg1 arg3))
       ;; apy0 = @tmp17
       ;; apy1 = @tmp18
       ;; apy2 = arg2
       ;; apy3 = @tmp19
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; arg2 = apy2
       ;; arg3 = apy3
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop2_7
       (recur @tmp17 @tmp18 arg2 @tmp19)
      ) ;; if-then
      (do
       arg3
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret15;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret52 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_length
  (_ats2cljpre_list_loop_14 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_14[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret53 nil
  tmp55 nil
  tmp56 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_14
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp55 (ATSSELcon arg0 1))
         (ATSINStmpset tmp56 (ats2cljpre_add_int1_int1 arg1 1))
         ;; apy0 = @tmp55
         ;; apy1 = @tmp56
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_14
         (_ats2cljpre_list_loop_14 @tmp55 @tmp56)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret53;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_last[arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret57 nil
  tmp58 nil
  tmp59 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab_list_last
    (ATSINStmpset tmp58 (ATSSELcon arg0 0))
    (ATSINStmpset tmp59 (ATSSELcon arg0 1))
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons @tmp59)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         @tmp58
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         ;; apy0 = @tmp59
         ;; arg0 = apy0
         ;; funlab_clj = 1; // __patsflab_list_last
         (ats2cljpre_list_last @tmp59)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret57;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_get_at[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret60 nil
  tmp61 nil
  tmp62 nil
  tmp63 nil
  tmp64 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_get_at
    (ATSINStmpset tmp61 (ats2cljpre_eq_int1_int1 arg1 0))
    (if @tmp61
      (do
       (ATSINStmpset tmp62 (ATSSELcon arg0 0))
       @tmp62
      ) ;; if-then
      (do
       (ATSINStmpset tmp63 (ATSSELcon arg0 1))
       (ATSINStmpset tmp64 (ats2cljpre_sub_int1_int1 arg1 1))
       ;; apy0 = @tmp63
       ;; apy1 = @tmp64
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab_list_get_at
       (recur @tmp63 @tmp64)
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret60;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_snoc[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret65 nil
  tmp66 nil
  tmp67 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_snoc
  (ATSINStmpset tmp67 atscc2clj_null)
  (ATSINStmpset tmp66 (ATSPMVtysum arg1 @tmp67))
  (ats2cljpre_list_append arg0 @tmp66)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_extend[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret68 nil
  tmp69 nil
  tmp70 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_extend
  (ATSINStmpset tmp70 atscc2clj_null)
  (ATSINStmpset tmp69 (ATSPMVtysum arg1 @tmp70))
  (ats2cljpre_list_append arg0 @tmp69)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret71 nil
  tmp72 nil
  tmp73 nil
  tmp74 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_append
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp72 (ATSSELcon arg0 0))
       (ATSINStmpset tmp73 (ATSSELcon arg0 1))
       (ATSINStmpset tmp74 (ats2cljpre_list_append @tmp73 arg1))
       (ATSPMVtysum @tmp72 @tmp74)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_mul_int_list[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret75 nil
  tmp80 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_mul_int_list
  (ATSINStmpset tmp80 atscc2clj_null)
  (_ats2cljpre_list_loop_21 arg1 arg0 @tmp80)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_21[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret76 nil
  tmp77 nil
  tmp78 nil
  tmp79 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_21
    (ATSINStmpset tmp77 (ats2cljpre_gt_int1_int1 arg0 0))
    (if @tmp77
      (do
       (ATSINStmpset tmp78 (ats2cljpre_sub_int1_int1 arg0 1))
       (ATSINStmpset tmp79 (ats2cljpre_list_append env0 arg1))
       ;; apy0 = @tmp78
       ;; apy1 = @tmp79
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_21
       (recur env0 @tmp78 @tmp79)
      ) ;; if-then
      (do
       arg1
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret76;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_reverse[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret81 nil
  tmp82 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_reverse
  (ATSINStmpset tmp82 atscc2clj_null)
  (ats2cljpre_list_reverse_append arg0 @tmp82)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_reverse_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret83 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_reverse_append
  (_ats2cljpre_list_loop_24 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_24[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret84 nil
  tmp85 nil
  tmp86 nil
  tmp87 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_24
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp85 (ATSSELcon arg0 0))
         (ATSINStmpset tmp86 (ATSSELcon arg0 1))
         (ATSINStmpset tmp87 (ATSPMVtysum @tmp85 arg1))
         ;; apy0 = @tmp86
         ;; apy1 = @tmp87
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_24
         (_ats2cljpre_list_loop_24 @tmp86 @tmp87)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret84;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_concat[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret88 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_concat
  (_ats2cljpre_list_auxlst_26 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxlst_26[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret89 nil
  tmp90 nil
  tmp91 nil
  tmp92 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxlst_26
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp90 (ATSSELcon arg0 0))
       (ATSINStmpset tmp91 (ATSSELcon arg0 1))
       (ATSINStmpset tmp92 (_ats2cljpre_list_auxlst_26 @tmp91))
       (ats2cljpre_list_append @tmp90 @tmp92)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_take[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret93 nil
  tmp94 nil
  tmp95 nil
  tmp96 nil
  tmp97 nil
  tmp98 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_take
  (ATSINStmpset tmp94 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp94
    (do
     (ATSINStmpset tmp95 (ATSSELcon arg0 0))
     (ATSINStmpset tmp96 (ATSSELcon arg0 1))
     (ATSINStmpset tmp98 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp97 (ats2cljpre_list_take @tmp96 @tmp98))
     (ATSPMVtysum @tmp95 @tmp97)
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_drop[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret99 nil
  tmp100 nil
  tmp101 nil
  tmp102 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_drop
    (ATSINStmpset tmp100 (ats2cljpre_gt_int1_int1 arg1 0))
    (if @tmp100
      (do
       (ATSINStmpset tmp101 (ATSSELcon arg0 1))
       (ATSINStmpset tmp102 (ats2cljpre_sub_int1_int1 arg1 1))
       ;; apy0 = @tmp101
       ;; apy1 = @tmp102
       ;; arg0 = apy0
       ;; arg1 = apy1
       ;; funlab_clj = 1; // __patsflab_list_drop
       (recur @tmp101 @tmp102)
      ) ;; if-then
      (do
       arg0
      ) ;; if-else
    )
    ;; if (funlab_clj > 0) continue; else ;; return tmpret99;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_split_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret103 nil
  tmp104 nil
  tmp105 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_split_at
  (ATSINStmpset tmp104 (ats2cljpre_list_take arg0 arg1))
  (ATSINStmpset tmp105 (ats2cljpre_list_drop arg0 arg1))
  (ATSPMVtyrec @tmp104 @tmp105)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_insert_at[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret106 nil
  tmp107 nil
  tmp108 nil
  tmp109 nil
  tmp110 nil
  tmp111 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_insert_at
  (ATSINStmpset tmp107 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp107
    (do
     (ATSINStmpset tmp108 (ATSSELcon arg0 0))
     (ATSINStmpset tmp109 (ATSSELcon arg0 1))
     (ATSINStmpset tmp111 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp110 (ats2cljpre_list_insert_at @tmp109 @tmp111 arg2))
     (ATSPMVtysum @tmp108 @tmp110)
    ) ;; if-then
    (do
     (ATSPMVtysum arg2 arg0)
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_remove_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret112 nil
  tmp113 nil
  tmp114 nil
  tmp115 nil
  tmp116 nil
  tmp117 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_remove_at
  (ATSINStmpset tmp113 (ATSSELcon arg0 0))
  (ATSINStmpset tmp114 (ATSSELcon arg0 1))
  (ATSINStmpset tmp115 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp115
    (do
     (ATSINStmpset tmp117 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp116 (ats2cljpre_list_remove_at @tmp114 @tmp117))
     (ATSPMVtysum @tmp113 @tmp116)
    ) ;; if-then
    (do
     @tmp114
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_takeout_at[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret118 nil
  tmp119 nil
  tmp120 nil
  tmp121 nil
  tmp122 nil
  tmp123 nil
  tmp124 nil
  tmp125 nil
  tmp126 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_takeout_at
  (ATSINStmpset tmp119 (ATSSELcon arg0 0))
  (ATSINStmpset tmp120 (ATSSELcon arg0 1))
  (ATSINStmpset tmp121 (ats2cljpre_gt_int1_int1 arg1 0))
  (if @tmp121
    (do
     (ATSINStmpset tmp123 (ats2cljpre_sub_int1_int1 arg1 1))
     (ATSINStmpset tmp122 (ats2cljpre_list_takeout_at @tmp120 @tmp123))
     (ATSINStmpset tmp124 (ATSSELboxrec @tmp122 0))
     (ATSINStmpset tmp125 (ATSSELboxrec @tmp122 1))
     (ATSINStmpset tmp126 (ATSPMVtysum @tmp119 @tmp125))
     (ATSPMVtyrec @tmp124 @tmp126)
    ) ;; if-then
    (do
     (ATSPMVtyrec @tmp119 @tmp120)
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_exists[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret127 nil
  tmp128 nil
  tmp129 nil
  tmp130 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_exists
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp128 (ATSSELcon arg0 0))
         (ATSINStmpset tmp129 (ATSSELcon arg0 1))
         (ATSINStmpset tmp130 ((ATSfunclo_fclo arg1) arg1 @tmp128))
         (if @tmp130
           (do
            atscc2clj_true
           ) ;; if-then
           (do
            ;; apy0 = @tmp129
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list_exists
            (ats2cljpre_list_exists @tmp129 arg1)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret127;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret131 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_exists_method
  (_ats2cljpre_list_patsfun_35__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_35[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret132 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_35
  (ats2cljpre_list_exists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iexists[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret133 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iexists
  (_ats2cljpre_list_loop_37 arg1 0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_37[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret134 nil
  tmp135 nil
  tmp136 nil
  tmp137 nil
  tmp138 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_37
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_false
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp135 (ATSSELcon arg1 0))
         (ATSINStmpset tmp136 (ATSSELcon arg1 1))
         (ATSINStmpset tmp137 ((ATSfunclo_fclo env0) env0 arg0 @tmp135))
         (if @tmp137
           (do
            atscc2clj_true
           ) ;; if-then
           (do
            (ATSINStmpset tmp138 (ats2cljpre_add_int1_int1 arg0 1))
            ;; apy0 = @tmp138
            ;; apy1 = @tmp136
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_37
            (_ats2cljpre_list_loop_37 env0 @tmp138 @tmp136)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret134;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iexists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret139 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iexists_method
  (_ats2cljpre_list_patsfun_39__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_39[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret140 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_39
  (ats2cljpre_list_iexists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_forall[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret141 nil
  tmp142 nil
  tmp143 nil
  tmp144 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_forall
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp142 (ATSSELcon arg0 0))
         (ATSINStmpset tmp143 (ATSSELcon arg0 1))
         (ATSINStmpset tmp144 ((ATSfunclo_fclo arg1) arg1 @tmp142))
         (if @tmp144
           (do
            ;; apy0 = @tmp143
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list_forall
            (ats2cljpre_list_forall @tmp143 arg1)
           ) ;; if-then
           (do
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret141;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret145 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_forall_method
  (_ats2cljpre_list_patsfun_42__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_42[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret146 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_42
  (ats2cljpre_list_forall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforall[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret147 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforall
  (_ats2cljpre_list_loop_44 arg1 0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_44[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret148 nil
  tmp149 nil
  tmp150 nil
  tmp151 nil
  tmp152 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_44
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_true
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp149 (ATSSELcon arg1 0))
         (ATSINStmpset tmp150 (ATSSELcon arg1 1))
         (ATSINStmpset tmp151 ((ATSfunclo_fclo env0) env0 arg0 @tmp149))
         (if @tmp151
           (do
            (ATSINStmpset tmp152 (ats2cljpre_add_int1_int1 arg0 1))
            ;; apy0 = @tmp152
            ;; apy1 = @tmp150
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_44
            (_ats2cljpre_list_loop_44 env0 @tmp152 @tmp150)
           ) ;; if-then
           (do
            atscc2clj_false
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret148;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret153 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforall_method
  (_ats2cljpre_list_patsfun_46__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_46[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret154 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_46
  (ats2cljpre_list_iforall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_app[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_app
  (ATSINSmove1_void (ats2cljpre_list_foreach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foreach[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp157 nil
  tmp158 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list_foreach
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp157 (ATSSELcon arg0 0))
         (ATSINStmpset tmp158 (ATSSELcon arg0 1))
         (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1 @tmp157))
         ;; apy0 = @tmp158
         ;; apy1 = arg1
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab_list_foreach
         (ats2cljpre_list_foreach @tmp158 arg1)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret160 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foreach_method
  (_ats2cljpre_list_patsfun_50__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_50[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_50
  (ATSINSmove1_void (ats2cljpre_list_foreach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforeach
  (ATSINSmove1_void (_ats2cljpre_list_aux_52 arg1 0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_52[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmp164 nil
  tmp165 nil
  tmp167 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_52
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         ATSINSmove0_void
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp164 (ATSSELcon arg1 0))
         (ATSINStmpset tmp165 (ATSSELcon arg1 1))
         (ATSINSmove1_void ((ATSfunclo_fclo env0) env0 arg0 @tmp164))
         (ATSINStmpset tmp167 (ats2cljpre_add_int1_int1 arg0 1))
         ;; apy0 = @tmp167
         ;; apy1 = @tmp165
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_52
         (_ats2cljpre_list_aux_52 env0 @tmp167 @tmp165)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return/*_void*/;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_iforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret168 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_iforeach_method
  (_ats2cljpre_list_patsfun_54__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_54[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_54
  (ATSINSmove1_void (ats2cljpre_list_iforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_rforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmp171 nil
  tmp172 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_rforeach
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       ATSINSmove0_void
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp171 (ATSSELcon arg0 0))
       (ATSINStmpset tmp172 (ATSSELcon arg0 1))
       (ATSINSmove1_void (ats2cljpre_list_rforeach @tmp172 arg1))
       (ATSINSmove1_void ((ATSfunclo_fclo arg1) arg1 @tmp171))
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_rforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret174 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_rforeach_method
  (_ats2cljpre_list_patsfun_57__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_57[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_57
  (ATSINSmove1_void (ats2cljpre_list_rforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_filter[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret176 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_filter
  (_ats2cljpre_list_aux_59 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_59[env0 arg0]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
  tmpret177 nil
  tmp178 nil
  tmp179 nil
  tmp180 nil
  tmp181 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_59
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_null
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp178 (ATSSELcon arg0 0))
         (ATSINStmpset tmp179 (ATSSELcon arg0 1))
         (ATSINStmpset tmp180 ((ATSfunclo_fclo env0) env0 @tmp178))
         (if @tmp180
           (do
            (ATSINStmpset tmp181 (_ats2cljpre_list_aux_59 env0 @tmp179))
            (ATSPMVtysum @tmp178 @tmp181)
           ) ;; if-then
           (do
            ;; apy0 = @tmp179
            ;; arg0 = apy0
            ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_59
            (_ats2cljpre_list_aux_59 env0 @tmp179)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret177;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_filter_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret182 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_filter_method
  (_ats2cljpre_list_patsfun_61__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_61[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret183 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_61
  (ats2cljpre_list_filter env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_map[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret184 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_map
  (_ats2cljpre_list_aux_63 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_63[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret185 nil
  tmp186 nil
  tmp187 nil
  tmp188 nil
  tmp189 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_63
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp186 (ATSSELcon arg0 0))
       (ATSINStmpset tmp187 (ATSSELcon arg0 1))
       (ATSINStmpset tmp188 ((ATSfunclo_fclo env0) env0 @tmp186))
       (ATSINStmpset tmp189 (_ats2cljpre_list_aux_63 env0 @tmp187))
       (ATSPMVtysum @tmp188 @tmp189)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret190 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_map_method
  (_ats2cljpre_list_patsfun_65__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_65[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret191 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_65
  (ats2cljpre_list_map env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret192 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldleft
  (_ats2cljpre_list_loop_67 arg2 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_67[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret193 nil
  tmp194 nil
  tmp195 nil
  tmp196 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_67
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp194 (ATSSELcon arg1 0))
         (ATSINStmpset tmp195 (ATSSELcon arg1 1))
         (ATSINStmpset tmp196 ((ATSfunclo_fclo env0) env0 arg0 @tmp194))
         ;; apy0 = @tmp196
         ;; apy1 = @tmp195
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_67
         (_ats2cljpre_list_loop_67 env0 @tmp196 @tmp195)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret193;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret197 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldleft_method
  (_ats2cljpre_list_patsfun_69__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_69[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret198 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_69
  (ats2cljpre_list_foldleft env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret199 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldleft
  (_ats2cljpre_list_loop_71 arg2 0 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_loop_71[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
;;apy2 nil
  tmpret200 nil
  tmp201 nil
  tmp202 nil
  tmp203 nil
  tmp204 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
     arg2 arg2
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_loop_71
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg2)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp201 (ATSSELcon arg2 0))
         (ATSINStmpset tmp202 (ATSSELcon arg2 1))
         (ATSINStmpset tmp203 (ats2cljpre_add_int1_int1 arg0 1))
         (ATSINStmpset tmp204 ((ATSfunclo_fclo env0) env0 arg0 arg1 @tmp201))
         ;; apy0 = @tmp203
         ;; apy1 = @tmp204
         ;; apy2 = @tmp202
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; arg2 = apy2
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_loop_71
         (_ats2cljpre_list_loop_71 env0 @tmp203 @tmp204 @tmp202)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret200;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldleft_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret205 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldleft_method
  (_ats2cljpre_list_patsfun_73__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_73[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret206 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_73
  (ats2cljpre_list_ifoldleft env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret207 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldright
  (_ats2cljpre_list_aux_75 arg1 arg0 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_75[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret208 nil
  tmp209 nil
  tmp210 nil
  tmp211 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_75
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp209 (ATSSELcon arg0 0))
       (ATSINStmpset tmp210 (ATSSELcon arg0 1))
       (ATSINStmpset tmp211 (_ats2cljpre_list_aux_75 env0 @tmp210 arg1))
       ((ATSfunclo_fclo env0) env0 @tmp209 @tmp211)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_foldright_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret212 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_foldright_method
  (_ats2cljpre_list_patsfun_77__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_77[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret213 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_77
  (ats2cljpre_list_foldright env0 arg0 env1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret214 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldright
  (_ats2cljpre_list_aux_79 arg1 0 arg0 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_79[env0 arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret215 nil
  tmp216 nil
  tmp217 nil
  tmp218 nil
  tmp219 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_aux_79
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg1)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg2
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp216 (ATSSELcon arg1 0))
       (ATSINStmpset tmp217 (ATSSELcon arg1 1))
       (ATSINStmpset tmp219 (ats2cljpre_add_int1_int1 arg0 1))
       (ATSINStmpset tmp218 (_ats2cljpre_list_aux_79 env0 @tmp219 @tmp217 arg2))
       ((ATSfunclo_fclo env0) env0 arg0 @tmp216 @tmp218)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_ifoldright_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret220 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_ifoldright_method
  (_ats2cljpre_list_patsfun_81__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_81[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret221 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_81
  (ats2cljpre_list_ifoldright env0 arg0 env1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_elt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret224 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_elt
  (_ats2cljpre_list_auxmain_85 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_85[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret225 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_85
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_86__closurerize arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_86[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret226 nil
  tmp227 nil
  tmp228 nil
  tmp229 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_86
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp227 (ATSSELcon env0 0))
          (ATSINStmpset tmp228 (ATSSELcon env0 1))
          (ATSINStmpset tmp229 (_ats2cljpre_list_auxmain_85 @tmp228))
          (ATSPMVtysum @tmp227 @tmp229)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_zip[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret230 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_zip
  (_ats2cljpre_list_auxmain_88 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_88[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret231 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_88
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_89__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_89[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret232 nil
  tmp233 nil
  tmp234 nil
  tmp235 nil
  tmp236 nil
  tmp237 nil
  tmp238 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_89
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp233 (ATSSELcon env0 0))
          (ATSINStmpset tmp234 (ATSSELcon env0 1))
          (let[
            casefnx
            (fn casefnx[tmplab](case tmplab
              ;; ATSbranchseq_beg
              1 (do
               (if (ATSCKptriscons env1)
                 (casefnx 4)
                 (do
                  (casefnx 2)
                 )
               )
              ) ;; end-of-branch
              2 (do
               atscc2clj_null
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; ATSbranchseq_beg
              3 (do
               (casefnx 4)
              ) ;; end-of-branch
              4 (do
               (ATSINStmpset tmp235 (ATSSELcon env1 0))
               (ATSINStmpset tmp236 (ATSSELcon env1 1))
               (ATSINStmpset tmp237 (ATSPMVtyrec @tmp233 @tmp235))
               (ATSINStmpset tmp238 (_ats2cljpre_list_auxmain_88 @tmp234 @tmp236))
               (ATSPMVtysum @tmp237 @tmp238)
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
             ) ;; end-of-case
            ) ;; end-of-casefnx
           ] (casefnx 1)
          ) ;; end-of-let(casefnx)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_streamize_list_cross[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret239 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list_cross
  (_ats2cljpre_list_auxmain_93 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxone_91[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret240 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxone_91
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_92__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_92[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret241 nil
  tmp242 nil
  tmp243 nil
  tmp244 nil
  tmp245 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_92
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env1)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp242 (ATSSELcon env1 0))
          (ATSINStmpset tmp243 (ATSSELcon env1 1))
          (ATSINStmpset tmp244 (ATSPMVtyrec env0 @tmp242))
          (ATSINStmpset tmp245 (_ats2cljpre_list_auxone_91 env0 @tmp243))
          (ATSPMVtysum @tmp244 @tmp245)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_auxmain_93[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret246 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_auxmain_93
  (ATSPMVllazyval (_ats2cljpre_list_patsfun_94__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_94[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret247 nil
  tmp248 nil
  tmp249 nil
  tmp250 nil
  tmp251 nil
  tmp252 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_94
  (if arg0
    (do
     (let[
       casefnx
       (fn casefnx[tmplab](case tmplab
         ;; ATSbranchseq_beg
         1 (do
          (if (ATSCKptriscons env0)
            (casefnx 4)
            (do
             (casefnx 2)
            )
          )
         ) ;; end-of-branch
         2 (do
          atscc2clj_null
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; ATSbranchseq_beg
         3 (do
          (casefnx 4)
         ) ;; end-of-branch
         4 (do
          (ATSINStmpset tmp248 (ATSSELcon env0 0))
          (ATSINStmpset tmp249 (ATSSELcon env0 1))
          (ATSINStmpset tmp251 (_ats2cljpre_list_auxone_91 @tmp248 env1))
          (ATSINStmpset tmp252 (_ats2cljpre_list_auxmain_93 @tmp249 env1))
          (ATSINStmpset tmp250 (ats2cljpre_stream_vt_append @tmp251 @tmp252))
          (ATSPMVllazyval_eval @tmp250)
         ) ;; end-of-branch
         ;; ATSbranchseq_end
         ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
        ) ;; end-of-case
       ) ;; end-of-casefnx
      ] (casefnx 1)
     ) ;; end-of-let(casefnx)
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_CLJlist_oflist_rev[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret260 nil
  tmp265 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_CLJlist_oflist_rev
  (ATSINStmpset tmp265 (ats2cljpre_CLJlist_nil))
  (_ats2cljpre_list_aux_103 arg0 @tmp265)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_aux_103[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret261 nil
  tmp262 nil
  tmp263 nil
  tmp264 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_list_aux_103
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg1
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp262 (ATSSELcon arg0 0))
         (ATSINStmpset tmp263 (ATSSELcon arg0 1))
         (ATSINStmpset tmp264 (ats2cljpre_CLJlist_cons @tmp262 arg1))
         ;; apy0 = @tmp263
         ;; apy1 = @tmp264
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_list_aux_103
         (_ats2cljpre_list_aux_103 @tmp263 @tmp264)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret261;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_list_sort_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret266 nil
  tmp267 nil
  tmp268 nil
  tmp271 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list_sort_2
  (ATSINStmpset tmp267 (ats2cljpre_CLJlist_oflist_rev arg0))
  (ATSINStmpset tmp268 (ats2cljpre_CLJlist_sort_2 @tmp267 (_ats2cljpre_list_patsfun_105__closurerize arg1)))
  (ATSINStmpset tmp271 (ats2cljpre_CLJlist2list_rev @tmp268))
  @tmp271
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_list_patsfun_105[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret269 nil
  tmp270 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_list_patsfun_105
  (ATSINStmpset tmp270 ((ATSfunclo_fclo env0) env0 arg0 arg1))
  (ats2cljpre_neg_int0 @tmp270)
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
