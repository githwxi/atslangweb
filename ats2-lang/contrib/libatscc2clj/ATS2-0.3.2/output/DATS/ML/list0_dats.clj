;;;;;;
;;
;; The Clojure code is generated by atscc2clj
;; The starting compilation time is: 2017-4-12:  0h:42m
;;
;;;;;;
(declare _ats2cljpre_ML_list0_loop_8)
(declare _ats2cljpre_ML_list0_aux_26)
(declare _ats2cljpre_ML_list0_patsfun_29)
(declare _ats2cljpre_ML_list0_patsfun_32)
(declare _ats2cljpre_ML_list0_patsfun_35)
(declare _ats2cljpre_ML_list0_patsfun_38)
(declare _ats2cljpre_ML_list0_patsfun_42)
(declare _ats2cljpre_ML_list0_patsfun_45)
(declare _ats2cljpre_ML_list0_patsfun_48)
(declare _ats2cljpre_ML_list0_patsfun_51)
(declare _ats2cljpre_ML_list0_patsfun_54)
(declare _ats2cljpre_ML_list0_patsfun_58)
(declare _ats2cljpre_ML_list0_aux_60)
(declare _ats2cljpre_ML_list0_aux_62)
(declare _ats2cljpre_ML_list0_patsfun_64)
(declare _ats2cljpre_ML_list0_aux_66)
(declare _ats2cljpre_ML_list0_aux_68)
(declare _ats2cljpre_ML_list0_auxmain_74)
(declare _ats2cljpre_ML_list0_patsfun_75)
(declare _ats2cljpre_ML_list0_patsfun_76)
(declare ats2cljpre_stream_vt_make_nil__77__1)
(declare _ats2cljpre_ML_list0_patsfun_78__78__1)
(declare _ats2cljpre_ML_list0_auxmain_82)
(declare _ats2cljpre_ML_list0_patsfun_83)
(declare _ats2cljpre_ML_list0_patsfun_84)
(declare _ats2cljpre_ML_list0_patsfun_85)
(declare ats2cljpre_stream_vt_make_nil__77__2)
(declare _ats2cljpre_ML_list0_patsfun_78__78__2)
(declare ats2cljpre_ML_list0_head_opt)
(declare ats2cljpre_ML_list0_tail_opt)
(declare ats2cljpre_ML_list0_length)
(declare ats2cljpre_ML_list0_last_opt)
(declare _ats2cljpre_ML_list0_loop_8)
(declare ats2cljpre_ML_list0_get_at_opt)
(declare ats2cljpre_ML_list0_make_elt)
(declare ats2cljpre_ML_list0_make_intrange_2)
(declare ats2cljpre_ML_list0_make_intrange_3)
(declare ats2cljpre_ML_list0_snoc)
(declare ats2cljpre_ML_list0_extend)
(declare ats2cljpre_ML_list0_append)
(declare ats2cljpre_ML_mul_int_list0)
(declare ats2cljpre_ML_list0_reverse)
(declare ats2cljpre_ML_list0_reverse_append)
(declare ats2cljpre_ML_list0_concat)
(declare ats2cljpre_ML_list0_remove_at_opt)
(declare _ats2cljpre_ML_list0_aux_26)
(declare ats2cljpre_ML_list0_exists)
(declare ats2cljpre_ML_list0_exists_method)
(declare _ats2cljpre_ML_list0_patsfun_29)
(declare ats2cljpre_ML_list0_iexists)
(declare ats2cljpre_ML_list0_iexists_method)
(declare _ats2cljpre_ML_list0_patsfun_32)
(declare ats2cljpre_ML_list0_forall)
(declare ats2cljpre_ML_list0_forall_method)
(declare _ats2cljpre_ML_list0_patsfun_35)
(declare ats2cljpre_ML_list0_iforall)
(declare ats2cljpre_ML_list0_iforall_method)
(declare _ats2cljpre_ML_list0_patsfun_38)
(declare ats2cljpre_ML_list0_app)
(declare ats2cljpre_ML_list0_foreach)
(declare ats2cljpre_ML_list0_foreach_method)
(declare _ats2cljpre_ML_list0_patsfun_42)
(declare ats2cljpre_ML_list0_iforeach)
(declare ats2cljpre_ML_list0_iforeach_method)
(declare _ats2cljpre_ML_list0_patsfun_45)
(declare ats2cljpre_ML_list0_rforeach)
(declare ats2cljpre_ML_list0_rforeach_method)
(declare _ats2cljpre_ML_list0_patsfun_48)
(declare ats2cljpre_ML_list0_filter)
(declare ats2cljpre_ML_list0_filter_method)
(declare _ats2cljpre_ML_list0_patsfun_51)
(declare ats2cljpre_ML_list0_map)
(declare ats2cljpre_ML_list0_map_method)
(declare _ats2cljpre_ML_list0_patsfun_54)
(declare ats2cljpre_ML_list0_mapcons)
(declare ats2cljpre_ML_list0_find_opt)
(declare ats2cljpre_ML_list0_find_opt_method)
(declare _ats2cljpre_ML_list0_patsfun_58)
(declare ats2cljpre_ML_list0_zip)
(declare _ats2cljpre_ML_list0_aux_60)
(declare ats2cljpre_ML_list0_zipwith)
(declare _ats2cljpre_ML_list0_aux_62)
(declare ats2cljpre_ML_list0_zipwith_method)
(declare _ats2cljpre_ML_list0_patsfun_64)
(declare ats2cljpre_ML_list0_foldleft)
(declare _ats2cljpre_ML_list0_aux_66)
(declare ats2cljpre_ML_list0_foldright)
(declare _ats2cljpre_ML_list0_aux_68)
(declare ats2cljpre_ML_list0_sort_2)
(declare ats2cljpre_ML_streamize_list0_zip)
(declare ats2cljpre_ML_streamize_list0_cross)
(declare ats2cljpre_ML_streamize_list0_nchoose)
(declare _ats2cljpre_ML_list0_auxmain_74)
(declare _ats2cljpre_ML_list0_patsfun_75)
(declare _ats2cljpre_ML_list0_patsfun_76)
(declare ats2cljpre_stream_vt_make_nil__77__1)
(declare _ats2cljpre_ML_list0_patsfun_78__78__1)
(declare ats2cljpre_ML_streamize_list0_nchoose_rest)
(declare _ats2cljpre_ML_list0_auxmain_82)
(declare _ats2cljpre_ML_list0_patsfun_83)
(declare _ats2cljpre_ML_list0_patsfun_84)
(declare _ats2cljpre_ML_list0_patsfun_85)
(declare ats2cljpre_stream_vt_make_nil__77__2)
(declare _ats2cljpre_ML_list0_patsfun_78__78__2)
;;;;;;


(defn
_ats2cljpre_ML_list0_patsfun_29__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_29 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_32__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_32 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_35__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_35 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_38__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_38 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_42__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_42 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_45__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_45 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_48__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_48 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_51__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_51 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_54__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_54 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_58__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_58 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_64__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_64 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_75__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_75 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_76__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_76 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_78__78__1__closurerize[]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_78__78__1 xarg0)))
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_83__closurerize[xenv0 xenv1]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_83 (ATSCCget_1 _fcenvs_) (ATSCCget_2 _fcenvs_) xarg0)) xenv0 xenv1)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_84__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_84 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_85__closurerize[xenv0]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_85 (ATSCCget_1 _fcenvs_) xarg0)) xenv0)
;;%}
) ;; end-of-defn


(defn
_ats2cljpre_ML_list0_patsfun_78__78__2__closurerize[]
;;%{
  (list (fn[_fcenvs_ xarg0](_ats2cljpre_ML_list0_patsfun_78__78__2 xarg0)))
;;%}
) ;; end-of-defn


;;fun
(defn
 ats2cljpre_ML_list0_head_opt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret7 nil
  tmp8 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_head_opt
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp8 (ATSSELcon arg0 0))
       (ATSPMVtysum @tmp8)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_tail_opt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret10 nil
  tmp12 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_tail_opt
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp12 (ATSSELcon arg0 1))
       (ATSPMVtysum @tmp12)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_length[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret13 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_length
  (ats2cljpre_list_length arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_last_opt[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret14 nil
  tmp18 nil
  tmp19 nil
  tmp20 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_last_opt
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp18 (ATSSELcon arg0 0))
       (ATSINStmpset tmp19 (ATSSELcon arg0 1))
       (ATSINStmpset tmp20 (_ats2cljpre_ML_list0_loop_8 @tmp18 @tmp19))
       (ATSPMVtysum @tmp20)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_loop_8[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret15 nil
  tmp16 nil
  tmp17 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_ML_list0_loop_8
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp16 (ATSSELcon arg1 0))
         (ATSINStmpset tmp17 (ATSSELcon arg1 1))
         ;; apy0 = @tmp16
         ;; apy1 = @tmp17
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_ML_list0_loop_8
         (_ats2cljpre_ML_list0_loop_8 @tmp16 @tmp17)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret15;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_get_at_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret21 nil
  tmp22 nil
  tmp23 nil
  tmp24 nil
  tmp25 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list0_get_at_opt
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_null
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp22 (ATSSELcon arg0 0))
         (ATSINStmpset tmp23 (ATSSELcon arg0 1))
         (ATSINStmpset tmp24 (ats2cljpre_gt_int1_int1 arg1 0))
         (if @tmp24
           (do
            (ATSINStmpset tmp25 (ats2cljpre_sub_int1_int1 arg1 1))
            ;; apy0 = @tmp23
            ;; apy1 = @tmp25
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list0_get_at_opt
            (ats2cljpre_ML_list0_get_at_opt @tmp23 @tmp25)
           ) ;; if-then
           (do
            (ATSPMVtysum @tmp22)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret21;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_make_elt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret26 nil
  tmp27 nil
  tmp28 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_make_elt
  (ATSINStmpset tmp27 (ats2cljpre_gte_int1_int1 arg0 0))
  (if @tmp27
    (do
     (ATSINStmpset tmp28 (ats2cljpre_list_make_elt arg0 arg1))
     @tmp28
    ) ;; if-then
    (do
     atscc2clj_null
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_make_intrange_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret29 nil
  tmp30 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_make_intrange_2
  (ATSINStmpset tmp30 (ats2cljpre_list_make_intrange_2 arg0 arg1))
  @tmp30
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_make_intrange_3[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret31 nil
  tmp32 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_make_intrange_3
  (ATSINStmpset tmp32 (ats2cljpre_list_make_intrange_3 arg0 arg1 arg2))
  @tmp32
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_snoc[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret44 nil
  tmp45 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_snoc
  (ATSINStmpset tmp45 (ats2cljpre_list_snoc arg0 arg1))
  @tmp45
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_extend[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret46 nil
  tmp47 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_extend
  (ATSINStmpset tmp47 (ats2cljpre_list_extend arg0 arg1))
  @tmp47
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret48 nil
  tmp49 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_append
  (ATSINStmpset tmp49 (ats2cljpre_list_append arg0 arg1))
  @tmp49
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_mul_int_list0[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret50 nil
  tmp51 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_mul_int_list0
  (ATSINStmpset tmp51 (ats2cljpre_mul_int_list arg0 arg1))
  @tmp51
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_reverse[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret52 nil
  tmp53 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_reverse
  (ATSINStmpset tmp53 (ats2cljpre_list_reverse arg0))
  @tmp53
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_reverse_append[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret54 nil
  tmp55 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_reverse_append
  (ATSINStmpset tmp55 (ats2cljpre_list_reverse_append arg0 arg1))
  @tmp55
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_concat[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret56 nil
  tmp57 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_concat
  (ATSINStmpset tmp57 (ats2cljpre_list_concat arg0))
  @tmp57
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_remove_at_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret58 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_remove_at_opt
  (_ats2cljpre_ML_list0_aux_26 arg0 0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_aux_26[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret59 nil
  tmp60 nil
  tmp61 nil
  tmp62 nil
  tmp63 nil
  tmp64 nil
  tmp65 nil
  tmp66 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_aux_26
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp60 (ATSSELcon arg0 0))
       (ATSINStmpset tmp61 (ATSSELcon arg0 1))
       (ATSINStmpset tmp62 (ats2cljpre_gt_int1_int1 arg1 0))
       (if @tmp62
         (do
          (ATSINStmpset tmp64 (ats2cljpre_sub_int1_int1 arg1 1))
          (ATSINStmpset tmp63 (_ats2cljpre_ML_list0_aux_26 @tmp61 @tmp64))
          (let[
            casefnx
            (fn casefnx[tmplab](case tmplab
              ;; ATSbranchseq_beg
              1 (do
               (if (ATSCKptriscons @tmp63)
                 (casefnx 4)
                 (do
                  (casefnx 2)
                 )
               )
              ) ;; end-of-branch
              2 (do
               atscc2clj_null
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; ATSbranchseq_beg
              3 (do
               (casefnx 4)
              ) ;; end-of-branch
              4 (do
               (ATSINStmpset tmp65 (ATSSELcon @tmp63 0))
               ;; ATSINSfreecon(@tmp63);
               (ATSINStmpset tmp66 (ATSPMVtysum @tmp60 @tmp65))
               (ATSPMVtysum @tmp66)
              ) ;; end-of-branch
              ;; ATSbranchseq_end
              ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
             ) ;; end-of-case
            ) ;; end-of-casefnx
           ] (casefnx 1)
          ) ;; end-of-let(casefnx)
         ) ;; if-then
         (do
          (ATSPMVtysum @tmp61)
         ) ;; if-else
       )
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_exists[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret67 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_exists
  (ats2cljpre_list_exists arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_exists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret68 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_exists_method
  (_ats2cljpre_ML_list0_patsfun_29__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_29[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret69 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_29
  (ats2cljpre_ML_list0_exists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iexists[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret70 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iexists
  (ats2cljpre_list_iexists arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iexists_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret71 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iexists_method
  (_ats2cljpre_ML_list0_patsfun_32__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_32[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret72 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_32
  (ats2cljpre_ML_list0_iexists env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_forall[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret73 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_forall
  (ats2cljpre_list_forall arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_forall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret74 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_forall_method
  (_ats2cljpre_ML_list0_patsfun_35__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_35[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret75 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_35
  (ats2cljpre_ML_list0_forall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iforall[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret76 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iforall
  (ats2cljpre_list_iforall arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iforall_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret77 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iforall_method
  (_ats2cljpre_ML_list0_patsfun_38__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_38[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret78 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_38
  (ats2cljpre_ML_list0_iforall env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_app[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_app
  (ATSINSmove1_void (ats2cljpre_ML_list0_foreach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_foreach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_foreach
  (ATSINSmove1_void (ats2cljpre_list_foreach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_foreach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret81 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_foreach_method
  (_ats2cljpre_ML_list0_patsfun_42__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_42[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_42
  (ATSINSmove1_void (ats2cljpre_ML_list0_foreach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iforeach
  (ATSINSmove1_void (ats2cljpre_list_iforeach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_iforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret84 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_iforeach_method
  (_ats2cljpre_ML_list0_patsfun_45__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_45[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_45
  (ATSINSmove1_void (ats2cljpre_ML_list0_iforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_rforeach[arg0 arg1]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_rforeach
  (ATSINSmove1_void (ats2cljpre_list_rforeach arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_rforeach_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret87 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_rforeach_method
  (_ats2cljpre_ML_list0_patsfun_48__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_48[env0 arg0]
(
with-local-vars
[
;;knd = 0
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_48
  (ATSINSmove1_void (ats2cljpre_ML_list0_rforeach env0 arg0))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_filter[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret89 nil
  tmp90 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_filter
  (ATSINStmpset tmp90 (ats2cljpre_list_filter arg0 arg1))
  @tmp90
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_filter_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret91 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_filter_method
  (_ats2cljpre_ML_list0_patsfun_51__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_51[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret92 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_51
  (ats2cljpre_ML_list0_filter env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_map[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret93 nil
  tmp94 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_map
  (ATSINStmpset tmp94 (ats2cljpre_list_map arg0 arg1))
  @tmp94
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_map_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret95 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_map_method
  (_ats2cljpre_ML_list0_patsfun_54__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_54[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret96 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_54
  (ats2cljpre_ML_list0_map env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_mapcons[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret97 nil
  tmp98 nil
  tmp99 nil
  tmp100 nil
  tmp101 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_mapcons
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg1)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp98 (ATSSELcon arg1 0))
       (ATSINStmpset tmp99 (ATSSELcon arg1 1))
       (ATSINStmpset tmp100 (ATSPMVtysum arg0 @tmp98))
       (ATSINStmpset tmp101 (ats2cljpre_ML_list0_mapcons arg0 @tmp99))
       (ATSPMVtysum @tmp100 @tmp101)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_find_opt[arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret102 nil
  tmp103 nil
  tmp104 nil
  tmp105 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab_list0_find_opt
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg0)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         atscc2clj_null
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp103 (ATSSELcon arg0 0))
         (ATSINStmpset tmp104 (ATSSELcon arg0 1))
         (ATSINStmpset tmp105 ((ATSfunclo_fclo arg1) arg1 @tmp103))
         (if @tmp105
           (do
            (ATSPMVtysum @tmp103)
           ) ;; if-then
           (do
            ;; apy0 = @tmp104
            ;; apy1 = arg1
            ;; arg0 = apy0
            ;; arg1 = apy1
            ;; funlab_clj = 1; // __patsflab_list0_find_opt
            (ats2cljpre_ML_list0_find_opt @tmp104 arg1)
           ) ;; if-else
         )
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret102;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_find_opt_method[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret106 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_find_opt_method
  (_ats2cljpre_ML_list0_patsfun_58__closurerize arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_58[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret107 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_58
  (ats2cljpre_ML_list0_find_opt env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_zip[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret108 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_zip
  (_ats2cljpre_ML_list0_aux_60 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_aux_60[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret109 nil
  tmp110 nil
  tmp111 nil
  tmp112 nil
  tmp113 nil
  tmp114 nil
  tmp115 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_aux_60
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp110 (ATSSELcon arg0 0))
       (ATSINStmpset tmp111 (ATSSELcon arg0 1))
       (let[
         casefnx
         (fn casefnx[tmplab](case tmplab
           ;; ATSbranchseq_beg
           1 (do
            (if (ATSCKptriscons arg1)
              (casefnx 4)
              (do
               (casefnx 2)
              )
            )
           ) ;; end-of-branch
           2 (do
            atscc2clj_null
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; ATSbranchseq_beg
           3 (do
            (casefnx 4)
           ) ;; end-of-branch
           4 (do
            (ATSINStmpset tmp112 (ATSSELcon arg1 0))
            (ATSINStmpset tmp113 (ATSSELcon arg1 1))
            (ATSINStmpset tmp114 (ATSPMVtyrec @tmp110 @tmp112))
            (ATSINStmpset tmp115 (_ats2cljpre_ML_list0_aux_60 @tmp111 @tmp113))
            (ATSPMVtysum @tmp114 @tmp115)
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
          ) ;; end-of-case
         ) ;; end-of-casefnx
        ] (casefnx 1)
       ) ;; end-of-let(casefnx)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_zipwith[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret116 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_zipwith
  (_ats2cljpre_ML_list0_aux_62 arg0 arg1 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_aux_62[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret117 nil
  tmp118 nil
  tmp119 nil
  tmp120 nil
  tmp121 nil
  tmp122 nil
  tmp123 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_aux_62
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       atscc2clj_null
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp118 (ATSSELcon arg0 0))
       (ATSINStmpset tmp119 (ATSSELcon arg0 1))
       (let[
         casefnx
         (fn casefnx[tmplab](case tmplab
           ;; ATSbranchseq_beg
           1 (do
            (if (ATSCKptriscons arg1)
              (casefnx 4)
              (do
               (casefnx 2)
              )
            )
           ) ;; end-of-branch
           2 (do
            atscc2clj_null
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; ATSbranchseq_beg
           3 (do
            (casefnx 4)
           ) ;; end-of-branch
           4 (do
            (ATSINStmpset tmp120 (ATSSELcon arg1 0))
            (ATSINStmpset tmp121 (ATSSELcon arg1 1))
            (ATSINStmpset tmp122 ((ATSfunclo_fclo arg2) arg2 @tmp118 @tmp120))
            (ATSINStmpset tmp123 (_ats2cljpre_ML_list0_aux_62 @tmp119 @tmp121 arg2))
            (ATSPMVtysum @tmp122 @tmp123)
           ) ;; end-of-branch
           ;; ATSbranchseq_end
           ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
          ) ;; end-of-case
         ) ;; end-of-casefnx
        ] (casefnx 1)
       ) ;; end-of-let(casefnx)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_zipwith_method[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret124 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_zipwith_method
  (_ats2cljpre_ML_list0_patsfun_64__closurerize arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_64[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret125 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_64
  (ats2cljpre_ML_list0_zipwith env0 env1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_foldleft[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret126 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_foldleft
  (_ats2cljpre_ML_list0_aux_66 arg2 arg1 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_aux_66[env0 arg0 arg1]
(
with-local-vars
[
;;knd = 1
;;apy0 nil
;;apy1 nil
  tmpret127 nil
  tmp128 nil
  tmp129 nil
  tmp130 nil
;;var funlab_clj
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;while(true){
   (loop [
     env0 env0
     arg0 arg0
     arg1 arg1
    ] ; funlab_clj = 0;
    ;; __patsflab__ats2cljpre_ML_list0_aux_66
    (let[
      casefnx
      (fn casefnx[tmplab](case tmplab
        ;; ATSbranchseq_beg
        1 (do
         (if (ATSCKptriscons arg1)
           (casefnx 4)
           (do
            (casefnx 2)
           )
         )
        ) ;; end-of-branch
        2 (do
         arg0
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; ATSbranchseq_beg
        3 (do
         (casefnx 4)
        ) ;; end-of-branch
        4 (do
         (ATSINStmpset tmp128 (ATSSELcon arg1 0))
         (ATSINStmpset tmp129 (ATSSELcon arg1 1))
         (ATSINStmpset tmp130 ((ATSfunclo_fclo env0) env0 arg0 @tmp128))
         ;; apy0 = @tmp130
         ;; apy1 = @tmp129
         ;; arg0 = apy0
         ;; arg1 = apy1
         ;; funlab_clj = 1; // __patsflab__ats2cljpre_ML_list0_aux_66
         (_ats2cljpre_ML_list0_aux_66 env0 @tmp130 @tmp129)
        ) ;; end-of-branch
        ;; ATSbranchseq_end
        ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
       ) ;; end-of-case
      ) ;; end-of-casefnx
     ] (casefnx 1)
    ) ;; end-of-let(casefnx)
    ;; if (funlab_clj > 0) continue; else ;; return tmpret127;
  ) ;} // endwhile-fun
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_foldright[arg0 arg1 arg2]
(
with-local-vars
[
;;knd = 0
  tmpret131 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_foldright
  (_ats2cljpre_ML_list0_aux_68 arg1 arg2 arg0 arg2)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_aux_68[env0 env1 arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret132 nil
  tmp133 nil
  tmp134 nil
  tmp135 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_aux_68
  (let[
    casefnx
    (fn casefnx[tmplab](case tmplab
      ;; ATSbranchseq_beg
      1 (do
       (if (ATSCKptriscons arg0)
         (casefnx 4)
         (do
          (casefnx 2)
         )
       )
      ) ;; end-of-branch
      2 (do
       arg1
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; ATSbranchseq_beg
      3 (do
       (casefnx 4)
      ) ;; end-of-branch
      4 (do
       (ATSINStmpset tmp133 (ATSSELcon arg0 0))
       (ATSINStmpset tmp134 (ATSSELcon arg0 1))
       (ATSINStmpset tmp135 (_ats2cljpre_ML_list0_aux_68 env0 env1 @tmp134 env1))
       ((ATSfunclo_fclo env0) env0 @tmp133 @tmp135)
      ) ;; end-of-branch
      ;; ATSbranchseq_end
      ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
     ) ;; end-of-case
    ) ;; end-of-casefnx
   ] (casefnx 1)
  ) ;; end-of-let(casefnx)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_list0_sort_2[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret138 nil
  tmp139 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_list0_sort_2
  (ATSINStmpset tmp139 (ats2cljpre_list_sort_2 arg0 arg1))
  @tmp139
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_streamize_list0_zip[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret140 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list0_zip
  (ats2cljpre_streamize_list_zip arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_streamize_list0_cross[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret141 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list0_cross
  (ats2cljpre_streamize_list_cross arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_streamize_list0_nchoose[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret142 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list0_nchoose
  (_ats2cljpre_ML_list0_auxmain_74 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_auxmain_74[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret143 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_auxmain_74
  (ATSPMVllazyval (_ats2cljpre_ML_list0_patsfun_75__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_75[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret144 nil
  tmp145 nil
  tmp146 nil
  tmp147 nil
  tmp148 nil
  tmp149 nil
  tmp150 nil
  tmp151 nil
  tmp152 nil
  tmp154 nil
  tmp155 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_75
  (if arg0
    (do
     (ATSINStmpset tmp145 (ats2cljpre_gt_int1_int1 env1 0))
     (if @tmp145
       (do
        (let[
          casefnx
          (fn casefnx[tmplab](case tmplab
            ;; ATSbranchseq_beg
            1 (do
             (if (ATSCKptriscons env0)
               (casefnx 4)
               (do
                (casefnx 2)
               )
             )
            ) ;; end-of-branch
            2 (do
             atscc2clj_null
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; ATSbranchseq_beg
            3 (do
             (casefnx 4)
            ) ;; end-of-branch
            4 (do
             (ATSINStmpset tmp146 (ATSSELcon env0 0))
             (ATSINStmpset tmp147 (ATSSELcon env0 1))
             (ATSINStmpset tmp149 (ats2cljpre_sub_int1_int1 env1 1))
             (ATSINStmpset tmp148 (_ats2cljpre_ML_list0_auxmain_74 @tmp147 @tmp149))
             (ATSINStmpset tmp150 (_ats2cljpre_ML_list0_auxmain_74 @tmp147 env1))
             (ATSINStmpset tmp152 (ats2cljpre_stream_vt_map_cloref @tmp148 (_ats2cljpre_ML_list0_patsfun_76__closurerize @tmp146)))
             (ATSINStmpset tmp151 (ats2cljpre_stream_vt_append @tmp152 @tmp150))
             (ATSPMVllazyval_eval @tmp151)
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
           ) ;; end-of-case
          ) ;; end-of-casefnx
         ] (casefnx 1)
        ) ;; end-of-let(casefnx)
       ) ;; if-then
       (do
        (ATSINStmpset tmp154 atscc2clj_null)
        (ATSINStmpset tmp155 (ats2cljpre_stream_vt_make_nil__77__1))
        (ATSPMVtysum @tmp154 @tmp155)
       ) ;; if-else
     )
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_76[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret153 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_76
  (ATSPMVtysum env0 arg0)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_make_nil__77__1[]
(
with-local-vars
[
;;knd = 0
  tmpret156__1 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_make_nil
  (ATSPMVllazyval (_ats2cljpre_ML_list0_patsfun_78__78__1__closurerize))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_78__78__1[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret157__1 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_78
  (if arg0
    (do
     atscc2clj_null
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_ML_streamize_list0_nchoose_rest[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret160 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_streamize_list0_nchoose_rest
  (_ats2cljpre_ML_list0_auxmain_82 arg0 arg1)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_auxmain_82[arg0 arg1]
(
with-local-vars
[
;;knd = 0
  tmpret161 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_auxmain_82
  (ATSPMVllazyval (_ats2cljpre_ML_list0_patsfun_83__closurerize arg0 arg1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_83[env0 env1 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret162 nil
  tmp163 nil
  tmp164 nil
  tmp165 nil
  tmp166 nil
  tmp167 nil
  tmp168 nil
  tmp169 nil
  tmp170 nil
  tmp173 nil
  tmp176 nil
  tmp177 nil
  tmp178 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_83
  (if arg0
    (do
     (ATSINStmpset tmp163 (ats2cljpre_gt_int1_int1 env1 0))
     (if @tmp163
       (do
        (let[
          casefnx
          (fn casefnx[tmplab](case tmplab
            ;; ATSbranchseq_beg
            1 (do
             (if (ATSCKptriscons env0)
               (casefnx 4)
               (do
                (casefnx 2)
               )
             )
            ) ;; end-of-branch
            2 (do
             atscc2clj_null
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; ATSbranchseq_beg
            3 (do
             (casefnx 4)
            ) ;; end-of-branch
            4 (do
             (ATSINStmpset tmp164 (ATSSELcon env0 0))
             (ATSINStmpset tmp165 (ATSSELcon env0 1))
             (ATSINStmpset tmp167 (ats2cljpre_sub_int1_int1 env1 1))
             (ATSINStmpset tmp166 (_ats2cljpre_ML_list0_auxmain_82 @tmp165 @tmp167))
             (ATSINStmpset tmp168 (_ats2cljpre_ML_list0_auxmain_82 @tmp165 env1))
             (ATSINStmpset tmp170 (ats2cljpre_stream_vt_map_cloref @tmp166 (_ats2cljpre_ML_list0_patsfun_84__closurerize @tmp164)))
             (ATSINStmpset tmp173 (ats2cljpre_stream_vt_map_cloref @tmp168 (_ats2cljpre_ML_list0_patsfun_85__closurerize @tmp164)))
             (ATSINStmpset tmp169 (ats2cljpre_stream_vt_append @tmp170 @tmp173))
             (ATSPMVllazyval_eval @tmp169)
            ) ;; end-of-branch
            ;; ATSbranchseq_end
            ;; (else (atscc2clj_caseof_deadcode _FILE_ _LINE_))
           ) ;; end-of-case
          ) ;; end-of-casefnx
         ] (casefnx 1)
        ) ;; end-of-let(casefnx)
       ) ;; if-then
       (do
        (ATSINStmpset tmp177 atscc2clj_null)
        (ATSINStmpset tmp176 (ATSPMVtyrec @tmp177 env0))
        (ATSINStmpset tmp178 (ats2cljpre_stream_vt_make_nil__77__2))
        (ATSPMVtysum @tmp176 @tmp178)
       ) ;; if-else
     )
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_84[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret171 nil
  tmp172 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_84
  (ATSINStmpset tmp172 (ATSPMVtysum env0 (ATSSELboxrec arg0 0)))
  (ATSPMVtyrec @tmp172 (ATSSELboxrec arg0 1))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_85[env0 arg0]
(
with-local-vars
[
;;knd = 0
  tmpret174 nil
  tmp175 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_85
  (ATSINStmpset tmp175 (ATSPMVtysum env0 (ATSSELboxrec arg0 1)))
  (ATSPMVtyrec (ATSSELboxrec arg0 0) @tmp175)
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 ats2cljpre_stream_vt_make_nil__77__2[]
(
with-local-vars
[
;;knd = 0
  tmpret156__2 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab_stream_vt_make_nil
  (ATSPMVllazyval (_ats2cljpre_ML_list0_patsfun_78__78__2__closurerize))
) ;; end-of-with-local-vars
) ;; end-of-fun


;;fun
(defn
 _ats2cljpre_ML_list0_patsfun_78__78__2[arg0]
(
with-local-vars
[
;;knd = 0
  tmpret157__2 nil
;;var tmplab,tmplab_clj
] ;; with-local-vars
  ;; __patsflab__ats2cljpre_ML_list0_patsfun_78
  (if arg0
    (do
     atscc2clj_null
    ) ;; if-then
    (do
    ) ;; if-else
  )
) ;; end-of-with-local-vars
) ;; end-of-fun

;;;;;;
;;
;; end-of-compilation-unit
;;
;;;;;;
