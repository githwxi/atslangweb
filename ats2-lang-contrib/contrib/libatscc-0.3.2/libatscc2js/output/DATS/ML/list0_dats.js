/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2017-1-30: 10h:39m
**
*/

function
_ats2jspre_ML_list0_patsfun_29__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_29(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_32__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_32(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_35__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_35(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_38__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_38(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_42__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_42(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_45__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_45(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_48__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_48(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_51__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_51(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_54__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_54(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_58__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_58(cenv[1], arg0); }, env0];
}


function
_ats2jspre_ML_list0_patsfun_64__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_ML_list0_patsfun_64(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
ats2jspre_ML_list0_head_opt(arg0)
{
//
// knd = 0
  var tmpret7
  var tmp8
  var tmplab, tmplab_js
//
  // __patsflab_list0_head_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab6
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab7
      tmpret7 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab8
      case 4: // __atstmplab9
      tmp8 = arg0[0];
      tmpret7 = [tmp8];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret7;
} // end-of-function


function
ats2jspre_ML_list0_tail_opt(arg0)
{
//
// knd = 0
  var tmpret10
  var tmp12
  var tmplab, tmplab_js
//
  // __patsflab_list0_tail_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab10
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab11
      tmpret10 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab12
      case 4: // __atstmplab13
      tmp12 = arg0[1];
      tmpret10 = [tmp12];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret10;
} // end-of-function


function
ats2jspre_ML_list0_length(arg0)
{
//
// knd = 0
  var tmpret13
  var tmplab, tmplab_js
//
  // __patsflab_list0_length
  tmpret13 = ats2jspre_list_length(arg0);
  return tmpret13;
} // end-of-function


function
ats2jspre_ML_list0_last_opt(arg0)
{
//
// knd = 0
  var tmpret14
  var tmp18
  var tmp19
  var tmp20
  var tmplab, tmplab_js
//
  // __patsflab_list0_last_opt
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab18
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab19
      tmpret14 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab20
      case 4: // __atstmplab21
      tmp18 = arg0[0];
      tmp19 = arg0[1];
      tmp20 = _ats2jspre_ML_list0_loop_8(tmp18, tmp19);
      tmpret14 = [tmp20];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret14;
} // end-of-function


function
_ats2jspre_ML_list0_loop_8(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret15
  var tmp16
  var tmp17
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_ML_list0_loop_8
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab14
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab15
        tmpret15 = arg0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab16
        case 4: // __atstmplab17
        tmp16 = arg1[0];
        tmp17 = arg1[1];
        // ATStailcalseq_beg
        apy0 = tmp16;
        apy1 = tmp17;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_ML_list0_loop_8
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret15;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_get_at_opt(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_get_at_opt
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab22
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab23
        tmpret21 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab24
        case 4: // __atstmplab25
        tmp22 = arg0[0];
        tmp23 = arg0[1];
        tmp24 = ats2jspre_gt_int1_int1(arg1, 0);
        if(tmp24) {
          tmp25 = ats2jspre_sub_int1_int1(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp23;
          apy1 = tmp25;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_get_at_opt
          // ATStailcalseq_end
        } else {
          tmpret21 = [tmp22];
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret21;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_make_elt(arg0, arg1)
{
//
// knd = 0
  var tmpret26
  var tmp27
  var tmp28
  var tmplab, tmplab_js
//
  // __patsflab_list0_make_elt
  tmp27 = ats2jspre_gte_int1_int1(arg0, 0);
  if(tmp27) {
    tmp28 = ats2jspre_list_make_elt(arg0, arg1);
    tmpret26 = tmp28;
  } else {
    tmpret26 = null;
  } // endif
  return tmpret26;
} // end-of-function


function
ats2jspre_ML_list0_make_intrange_2(arg0, arg1)
{
//
// knd = 0
  var tmpret29
  var tmp30
  var tmplab, tmplab_js
//
  // __patsflab_list0_make_intrange_2
  tmp30 = ats2jspre_list_make_intrange_2(arg0, arg1);
  tmpret29 = tmp30;
  return tmpret29;
} // end-of-function


function
ats2jspre_ML_list0_make_intrange_3(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret31
  var tmp32
  var tmplab, tmplab_js
//
  // __patsflab_list0_make_intrange_3
  tmp32 = ats2jspre_list_make_intrange_3(arg0, arg1, arg2);
  tmpret31 = tmp32;
  return tmpret31;
} // end-of-function


function
ats2jspre_ML_list0_snoc(arg0, arg1)
{
//
// knd = 0
  var tmpret44
  var tmp45
  var tmplab, tmplab_js
//
  // __patsflab_list0_snoc
  tmp45 = ats2jspre_list_snoc(arg0, arg1);
  tmpret44 = tmp45;
  return tmpret44;
} // end-of-function


function
ats2jspre_ML_list0_extend(arg0, arg1)
{
//
// knd = 0
  var tmpret46
  var tmp47
  var tmplab, tmplab_js
//
  // __patsflab_list0_extend
  tmp47 = ats2jspre_list_extend(arg0, arg1);
  tmpret46 = tmp47;
  return tmpret46;
} // end-of-function


function
ats2jspre_ML_list0_append(arg0, arg1)
{
//
// knd = 0
  var tmpret48
  var tmp49
  var tmplab, tmplab_js
//
  // __patsflab_list0_append
  tmp49 = ats2jspre_list_append(arg0, arg1);
  tmpret48 = tmp49;
  return tmpret48;
} // end-of-function


function
ats2jspre_ML_mul_int_list0(arg0, arg1)
{
//
// knd = 0
  var tmpret50
  var tmp51
  var tmplab, tmplab_js
//
  // __patsflab_mul_int_list0
  tmp51 = ats2jspre_mul_int_list(arg0, arg1);
  tmpret50 = tmp51;
  return tmpret50;
} // end-of-function


function
ats2jspre_ML_list0_reverse(arg0)
{
//
// knd = 0
  var tmpret52
  var tmp53
  var tmplab, tmplab_js
//
  // __patsflab_list0_reverse
  tmp53 = ats2jspre_list_reverse(arg0);
  tmpret52 = tmp53;
  return tmpret52;
} // end-of-function


function
ats2jspre_ML_list0_reverse_append(arg0, arg1)
{
//
// knd = 0
  var tmpret54
  var tmp55
  var tmplab, tmplab_js
//
  // __patsflab_list0_reverse_append
  tmp55 = ats2jspre_list_reverse_append(arg0, arg1);
  tmpret54 = tmp55;
  return tmpret54;
} // end-of-function


function
ats2jspre_ML_list0_concat(arg0)
{
//
// knd = 0
  var tmpret56
  var tmp57
  var tmplab, tmplab_js
//
  // __patsflab_list0_concat
  tmp57 = ats2jspre_list_concat(arg0);
  tmpret56 = tmp57;
  return tmpret56;
} // end-of-function


function
ats2jspre_ML_list0_remove_at_opt(arg0, arg1)
{
//
// knd = 0
  var tmpret58
  var tmplab, tmplab_js
//
  // __patsflab_list0_remove_at_opt
  tmpret58 = _ats2jspre_ML_list0_aux_26(arg0, 0);
  return tmpret58;
} // end-of-function


function
_ats2jspre_ML_list0_aux_26(arg0, arg1)
{
//
// knd = 0
  var tmpret59
  var tmp60
  var tmp61
  var tmp62
  var tmp63
  var tmp64
  var tmp65
  var tmp66
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_26
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab30
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab31
      tmpret59 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab32
      case 4: // __atstmplab33
      tmp60 = arg0[0];
      tmp61 = arg0[1];
      tmp62 = ats2jspre_gt_int1_int1(arg1, 0);
      if(tmp62) {
        tmp64 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp63 = _ats2jspre_ML_list0_aux_26(tmp61, tmp64);
        // ATScaseofseq_beg
        tmplab_js = 1;
        while(true) {
          tmplab = tmplab_js; tmplab_js = 0;
          switch(tmplab) {
            // ATSbranchseq_beg
            case 1: // __atstmplab34
            if(ATSCKptriscons(tmp63)) { tmplab_js = 4; break; }
            case 2: // __atstmplab35
            tmpret59 = null;
            break;
            // ATSbranchseq_end
            // ATSbranchseq_beg
            case 3: // __atstmplab36
            case 4: // __atstmplab37
            tmp65 = tmp63[0];
            // ATSINSfreecon(tmp63);
            tmp66 = [tmp60, tmp65];
            tmpret59 = [tmp66];
            break;
            // ATSbranchseq_end
          } // end-of-switch
          if (tmplab_js === 0) break;
        } // endwhile
        // ATScaseofseq_end
      } else {
        tmpret59 = [tmp61];
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret59;
} // end-of-function


function
ats2jspre_ML_list0_exists(arg0, arg1)
{
//
// knd = 0
  var tmpret67
  var tmplab, tmplab_js
//
  // __patsflab_list0_exists
  tmpret67 = ats2jspre_list_exists(arg0, arg1);
  return tmpret67;
} // end-of-function


function
ats2jspre_ML_list0_exists_method(arg0)
{
//
// knd = 0
  var tmpret68
  var tmplab, tmplab_js
//
  // __patsflab_list0_exists_method
  tmpret68 = _ats2jspre_ML_list0_patsfun_29__closurerize(arg0);
  return tmpret68;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_29(env0, arg0)
{
//
// knd = 0
  var tmpret69
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_29
  tmpret69 = ats2jspre_ML_list0_exists(env0, arg0);
  return tmpret69;
} // end-of-function


function
ats2jspre_ML_list0_iexists(arg0, arg1)
{
//
// knd = 0
  var tmpret70
  var tmplab, tmplab_js
//
  // __patsflab_list0_iexists
  tmpret70 = ats2jspre_list_iexists(arg0, arg1);
  return tmpret70;
} // end-of-function


function
ats2jspre_ML_list0_iexists_method(arg0)
{
//
// knd = 0
  var tmpret71
  var tmplab, tmplab_js
//
  // __patsflab_list0_iexists_method
  tmpret71 = _ats2jspre_ML_list0_patsfun_32__closurerize(arg0);
  return tmpret71;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_32(env0, arg0)
{
//
// knd = 0
  var tmpret72
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_32
  tmpret72 = ats2jspre_ML_list0_iexists(env0, arg0);
  return tmpret72;
} // end-of-function


function
ats2jspre_ML_list0_forall(arg0, arg1)
{
//
// knd = 0
  var tmpret73
  var tmplab, tmplab_js
//
  // __patsflab_list0_forall
  tmpret73 = ats2jspre_list_forall(arg0, arg1);
  return tmpret73;
} // end-of-function


function
ats2jspre_ML_list0_forall_method(arg0)
{
//
// knd = 0
  var tmpret74
  var tmplab, tmplab_js
//
  // __patsflab_list0_forall_method
  tmpret74 = _ats2jspre_ML_list0_patsfun_35__closurerize(arg0);
  return tmpret74;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_35(env0, arg0)
{
//
// knd = 0
  var tmpret75
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_35
  tmpret75 = ats2jspre_ML_list0_forall(env0, arg0);
  return tmpret75;
} // end-of-function


function
ats2jspre_ML_list0_iforall(arg0, arg1)
{
//
// knd = 0
  var tmpret76
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforall
  tmpret76 = ats2jspre_list_iforall(arg0, arg1);
  return tmpret76;
} // end-of-function


function
ats2jspre_ML_list0_iforall_method(arg0)
{
//
// knd = 0
  var tmpret77
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforall_method
  tmpret77 = _ats2jspre_ML_list0_patsfun_38__closurerize(arg0);
  return tmpret77;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_38(env0, arg0)
{
//
// knd = 0
  var tmpret78
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_38
  tmpret78 = ats2jspre_ML_list0_iforall(env0, arg0);
  return tmpret78;
} // end-of-function


function
ats2jspre_ML_list0_app(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_app
  ats2jspre_ML_list0_foreach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_foreach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_foreach
  ats2jspre_list_foreach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_foreach_method(arg0)
{
//
// knd = 0
  var tmpret81
  var tmplab, tmplab_js
//
  // __patsflab_list0_foreach_method
  tmpret81 = _ats2jspre_ML_list0_patsfun_42__closurerize(arg0);
  return tmpret81;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_42(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_42
  ats2jspre_ML_list0_foreach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_iforeach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforeach
  ats2jspre_list_iforeach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_iforeach_method(arg0)
{
//
// knd = 0
  var tmpret84
  var tmplab, tmplab_js
//
  // __patsflab_list0_iforeach_method
  tmpret84 = _ats2jspre_ML_list0_patsfun_45__closurerize(arg0);
  return tmpret84;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_45(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_45
  ats2jspre_ML_list0_iforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_rforeach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list0_rforeach
  ats2jspre_list_rforeach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_rforeach_method(arg0)
{
//
// knd = 0
  var tmpret87
  var tmplab, tmplab_js
//
  // __patsflab_list0_rforeach_method
  tmpret87 = _ats2jspre_ML_list0_patsfun_48__closurerize(arg0);
  return tmpret87;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_48(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_48
  ats2jspre_ML_list0_rforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_ML_list0_filter(arg0, arg1)
{
//
// knd = 0
  var tmpret89
  var tmp90
  var tmplab, tmplab_js
//
  // __patsflab_list0_filter
  tmp90 = ats2jspre_list_filter(arg0, arg1);
  tmpret89 = tmp90;
  return tmpret89;
} // end-of-function


function
ats2jspre_ML_list0_filter_method(arg0)
{
//
// knd = 0
  var tmpret91
  var tmplab, tmplab_js
//
  // __patsflab_list0_filter_method
  tmpret91 = _ats2jspre_ML_list0_patsfun_51__closurerize(arg0);
  return tmpret91;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_51(env0, arg0)
{
//
// knd = 0
  var tmpret92
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_51
  tmpret92 = ats2jspre_ML_list0_filter(env0, arg0);
  return tmpret92;
} // end-of-function


function
ats2jspre_ML_list0_map(arg0, arg1)
{
//
// knd = 0
  var tmpret93
  var tmp94
  var tmplab, tmplab_js
//
  // __patsflab_list0_map
  tmp94 = ats2jspre_list_map(arg0, arg1);
  tmpret93 = tmp94;
  return tmpret93;
} // end-of-function


function
ats2jspre_ML_list0_map_method(arg0, arg1)
{
//
// knd = 0
  var tmpret95
  var tmplab, tmplab_js
//
  // __patsflab_list0_map_method
  tmpret95 = _ats2jspre_ML_list0_patsfun_54__closurerize(arg0);
  return tmpret95;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_54(env0, arg0)
{
//
// knd = 0
  var tmpret96
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_54
  tmpret96 = ats2jspre_ML_list0_map(env0, arg0);
  return tmpret96;
} // end-of-function


function
ats2jspre_ML_list0_mapcons(arg0, arg1)
{
//
// knd = 0
  var tmpret97
  var tmp98
  var tmp99
  var tmp100
  var tmp101
  var tmplab, tmplab_js
//
  // __patsflab_list0_mapcons
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab38
      if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
      case 2: // __atstmplab39
      tmpret97 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab40
      case 4: // __atstmplab41
      tmp98 = arg1[0];
      tmp99 = arg1[1];
      tmp100 = [arg0, tmp98];
      tmp101 = ats2jspre_ML_list0_mapcons(arg0, tmp99);
      tmpret97 = [tmp100, tmp101];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret97;
} // end-of-function


function
ats2jspre_ML_list0_find_opt(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret102
  var tmp103
  var tmp104
  var tmp105
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_find_opt
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab42
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab43
        tmpret102 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab44
        case 4: // __atstmplab45
        tmp103 = arg0[0];
        tmp104 = arg0[1];
        tmp105 = arg1[0](arg1, tmp103);
        if(tmp105) {
          tmpret102 = [tmp103];
        } else {
          // ATStailcalseq_beg
          apy0 = tmp104;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_find_opt
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret102;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_find_opt_method(arg0)
{
//
// knd = 0
  var tmpret106
  var tmplab, tmplab_js
//
  // __patsflab_list0_find_opt_method
  tmpret106 = _ats2jspre_ML_list0_patsfun_58__closurerize(arg0);
  return tmpret106;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_58(env0, arg0)
{
//
// knd = 0
  var tmpret107
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_58
  tmpret107 = ats2jspre_ML_list0_find_opt(env0, arg0);
  return tmpret107;
} // end-of-function


function
ats2jspre_ML_list0_zip(arg0, arg1)
{
//
// knd = 0
  var tmpret108
  var tmplab, tmplab_js
//
  // __patsflab_list0_zip
  tmpret108 = _ats2jspre_ML_list0_aux_60(arg0, arg1);
  return tmpret108;
} // end-of-function


function
_ats2jspre_ML_list0_aux_60(arg0, arg1)
{
//
// knd = 0
  var tmpret109
  var tmp110
  var tmp111
  var tmp112
  var tmp113
  var tmp114
  var tmp115
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_60
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab46
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab47
      tmpret109 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab48
      case 4: // __atstmplab49
      tmp110 = arg0[0];
      tmp111 = arg0[1];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab50
          if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
          case 2: // __atstmplab51
          tmpret109 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab52
          case 4: // __atstmplab53
          tmp112 = arg1[0];
          tmp113 = arg1[1];
          tmp114 = [tmp110, tmp112];
          tmp115 = _ats2jspre_ML_list0_aux_60(tmp111, tmp113);
          tmpret109 = [tmp114, tmp115];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret109;
} // end-of-function


function
ats2jspre_ML_list0_zipwith(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret116
  var tmplab, tmplab_js
//
  // __patsflab_list0_zipwith
  tmpret116 = _ats2jspre_ML_list0_aux_62(arg0, arg1, arg2);
  return tmpret116;
} // end-of-function


function
_ats2jspre_ML_list0_aux_62(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret117
  var tmp118
  var tmp119
  var tmp120
  var tmp121
  var tmp122
  var tmp123
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_62
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab54
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab55
      tmpret117 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab56
      case 4: // __atstmplab57
      tmp118 = arg0[0];
      tmp119 = arg0[1];
      // ATScaseofseq_beg
      tmplab_js = 1;
      while(true) {
        tmplab = tmplab_js; tmplab_js = 0;
        switch(tmplab) {
          // ATSbranchseq_beg
          case 1: // __atstmplab58
          if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
          case 2: // __atstmplab59
          tmpret117 = null;
          break;
          // ATSbranchseq_end
          // ATSbranchseq_beg
          case 3: // __atstmplab60
          case 4: // __atstmplab61
          tmp120 = arg1[0];
          tmp121 = arg1[1];
          tmp122 = arg2[0](arg2, tmp118, tmp120);
          tmp123 = _ats2jspre_ML_list0_aux_62(tmp119, tmp121, arg2);
          tmpret117 = [tmp122, tmp123];
          break;
          // ATSbranchseq_end
        } // end-of-switch
        if (tmplab_js === 0) break;
      } // endwhile
      // ATScaseofseq_end
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret117;
} // end-of-function


function
ats2jspre_ML_list0_zipwith_method(arg0, arg1)
{
//
// knd = 0
  var tmpret124
  var tmplab, tmplab_js
//
  // __patsflab_list0_zipwith_method
  tmpret124 = _ats2jspre_ML_list0_patsfun_64__closurerize(arg0, arg1);
  return tmpret124;
} // end-of-function


function
_ats2jspre_ML_list0_patsfun_64(env0, env1, arg0)
{
//
// knd = 0
  var tmpret125
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_patsfun_64
  tmpret125 = ats2jspre_ML_list0_zipwith(env0, env1, arg0);
  return tmpret125;
} // end-of-function


function
ats2jspre_ML_list0_foldleft(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret126
  var tmplab, tmplab_js
//
  // __patsflab_list0_foldleft
  tmpret126 = _ats2jspre_ML_list0_aux_66(arg2, arg1, arg0);
  return tmpret126;
} // end-of-function


function
_ats2jspre_ML_list0_aux_66(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret127
  var tmp128
  var tmp129
  var tmp130
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_ML_list0_aux_66
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab62
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab63
        tmpret127 = arg0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab64
        case 4: // __atstmplab65
        tmp128 = arg1[0];
        tmp129 = arg1[1];
        tmp130 = env0[0](env0, arg0, tmp128);
        // ATStailcalseq_beg
        apy0 = tmp130;
        apy1 = tmp129;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_ML_list0_aux_66
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret127;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_foldright(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret131
  var tmplab, tmplab_js
//
  // __patsflab_list0_foldright
  tmpret131 = _ats2jspre_ML_list0_aux_68(arg1, arg2, arg0, arg2);
  return tmpret131;
} // end-of-function


function
_ats2jspre_ML_list0_aux_68(env0, env1, arg0, arg1)
{
//
// knd = 0
  var tmpret132
  var tmp133
  var tmp134
  var tmp135
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_68
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab66
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab67
      tmpret132 = arg1;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab68
      case 4: // __atstmplab69
      tmp133 = arg0[0];
      tmp134 = arg0[1];
      tmp135 = _ats2jspre_ML_list0_aux_68(env0, env1, tmp134, env1);
      tmpret132 = env0[0](env0, tmp133, tmp135);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret132;
} // end-of-function


function
ats2jspre_ML_list0_sort_2(arg0, arg1)
{
//
// knd = 0
  var tmpret138
  var tmp139
  var tmplab, tmplab_js
//
  // __patsflab_list0_sort_2
  tmp139 = ats2jspre_list_sort_2(arg0, arg1);
  tmpret138 = tmp139;
  return tmpret138;
} // end-of-function


function
ats2jspre_ML_streamize_list0_zip(arg0, arg1)
{
//
// knd = 0
  var tmpret140
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list0_zip
  tmpret140 = ats2jspre_streamize_list_zip(arg0, arg1);
  return tmpret140;
} // end-of-function


function
ats2jspre_ML_streamize_list0_cross(arg0, arg1)
{
//
// knd = 0
  var tmpret141
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list0_cross
  tmpret141 = ats2jspre_streamize_list_cross(arg0, arg1);
  return tmpret141;
} // end-of-function


function
ats2jspre_ML_list0_head_exn(arg0)
{
//
// knd = 0
  var tmpret145
  var tmp146
  var tmplab, tmplab_js
//
  // __patsflab_list0_head_exn
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab70
      if(ATSCKptrisnull(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab71
      tmp146 = arg0[0];
      tmpret145 = tmp146;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab72
      case 4: // __atstmplab73
      tmpret145 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret145;
} // end-of-function


function
ats2jspre_ML_list0_tail_exn(arg0)
{
//
// knd = 0
  var tmpret148
  var tmp150
  var tmplab, tmplab_js
//
  // __patsflab_list0_tail_exn
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab74
      if(ATSCKptrisnull(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab75
      tmp150 = arg0[1];
      tmpret148 = tmp150;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab76
      case 4: // __atstmplab77
      tmpret148 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret148;
} // end-of-function


function
ats2jspre_ML_list0_get_at_exn(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret151
  var tmp152
  var tmp153
  var tmp154
  var tmp155
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list0_get_at_exn
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab78
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab79
        tmpret151 = ats2jspre_ListSubscriptExn_throw();
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab80
        case 4: // __atstmplab81
        tmp152 = arg0[0];
        tmp153 = arg0[1];
        tmp154 = ats2jspre_gt_int1_int1(arg1, 0);
        if(tmp154) {
          tmp155 = ats2jspre_sub_int1_int1(arg1, 1);
          // ATStailcalseq_beg
          apy0 = tmp153;
          apy1 = tmp155;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list0_get_at_exn
          // ATStailcalseq_end
        } else {
          tmpret151 = tmp152;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret151;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_ML_list0_insert_at_exn(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret156
  var tmplab, tmplab_js
//
  // __patsflab_list0_insert_at_exn
  tmpret156 = _ats2jspre_ML_list0_aux_81(arg2, arg0, arg1);
  return tmpret156;
} // end-of-function


function
_ats2jspre_ML_list0_aux_81(env0, arg0, arg1)
{
//
// knd = 0
  var tmpret157
  var tmp158
  var tmp159
  var tmp160
  var tmp161
  var tmp162
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_81
  tmp158 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp158) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab82
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab83
        tmpret157 = ats2jspre_ListSubscriptExn_throw();
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab84
        case 4: // __atstmplab85
        tmp159 = arg0[0];
        tmp160 = arg0[1];
        tmp162 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp161 = _ats2jspre_ML_list0_aux_81(env0, tmp160, tmp162);
        tmpret157 = [tmp159, tmp161];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
    tmpret157 = [env0, arg0];
  } // endif
  return tmpret157;
} // end-of-function


function
ats2jspre_ML_list0_remove_at_exn(arg0, arg1)
{
//
// knd = 0
  var tmpret163
  var tmplab, tmplab_js
//
  // __patsflab_list0_remove_at_exn
  tmpret163 = _ats2jspre_ML_list0_aux_83(arg0, arg1);
  return tmpret163;
} // end-of-function


function
_ats2jspre_ML_list0_aux_83(arg0, arg1)
{
//
// knd = 0
  var tmpret164
  var tmp165
  var tmp166
  var tmp167
  var tmp168
  var tmp169
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_ML_list0_aux_83
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab86
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab87
      tmpret164 = ats2jspre_ListSubscriptExn_throw();
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab88
      case 4: // __atstmplab89
      tmp165 = arg0[0];
      tmp166 = arg0[1];
      tmp167 = ats2jspre_gt_int1_int1(arg1, 0);
      if(tmp167) {
        tmp169 = ats2jspre_sub_int1_int1(arg1, 1);
        tmp168 = _ats2jspre_ML_list0_aux_83(tmp166, tmp169);
        tmpret164 = [tmp165, tmp168];
      } else {
        tmpret164 = tmp166;
      } // endif
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret164;
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
