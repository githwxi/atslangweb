/*
**
** The JavaScript code is generated by atscc2js
** The starting compilation time is: 2017-1-30: 10h:39m
**
*/

function
_ats2jspre_list_patsfun_35__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_35(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_39__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_39(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_42__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_42(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_46__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_46(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_50__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_50(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_54__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_54(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_57__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_57(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_61__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_61(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_65__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_65(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_69__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_69(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_73__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_73(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_77__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_77(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_81__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_81(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_86__closurerize(env0)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_86(cenv[1], arg0); }, env0];
}


function
_ats2jspre_list_patsfun_89__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_89(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_92__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_92(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
_ats2jspre_list_patsfun_94__closurerize(env0, env1)
{
  return [function(cenv, arg0) { return _ats2jspre_list_patsfun_94(cenv[1], cenv[2], arg0); }, env0, env1];
}


function
ats2jspre_list_make_elt(arg0, arg1)
{
//
// knd = 0
  var tmpret2
  var tmp7
  var tmplab, tmplab_js
//
  // __patsflab_list_make_elt
  tmp7 = null;
  tmpret2 = _ats2jspre_list_loop_3(arg1, arg0, tmp7);
  return tmpret2;
} // end-of-function


function
_ats2jspre_list_loop_3(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret3
  var tmp4
  var tmp5
  var tmp6
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_3
    tmp4 = ats2jspre_gt_int1_int1(arg0, 0);
    if(tmp4) {
      tmp5 = ats2jspre_sub_int1_int1(arg0, 1);
      tmp6 = [env0, arg1];
      // ATStailcalseq_beg
      apy0 = tmp5;
      apy1 = tmp6;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab__ats2jspre_list_loop_3
      // ATStailcalseq_end
    } else {
      tmpret3 = arg1;
    } // endif
    if (funlab_js > 0) continue; else return tmpret3;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_make_intrange_2(arg0, arg1)
{
//
// knd = 0
  var tmpret8
  var tmplab, tmplab_js
//
  // __patsflab_list_make_intrange_2
  tmpret8 = ats2jspre_list_make_intrange_3(arg0, arg1, 1);
  return tmpret8;
} // end-of-function


function
ats2jspre_list_make_intrange_3(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret9
  var tmp20
  var tmp21
  var tmp22
  var tmp23
  var tmp24
  var tmp25
  var tmp26
  var tmp27
  var tmp28
  var tmp29
  var tmp30
  var tmp31
  var tmp32
  var tmp33
  var tmp34
  var tmp35
  var tmp36
  var tmp37
  var tmp38
  var tmp39
  var tmp40
  var tmplab, tmplab_js
//
  // __patsflab_list_make_intrange_3
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab6
      tmp20 = ats2jspre_gt_int0_int0(arg2, 0);
      if(!ATSCKpat_bool(tmp20, true)) { tmplab_js = 2; break; }
      tmp21 = ats2jspre_lt_int0_int0(arg0, arg1);
      if(tmp21) {
        tmp25 = ats2jspre_sub_int0_int0(arg1, arg0);
        tmp24 = ats2jspre_add_int0_int0(tmp25, arg2);
        tmp23 = ats2jspre_sub_int0_int0(tmp24, 1);
        tmp22 = ats2jspre_div_int0_int0(tmp23, arg2);
        tmp28 = ats2jspre_sub_int0_int0(tmp22, 1);
        tmp27 = ats2jspre_mul_int0_int0(tmp28, arg2);
        tmp26 = ats2jspre_add_int0_int0(arg0, tmp27);
        tmp29 = null;
        tmpret9 = _ats2jspre_list_loop1_6(tmp22, tmp26, arg2, tmp29);
      } else {
        tmpret9 = null;
      } // endif
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 2: // __atstmplab7
      tmp30 = ats2jspre_lt_int0_int0(arg2, 0);
      if(!ATSCKpat_bool(tmp30, true)) { tmplab_js = 3; break; }
      tmp31 = ats2jspre_gt_int0_int0(arg0, arg1);
      if(tmp31) {
        tmp32 = ats2jspre_neg_int0(arg2);
        tmp36 = ats2jspre_sub_int0_int0(arg0, arg1);
        tmp35 = ats2jspre_add_int0_int0(tmp36, tmp32);
        tmp34 = ats2jspre_sub_int0_int0(tmp35, 1);
        tmp33 = ats2jspre_div_int0_int0(tmp34, tmp32);
        tmp39 = ats2jspre_sub_int0_int0(tmp33, 1);
        tmp38 = ats2jspre_mul_int0_int0(tmp39, tmp32);
        tmp37 = ats2jspre_sub_int0_int0(arg0, tmp38);
        tmp40 = null;
        tmpret9 = _ats2jspre_list_loop2_7(tmp33, tmp37, tmp32, tmp40);
      } else {
        tmpret9 = null;
      } // endif
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab8
      tmpret9 = null;
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret9;
} // end-of-function


function
_ats2jspre_list_loop1_6(arg0, arg1, arg2, arg3)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var apy3
  var tmpret10
  var tmp11
  var tmp12
  var tmp13
  var tmp14
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop1_6
    tmp11 = ats2jspre_gt_int0_int0(arg0, 0);
    if(tmp11) {
      tmp12 = ats2jspre_sub_int0_int0(arg0, 1);
      tmp13 = ats2jspre_sub_int0_int0(arg1, arg2);
      tmp14 = [arg1, arg3];
      // ATStailcalseq_beg
      apy0 = tmp12;
      apy1 = tmp13;
      apy2 = arg2;
      apy3 = tmp14;
      arg0 = apy0;
      arg1 = apy1;
      arg2 = apy2;
      arg3 = apy3;
      funlab_js = 1; // __patsflab__ats2jspre_list_loop1_6
      // ATStailcalseq_end
    } else {
      tmpret10 = arg3;
    } // endif
    if (funlab_js > 0) continue; else return tmpret10;
  } // endwhile-fun
} // end-of-function


function
_ats2jspre_list_loop2_7(arg0, arg1, arg2, arg3)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var apy3
  var tmpret15
  var tmp16
  var tmp17
  var tmp18
  var tmp19
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop2_7
    tmp16 = ats2jspre_gt_int0_int0(arg0, 0);
    if(tmp16) {
      tmp17 = ats2jspre_sub_int0_int0(arg0, 1);
      tmp18 = ats2jspre_add_int0_int0(arg1, arg2);
      tmp19 = [arg1, arg3];
      // ATStailcalseq_beg
      apy0 = tmp17;
      apy1 = tmp18;
      apy2 = arg2;
      apy3 = tmp19;
      arg0 = apy0;
      arg1 = apy1;
      arg2 = apy2;
      arg3 = apy3;
      funlab_js = 1; // __patsflab__ats2jspre_list_loop2_7
      // ATStailcalseq_end
    } else {
      tmpret15 = arg3;
    } // endif
    if (funlab_js > 0) continue; else return tmpret15;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_length(arg0)
{
//
// knd = 0
  var tmpret52
  var tmplab, tmplab_js
//
  // __patsflab_list_length
  tmpret52 = _ats2jspre_list_loop_14(arg0, 0);
  return tmpret52;
} // end-of-function


function
_ats2jspre_list_loop_14(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret53
  var tmp55
  var tmp56
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_14
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab13
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab14
        tmpret53 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab15
        case 4: // __atstmplab16
        tmp55 = arg0[1];
        tmp56 = ats2jspre_add_int1_int1(arg1, 1);
        // ATStailcalseq_beg
        apy0 = tmp55;
        apy1 = tmp56;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_list_loop_14
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret53;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_last(arg0)
{
//
// knd = 1
  var apy0
  var tmpret57
  var tmp58
  var tmp59
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_last
    tmp58 = arg0[0];
    tmp59 = arg0[1];
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab17
        if(ATSCKptriscons(tmp59)) { tmplab_js = 4; break; }
        case 2: // __atstmplab18
        tmpret57 = tmp58;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab19
        case 4: // __atstmplab20
        // ATStailcalseq_beg
        apy0 = tmp59;
        arg0 = apy0;
        funlab_js = 1; // __patsflab_list_last
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret57;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_get_at(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret60
  var tmp61
  var tmp62
  var tmp63
  var tmp64
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_get_at
    tmp61 = ats2jspre_eq_int1_int1(arg1, 0);
    if(tmp61) {
      tmp62 = arg0[0];
      tmpret60 = tmp62;
    } else {
      tmp63 = arg0[1];
      tmp64 = ats2jspre_sub_int1_int1(arg1, 1);
      // ATStailcalseq_beg
      apy0 = tmp63;
      apy1 = tmp64;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab_list_get_at
      // ATStailcalseq_end
    } // endif
    if (funlab_js > 0) continue; else return tmpret60;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_snoc(arg0, arg1)
{
//
// knd = 0
  var tmpret65
  var tmp66
  var tmp67
  var tmplab, tmplab_js
//
  // __patsflab_list_snoc
  tmp67 = null;
  tmp66 = [arg1, tmp67];
  tmpret65 = ats2jspre_list_append(arg0, tmp66);
  return tmpret65;
} // end-of-function


function
ats2jspre_list_extend(arg0, arg1)
{
//
// knd = 0
  var tmpret68
  var tmp69
  var tmp70
  var tmplab, tmplab_js
//
  // __patsflab_list_extend
  tmp70 = null;
  tmp69 = [arg1, tmp70];
  tmpret68 = ats2jspre_list_append(arg0, tmp69);
  return tmpret68;
} // end-of-function


function
ats2jspre_list_append(arg0, arg1)
{
//
// knd = 0
  var tmpret71
  var tmp72
  var tmp73
  var tmp74
  var tmplab, tmplab_js
//
  // __patsflab_list_append
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab21
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab22
      tmpret71 = arg1;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab23
      case 4: // __atstmplab24
      tmp72 = arg0[0];
      tmp73 = arg0[1];
      tmp74 = ats2jspre_list_append(tmp73, arg1);
      tmpret71 = [tmp72, tmp74];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret71;
} // end-of-function


function
ats2jspre_mul_int_list(arg0, arg1)
{
//
// knd = 0
  var tmpret75
  var tmp80
  var tmplab, tmplab_js
//
  // __patsflab_mul_int_list
  tmp80 = null;
  tmpret75 = _ats2jspre_list_loop_21(arg1, arg0, tmp80);
  return tmpret75;
} // end-of-function


function
_ats2jspre_list_loop_21(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret76
  var tmp77
  var tmp78
  var tmp79
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_21
    tmp77 = ats2jspre_gt_int1_int1(arg0, 0);
    if(tmp77) {
      tmp78 = ats2jspre_sub_int1_int1(arg0, 1);
      tmp79 = ats2jspre_list_append(env0, arg1);
      // ATStailcalseq_beg
      apy0 = tmp78;
      apy1 = tmp79;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab__ats2jspre_list_loop_21
      // ATStailcalseq_end
    } else {
      tmpret76 = arg1;
    } // endif
    if (funlab_js > 0) continue; else return tmpret76;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_reverse(arg0)
{
//
// knd = 0
  var tmpret81
  var tmp82
  var tmplab, tmplab_js
//
  // __patsflab_list_reverse
  tmp82 = null;
  tmpret81 = ats2jspre_list_reverse_append(arg0, tmp82);
  return tmpret81;
} // end-of-function


function
ats2jspre_list_reverse_append(arg0, arg1)
{
//
// knd = 0
  var tmpret83
  var tmplab, tmplab_js
//
  // __patsflab_list_reverse_append
  tmpret83 = _ats2jspre_list_loop_24(arg0, arg1);
  return tmpret83;
} // end-of-function


function
_ats2jspre_list_loop_24(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret84
  var tmp85
  var tmp86
  var tmp87
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_24
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab25
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab26
        tmpret84 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab27
        case 4: // __atstmplab28
        tmp85 = arg0[0];
        tmp86 = arg0[1];
        tmp87 = [tmp85, arg1];
        // ATStailcalseq_beg
        apy0 = tmp86;
        apy1 = tmp87;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_list_loop_24
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret84;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_concat(arg0)
{
//
// knd = 0
  var tmpret88
  var tmplab, tmplab_js
//
  // __patsflab_list_concat
  tmpret88 = _ats2jspre_list_auxlst_26(arg0);
  return tmpret88;
} // end-of-function


function
_ats2jspre_list_auxlst_26(arg0)
{
//
// knd = 0
  var tmpret89
  var tmp90
  var tmp91
  var tmp92
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_auxlst_26
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab29
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab30
      tmpret89 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab31
      case 4: // __atstmplab32
      tmp90 = arg0[0];
      tmp91 = arg0[1];
      tmp92 = _ats2jspre_list_auxlst_26(tmp91);
      tmpret89 = ats2jspre_list_append(tmp90, tmp92);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret89;
} // end-of-function


function
ats2jspre_list_take(arg0, arg1)
{
//
// knd = 0
  var tmpret93
  var tmp94
  var tmp95
  var tmp96
  var tmp97
  var tmp98
  var tmplab, tmplab_js
//
  // __patsflab_list_take
  tmp94 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp94) {
    tmp95 = arg0[0];
    tmp96 = arg0[1];
    tmp98 = ats2jspre_sub_int1_int1(arg1, 1);
    tmp97 = ats2jspre_list_take(tmp96, tmp98);
    tmpret93 = [tmp95, tmp97];
  } else {
    tmpret93 = null;
  } // endif
  return tmpret93;
} // end-of-function


function
ats2jspre_list_drop(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret99
  var tmp100
  var tmp101
  var tmp102
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_drop
    tmp100 = ats2jspre_gt_int1_int1(arg1, 0);
    if(tmp100) {
      tmp101 = arg0[1];
      tmp102 = ats2jspre_sub_int1_int1(arg1, 1);
      // ATStailcalseq_beg
      apy0 = tmp101;
      apy1 = tmp102;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab_list_drop
      // ATStailcalseq_end
    } else {
      tmpret99 = arg0;
    } // endif
    if (funlab_js > 0) continue; else return tmpret99;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_split_at(arg0, arg1)
{
//
// knd = 0
  var tmpret103
  var tmp104
  var tmp105
  var tmplab, tmplab_js
//
  // __patsflab_list_split_at
  tmp104 = ats2jspre_list_take(arg0, arg1);
  tmp105 = ats2jspre_list_drop(arg0, arg1);
  tmpret103 = [tmp104, tmp105];
  return tmpret103;
} // end-of-function


function
ats2jspre_list_insert_at(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret106
  var tmp107
  var tmp108
  var tmp109
  var tmp110
  var tmp111
  var tmplab, tmplab_js
//
  // __patsflab_list_insert_at
  tmp107 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp107) {
    tmp108 = arg0[0];
    tmp109 = arg0[1];
    tmp111 = ats2jspre_sub_int1_int1(arg1, 1);
    tmp110 = ats2jspre_list_insert_at(tmp109, tmp111, arg2);
    tmpret106 = [tmp108, tmp110];
  } else {
    tmpret106 = [arg2, arg0];
  } // endif
  return tmpret106;
} // end-of-function


function
ats2jspre_list_remove_at(arg0, arg1)
{
//
// knd = 0
  var tmpret112
  var tmp113
  var tmp114
  var tmp115
  var tmp116
  var tmp117
  var tmplab, tmplab_js
//
  // __patsflab_list_remove_at
  tmp113 = arg0[0];
  tmp114 = arg0[1];
  tmp115 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp115) {
    tmp117 = ats2jspre_sub_int1_int1(arg1, 1);
    tmp116 = ats2jspre_list_remove_at(tmp114, tmp117);
    tmpret112 = [tmp113, tmp116];
  } else {
    tmpret112 = tmp114;
  } // endif
  return tmpret112;
} // end-of-function


function
ats2jspre_list_takeout_at(arg0, arg1)
{
//
// knd = 0
  var tmpret118
  var tmp119
  var tmp120
  var tmp121
  var tmp122
  var tmp123
  var tmp124
  var tmp125
  var tmp126
  var tmplab, tmplab_js
//
  // __patsflab_list_takeout_at
  tmp119 = arg0[0];
  tmp120 = arg0[1];
  tmp121 = ats2jspre_gt_int1_int1(arg1, 0);
  if(tmp121) {
    tmp123 = ats2jspre_sub_int1_int1(arg1, 1);
    tmp122 = ats2jspre_list_takeout_at(tmp120, tmp123);
    tmp124 = tmp122[0];
    tmp125 = tmp122[1];
    tmp126 = [tmp119, tmp125];
    tmpret118 = [tmp124, tmp126];
  } else {
    tmpret118 = [tmp119, tmp120];
  } // endif
  return tmpret118;
} // end-of-function


function
ats2jspre_list_exists(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret127
  var tmp128
  var tmp129
  var tmp130
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_exists
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab33
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab34
        tmpret127 = false;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab35
        case 4: // __atstmplab36
        tmp128 = arg0[0];
        tmp129 = arg0[1];
        tmp130 = arg1[0](arg1, tmp128);
        if(tmp130) {
          tmpret127 = true;
        } else {
          // ATStailcalseq_beg
          apy0 = tmp129;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list_exists
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret127;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_exists_method(arg0)
{
//
// knd = 0
  var tmpret131
  var tmplab, tmplab_js
//
  // __patsflab_list_exists_method
  tmpret131 = _ats2jspre_list_patsfun_35__closurerize(arg0);
  return tmpret131;
} // end-of-function


function
_ats2jspre_list_patsfun_35(env0, arg0)
{
//
// knd = 0
  var tmpret132
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_35
  tmpret132 = ats2jspre_list_exists(env0, arg0);
  return tmpret132;
} // end-of-function


function
ats2jspre_list_iexists(arg0, arg1)
{
//
// knd = 0
  var tmpret133
  var tmplab, tmplab_js
//
  // __patsflab_list_iexists
  tmpret133 = _ats2jspre_list_loop_37(arg1, 0, arg0);
  return tmpret133;
} // end-of-function


function
_ats2jspre_list_loop_37(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret134
  var tmp135
  var tmp136
  var tmp137
  var tmp138
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_37
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab37
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab38
        tmpret134 = false;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab39
        case 4: // __atstmplab40
        tmp135 = arg1[0];
        tmp136 = arg1[1];
        tmp137 = env0[0](env0, arg0, tmp135);
        if(tmp137) {
          tmpret134 = true;
        } else {
          tmp138 = ats2jspre_add_int1_int1(arg0, 1);
          // ATStailcalseq_beg
          apy0 = tmp138;
          apy1 = tmp136;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab__ats2jspre_list_loop_37
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret134;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_iexists_method(arg0)
{
//
// knd = 0
  var tmpret139
  var tmplab, tmplab_js
//
  // __patsflab_list_iexists_method
  tmpret139 = _ats2jspre_list_patsfun_39__closurerize(arg0);
  return tmpret139;
} // end-of-function


function
_ats2jspre_list_patsfun_39(env0, arg0)
{
//
// knd = 0
  var tmpret140
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_39
  tmpret140 = ats2jspre_list_iexists(env0, arg0);
  return tmpret140;
} // end-of-function


function
ats2jspre_list_forall(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret141
  var tmp142
  var tmp143
  var tmp144
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_forall
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab41
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab42
        tmpret141 = true;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab43
        case 4: // __atstmplab44
        tmp142 = arg0[0];
        tmp143 = arg0[1];
        tmp144 = arg1[0](arg1, tmp142);
        if(tmp144) {
          // ATStailcalseq_beg
          apy0 = tmp143;
          apy1 = arg1;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab_list_forall
          // ATStailcalseq_end
        } else {
          tmpret141 = false;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret141;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_forall_method(arg0)
{
//
// knd = 0
  var tmpret145
  var tmplab, tmplab_js
//
  // __patsflab_list_forall_method
  tmpret145 = _ats2jspre_list_patsfun_42__closurerize(arg0);
  return tmpret145;
} // end-of-function


function
_ats2jspre_list_patsfun_42(env0, arg0)
{
//
// knd = 0
  var tmpret146
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_42
  tmpret146 = ats2jspre_list_forall(env0, arg0);
  return tmpret146;
} // end-of-function


function
ats2jspre_list_iforall(arg0, arg1)
{
//
// knd = 0
  var tmpret147
  var tmplab, tmplab_js
//
  // __patsflab_list_iforall
  tmpret147 = _ats2jspre_list_loop_44(arg1, 0, arg0);
  return tmpret147;
} // end-of-function


function
_ats2jspre_list_loop_44(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret148
  var tmp149
  var tmp150
  var tmp151
  var tmp152
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_44
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab45
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab46
        tmpret148 = true;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab47
        case 4: // __atstmplab48
        tmp149 = arg1[0];
        tmp150 = arg1[1];
        tmp151 = env0[0](env0, arg0, tmp149);
        if(tmp151) {
          tmp152 = ats2jspre_add_int1_int1(arg0, 1);
          // ATStailcalseq_beg
          apy0 = tmp152;
          apy1 = tmp150;
          arg0 = apy0;
          arg1 = apy1;
          funlab_js = 1; // __patsflab__ats2jspre_list_loop_44
          // ATStailcalseq_end
        } else {
          tmpret148 = false;
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret148;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_iforall_method(arg0)
{
//
// knd = 0
  var tmpret153
  var tmplab, tmplab_js
//
  // __patsflab_list_iforall_method
  tmpret153 = _ats2jspre_list_patsfun_46__closurerize(arg0);
  return tmpret153;
} // end-of-function


function
_ats2jspre_list_patsfun_46(env0, arg0)
{
//
// knd = 0
  var tmpret154
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_46
  tmpret154 = ats2jspre_list_iforall(env0, arg0);
  return tmpret154;
} // end-of-function


function
ats2jspre_list_app(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list_app
  ats2jspre_list_foreach(arg0, arg1);
  return/*_void*/;
} // end-of-function


function
ats2jspre_list_foreach(arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp157
  var tmp158
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab_list_foreach
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab49
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab50
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab51
        case 4: // __atstmplab52
        tmp157 = arg0[0];
        tmp158 = arg0[1];
        arg1[0](arg1, tmp157);
        // ATStailcalseq_beg
        apy0 = tmp158;
        apy1 = arg1;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab_list_foreach
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_foreach_method(arg0)
{
//
// knd = 0
  var tmpret160
  var tmplab, tmplab_js
//
  // __patsflab_list_foreach_method
  tmpret160 = _ats2jspre_list_patsfun_50__closurerize(arg0);
  return tmpret160;
} // end-of-function


function
_ats2jspre_list_patsfun_50(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_50
  ats2jspre_list_foreach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_list_iforeach(arg0, arg1)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab_list_iforeach
  _ats2jspre_list_aux_52(arg1, 0, arg0);
  return/*_void*/;
} // end-of-function


function
_ats2jspre_list_aux_52(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmp164
  var tmp165
  var tmp167
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_aux_52
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab53
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab54
        // ATSINSmove_void
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab55
        case 4: // __atstmplab56
        tmp164 = arg1[0];
        tmp165 = arg1[1];
        env0[0](env0, arg0, tmp164);
        tmp167 = ats2jspre_add_int1_int1(arg0, 1);
        // ATStailcalseq_beg
        apy0 = tmp167;
        apy1 = tmp165;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_list_aux_52
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return/*_void*/;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_iforeach_method(arg0)
{
//
// knd = 0
  var tmpret168
  var tmplab, tmplab_js
//
  // __patsflab_list_iforeach_method
  tmpret168 = _ats2jspre_list_patsfun_54__closurerize(arg0);
  return tmpret168;
} // end-of-function


function
_ats2jspre_list_patsfun_54(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_54
  ats2jspre_list_iforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_list_rforeach(arg0, arg1)
{
//
// knd = 0
  var tmp171
  var tmp172
  var tmplab, tmplab_js
//
  // __patsflab_list_rforeach
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab57
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab58
      // ATSINSmove_void
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab59
      case 4: // __atstmplab60
      tmp171 = arg0[0];
      tmp172 = arg0[1];
      ats2jspre_list_rforeach(tmp172, arg1);
      arg1[0](arg1, tmp171);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return/*_void*/;
} // end-of-function


function
ats2jspre_list_rforeach_method(arg0)
{
//
// knd = 0
  var tmpret174
  var tmplab, tmplab_js
//
  // __patsflab_list_rforeach_method
  tmpret174 = _ats2jspre_list_patsfun_57__closurerize(arg0);
  return tmpret174;
} // end-of-function


function
_ats2jspre_list_patsfun_57(env0, arg0)
{
//
// knd = 0
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_57
  ats2jspre_list_rforeach(env0, arg0);
  return/*_void*/;
} // end-of-function


function
ats2jspre_list_filter(arg0, arg1)
{
//
// knd = 0
  var tmpret176
  var tmplab, tmplab_js
//
  // __patsflab_list_filter
  tmpret176 = _ats2jspre_list_aux_59(arg1, arg0);
  return tmpret176;
} // end-of-function


function
_ats2jspre_list_aux_59(env0, arg0)
{
//
// knd = 1
  var apy0
  var tmpret177
  var tmp178
  var tmp179
  var tmp180
  var tmp181
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_aux_59
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab61
        if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab62
        tmpret177 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab63
        case 4: // __atstmplab64
        tmp178 = arg0[0];
        tmp179 = arg0[1];
        tmp180 = env0[0](env0, tmp178);
        if(tmp180) {
          tmp181 = _ats2jspre_list_aux_59(env0, tmp179);
          tmpret177 = [tmp178, tmp181];
        } else {
          // ATStailcalseq_beg
          apy0 = tmp179;
          arg0 = apy0;
          funlab_js = 1; // __patsflab__ats2jspre_list_aux_59
          // ATStailcalseq_end
        } // endif
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret177;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_filter_method(arg0)
{
//
// knd = 0
  var tmpret182
  var tmplab, tmplab_js
//
  // __patsflab_list_filter_method
  tmpret182 = _ats2jspre_list_patsfun_61__closurerize(arg0);
  return tmpret182;
} // end-of-function


function
_ats2jspre_list_patsfun_61(env0, arg0)
{
//
// knd = 0
  var tmpret183
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_61
  tmpret183 = ats2jspre_list_filter(env0, arg0);
  return tmpret183;
} // end-of-function


function
ats2jspre_list_map(arg0, arg1)
{
//
// knd = 0
  var tmpret184
  var tmplab, tmplab_js
//
  // __patsflab_list_map
  tmpret184 = _ats2jspre_list_aux_63(arg1, arg0);
  return tmpret184;
} // end-of-function


function
_ats2jspre_list_aux_63(env0, arg0)
{
//
// knd = 0
  var tmpret185
  var tmp186
  var tmp187
  var tmp188
  var tmp189
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_aux_63
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab65
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab66
      tmpret185 = null;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab67
      case 4: // __atstmplab68
      tmp186 = arg0[0];
      tmp187 = arg0[1];
      tmp188 = env0[0](env0, tmp186);
      tmp189 = _ats2jspre_list_aux_63(env0, tmp187);
      tmpret185 = [tmp188, tmp189];
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret185;
} // end-of-function


function
ats2jspre_list_map_method(arg0, arg1)
{
//
// knd = 0
  var tmpret190
  var tmplab, tmplab_js
//
  // __patsflab_list_map_method
  tmpret190 = _ats2jspre_list_patsfun_65__closurerize(arg0);
  return tmpret190;
} // end-of-function


function
_ats2jspre_list_patsfun_65(env0, arg0)
{
//
// knd = 0
  var tmpret191
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_65
  tmpret191 = ats2jspre_list_map(env0, arg0);
  return tmpret191;
} // end-of-function


function
ats2jspre_list_foldleft(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret192
  var tmplab, tmplab_js
//
  // __patsflab_list_foldleft
  tmpret192 = _ats2jspre_list_loop_67(arg2, arg1, arg0);
  return tmpret192;
} // end-of-function


function
_ats2jspre_list_loop_67(env0, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret193
  var tmp194
  var tmp195
  var tmp196
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_67
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab69
        if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab70
        tmpret193 = arg0;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab71
        case 4: // __atstmplab72
        tmp194 = arg1[0];
        tmp195 = arg1[1];
        tmp196 = env0[0](env0, arg0, tmp194);
        // ATStailcalseq_beg
        apy0 = tmp196;
        apy1 = tmp195;
        arg0 = apy0;
        arg1 = apy1;
        funlab_js = 1; // __patsflab__ats2jspre_list_loop_67
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret193;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_foldleft_method(arg0, arg1)
{
//
// knd = 0
  var tmpret197
  var tmplab, tmplab_js
//
  // __patsflab_list_foldleft_method
  tmpret197 = _ats2jspre_list_patsfun_69__closurerize(arg0, arg1);
  return tmpret197;
} // end-of-function


function
_ats2jspre_list_patsfun_69(env0, env1, arg0)
{
//
// knd = 0
  var tmpret198
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_69
  tmpret198 = ats2jspre_list_foldleft(env0, env1, arg0);
  return tmpret198;
} // end-of-function


function
ats2jspre_list_ifoldleft(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret199
  var tmplab, tmplab_js
//
  // __patsflab_list_ifoldleft
  tmpret199 = _ats2jspre_list_loop_71(arg2, 0, arg1, arg0);
  return tmpret199;
} // end-of-function


function
_ats2jspre_list_loop_71(env0, arg0, arg1, arg2)
{
//
// knd = 1
  var apy0
  var apy1
  var apy2
  var tmpret200
  var tmp201
  var tmp202
  var tmp203
  var tmp204
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_71
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab73
        if(ATSCKptriscons(arg2)) { tmplab_js = 4; break; }
        case 2: // __atstmplab74
        tmpret200 = arg1;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab75
        case 4: // __atstmplab76
        tmp201 = arg2[0];
        tmp202 = arg2[1];
        tmp203 = ats2jspre_add_int1_int1(arg0, 1);
        tmp204 = env0[0](env0, arg0, arg1, tmp201);
        // ATStailcalseq_beg
        apy0 = tmp203;
        apy1 = tmp204;
        apy2 = tmp202;
        arg0 = apy0;
        arg1 = apy1;
        arg2 = apy2;
        funlab_js = 1; // __patsflab__ats2jspre_list_loop_71
        // ATStailcalseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
    if (funlab_js > 0) continue; else return tmpret200;
  } // endwhile-fun
} // end-of-function


function
ats2jspre_list_ifoldleft_method(arg0, arg1)
{
//
// knd = 0
  var tmpret205
  var tmplab, tmplab_js
//
  // __patsflab_list_ifoldleft_method
  tmpret205 = _ats2jspre_list_patsfun_73__closurerize(arg0, arg1);
  return tmpret205;
} // end-of-function


function
_ats2jspre_list_patsfun_73(env0, env1, arg0)
{
//
// knd = 0
  var tmpret206
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_73
  tmpret206 = ats2jspre_list_ifoldleft(env0, env1, arg0);
  return tmpret206;
} // end-of-function


function
ats2jspre_list_foldright(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret207
  var tmplab, tmplab_js
//
  // __patsflab_list_foldright
  tmpret207 = _ats2jspre_list_aux_75(arg1, arg0, arg2);
  return tmpret207;
} // end-of-function


function
_ats2jspre_list_aux_75(env0, arg0, arg1)
{
//
// knd = 0
  var tmpret208
  var tmp209
  var tmp210
  var tmp211
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_aux_75
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab77
      if(ATSCKptriscons(arg0)) { tmplab_js = 4; break; }
      case 2: // __atstmplab78
      tmpret208 = arg1;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab79
      case 4: // __atstmplab80
      tmp209 = arg0[0];
      tmp210 = arg0[1];
      tmp211 = _ats2jspre_list_aux_75(env0, tmp210, arg1);
      tmpret208 = env0[0](env0, tmp209, tmp211);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret208;
} // end-of-function


function
ats2jspre_list_foldright_method(arg0, arg1)
{
//
// knd = 0
  var tmpret212
  var tmplab, tmplab_js
//
  // __patsflab_list_foldright_method
  tmpret212 = _ats2jspre_list_patsfun_77__closurerize(arg0, arg1);
  return tmpret212;
} // end-of-function


function
_ats2jspre_list_patsfun_77(env0, env1, arg0)
{
//
// knd = 0
  var tmpret213
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_77
  tmpret213 = ats2jspre_list_foldright(env0, arg0, env1);
  return tmpret213;
} // end-of-function


function
ats2jspre_list_ifoldright(arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret214
  var tmplab, tmplab_js
//
  // __patsflab_list_ifoldright
  tmpret214 = _ats2jspre_list_aux_79(arg1, 0, arg0, arg2);
  return tmpret214;
} // end-of-function


function
_ats2jspre_list_aux_79(env0, arg0, arg1, arg2)
{
//
// knd = 0
  var tmpret215
  var tmp216
  var tmp217
  var tmp218
  var tmp219
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_aux_79
  // ATScaseofseq_beg
  tmplab_js = 1;
  while(true) {
    tmplab = tmplab_js; tmplab_js = 0;
    switch(tmplab) {
      // ATSbranchseq_beg
      case 1: // __atstmplab81
      if(ATSCKptriscons(arg1)) { tmplab_js = 4; break; }
      case 2: // __atstmplab82
      tmpret215 = arg2;
      break;
      // ATSbranchseq_end
      // ATSbranchseq_beg
      case 3: // __atstmplab83
      case 4: // __atstmplab84
      tmp216 = arg1[0];
      tmp217 = arg1[1];
      tmp219 = ats2jspre_add_int1_int1(arg0, 1);
      tmp218 = _ats2jspre_list_aux_79(env0, tmp219, tmp217, arg2);
      tmpret215 = env0[0](env0, arg0, tmp216, tmp218);
      break;
      // ATSbranchseq_end
    } // end-of-switch
    if (tmplab_js === 0) break;
  } // endwhile
  // ATScaseofseq_end
  return tmpret215;
} // end-of-function


function
ats2jspre_list_ifoldright_method(arg0, arg1)
{
//
// knd = 0
  var tmpret220
  var tmplab, tmplab_js
//
  // __patsflab_list_ifoldright_method
  tmpret220 = _ats2jspre_list_patsfun_81__closurerize(arg0, arg1);
  return tmpret220;
} // end-of-function


function
_ats2jspre_list_patsfun_81(env0, env1, arg0)
{
//
// knd = 0
  var tmpret221
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_81
  tmpret221 = ats2jspre_list_ifoldright(env0, arg0, env1);
  return tmpret221;
} // end-of-function


function
ats2jspre_streamize_list_elt(arg0)
{
//
// knd = 0
  var tmpret224
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list_elt
  tmpret224 = _ats2jspre_list_auxmain_85(arg0);
  return tmpret224;
} // end-of-function


function
_ats2jspre_list_auxmain_85(arg0)
{
//
// knd = 0
  var tmpret225
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_auxmain_85
  tmpret225 = ATSPMVllazyval(_ats2jspre_list_patsfun_86__closurerize(arg0));
  return tmpret225;
} // end-of-function


function
_ats2jspre_list_patsfun_86(env0, arg0)
{
//
// knd = 0
  var tmpret226
  var tmp227
  var tmp228
  var tmp229
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_86
  if(arg0) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab85
        if(ATSCKptriscons(env0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab86
        tmpret226 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab87
        case 4: // __atstmplab88
        tmp227 = env0[0];
        tmp228 = env0[1];
        tmp229 = _ats2jspre_list_auxmain_85(tmp228);
        tmpret226 = [tmp227, tmp229];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
  } // endif
  return tmpret226;
} // end-of-function


function
ats2jspre_streamize_list_zip(arg0, arg1)
{
//
// knd = 0
  var tmpret230
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list_zip
  tmpret230 = _ats2jspre_list_auxmain_88(arg0, arg1);
  return tmpret230;
} // end-of-function


function
_ats2jspre_list_auxmain_88(arg0, arg1)
{
//
// knd = 0
  var tmpret231
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_auxmain_88
  tmpret231 = ATSPMVllazyval(_ats2jspre_list_patsfun_89__closurerize(arg0, arg1));
  return tmpret231;
} // end-of-function


function
_ats2jspre_list_patsfun_89(env0, env1, arg0)
{
//
// knd = 0
  var tmpret232
  var tmp233
  var tmp234
  var tmp235
  var tmp236
  var tmp237
  var tmp238
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_89
  if(arg0) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab89
        if(ATSCKptriscons(env0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab90
        tmpret232 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab91
        case 4: // __atstmplab92
        tmp233 = env0[0];
        tmp234 = env0[1];
        // ATScaseofseq_beg
        tmplab_js = 1;
        while(true) {
          tmplab = tmplab_js; tmplab_js = 0;
          switch(tmplab) {
            // ATSbranchseq_beg
            case 1: // __atstmplab93
            if(ATSCKptriscons(env1)) { tmplab_js = 4; break; }
            case 2: // __atstmplab94
            tmpret232 = null;
            break;
            // ATSbranchseq_end
            // ATSbranchseq_beg
            case 3: // __atstmplab95
            case 4: // __atstmplab96
            tmp235 = env1[0];
            tmp236 = env1[1];
            tmp237 = [tmp233, tmp235];
            tmp238 = _ats2jspre_list_auxmain_88(tmp234, tmp236);
            tmpret232 = [tmp237, tmp238];
            break;
            // ATSbranchseq_end
          } // end-of-switch
          if (tmplab_js === 0) break;
        } // endwhile
        // ATScaseofseq_end
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
  } // endif
  return tmpret232;
} // end-of-function


function
ats2jspre_streamize_list_cross(arg0, arg1)
{
//
// knd = 0
  var tmpret239
  var tmplab, tmplab_js
//
  // __patsflab_streamize_list_cross
  tmpret239 = _ats2jspre_list_auxmain_93(arg0, arg1);
  return tmpret239;
} // end-of-function


function
_ats2jspre_list_auxone_91(arg0, arg1)
{
//
// knd = 0
  var tmpret240
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_auxone_91
  tmpret240 = ATSPMVllazyval(_ats2jspre_list_patsfun_92__closurerize(arg0, arg1));
  return tmpret240;
} // end-of-function


function
_ats2jspre_list_patsfun_92(env0, env1, arg0)
{
//
// knd = 0
  var tmpret241
  var tmp242
  var tmp243
  var tmp244
  var tmp245
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_92
  if(arg0) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab97
        if(ATSCKptriscons(env1)) { tmplab_js = 4; break; }
        case 2: // __atstmplab98
        tmpret241 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab99
        case 4: // __atstmplab100
        tmp242 = env1[0];
        tmp243 = env1[1];
        tmp244 = [env0, tmp242];
        tmp245 = _ats2jspre_list_auxone_91(env0, tmp243);
        tmpret241 = [tmp244, tmp245];
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
  } // endif
  return tmpret241;
} // end-of-function


function
_ats2jspre_list_auxmain_93(arg0, arg1)
{
//
// knd = 0
  var tmpret246
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_auxmain_93
  tmpret246 = ATSPMVllazyval(_ats2jspre_list_patsfun_94__closurerize(arg0, arg1));
  return tmpret246;
} // end-of-function


function
_ats2jspre_list_patsfun_94(env0, env1, arg0)
{
//
// knd = 0
  var tmpret247
  var tmp248
  var tmp249
  var tmp250
  var tmp251
  var tmp252
  var tmplab, tmplab_js
//
  // __patsflab__ats2jspre_list_patsfun_94
  if(arg0) {
    // ATScaseofseq_beg
    tmplab_js = 1;
    while(true) {
      tmplab = tmplab_js; tmplab_js = 0;
      switch(tmplab) {
        // ATSbranchseq_beg
        case 1: // __atstmplab101
        if(ATSCKptriscons(env0)) { tmplab_js = 4; break; }
        case 2: // __atstmplab102
        tmpret247 = null;
        break;
        // ATSbranchseq_end
        // ATSbranchseq_beg
        case 3: // __atstmplab103
        case 4: // __atstmplab104
        tmp248 = env0[0];
        tmp249 = env0[1];
        tmp251 = _ats2jspre_list_auxone_91(tmp248, env1);
        tmp252 = _ats2jspre_list_auxmain_93(tmp249, env1);
        tmp250 = ats2jspre_stream_vt_append(tmp251, tmp252);
        tmpret247 = ATSPMVllazyval_eval(tmp250);
        break;
        // ATSbranchseq_end
      } // end-of-switch
      if (tmplab_js === 0) break;
    } // endwhile
    // ATScaseofseq_end
  } else {
  } // endif
  return tmpret247;
} // end-of-function


function
ats2jspre_list_sort_2(arg0, arg1)
{
//
// knd = 0
  var tmpret260
  var tmp261
  var tmp263
  var tmp269
  var tmp270
  var tmplab, tmplab_js
//
  // __patsflab_list_sort_2
  tmp261 = ats2jspre_JSarray_make_list(arg0);
  ats2jspre_JSarray_sort_2(tmp261, arg1);
  tmp263 = ats2jspre_JSarray_length(tmp261);
  tmp270 = null;
  tmp269 = _ats2jspre_list_loop_103(tmp261, tmp263, 0, tmp270);
  tmpret260 = tmp269;
  return tmpret260;
} // end-of-function


function
_ats2jspre_list_loop_103(env0, env1, arg0, arg1)
{
//
// knd = 1
  var apy0
  var apy1
  var tmpret264
  var tmp265
  var tmp266
  var tmp267
  var tmp268
  var funlab_js
  var tmplab, tmplab_js
//
  while(true) {
    funlab_js = 0;
    // __patsflab__ats2jspre_list_loop_103
    tmp265 = ats2jspre_lt_int0_int0(arg0, env1);
    if(tmp265) {
      tmp266 = ats2jspre_add_int0_int0(arg0, 1);
      tmp268 = ats2jspre_JSarray_pop(env0);
      tmp267 = [tmp268, arg1];
      // ATStailcalseq_beg
      apy0 = tmp266;
      apy1 = tmp267;
      arg0 = apy0;
      arg1 = apy1;
      funlab_js = 1; // __patsflab__ats2jspre_list_loop_103
      // ATStailcalseq_end
    } else {
      tmpret264 = arg1;
    } // endif
    if (funlab_js > 0) continue; else return tmpret264;
  } // endwhile-fun
} // end-of-function


/* ****** ****** */

/* end-of-compilation-unit */
