######
##
## The Perl code is generated by atscc2pl
## The starting compilation time is: 2016-12-20:  0h:32m
##
######
sub
_ats2plpre_list_patsfun_31__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_31($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_35__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_35($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_38__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_38($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_42__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_42($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_46__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_46($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_50__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_50($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_53__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_53($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_57__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_57($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_61__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_61($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_65__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_65($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_69__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_69($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_73__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_73($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_77__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_77($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_82__closurerize($)
{
  my($env0) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_82($cenv->[1], $arg0); }, $env0];
}

sub
_ats2plpre_list_patsfun_85__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_85($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_88__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_88($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}

sub
_ats2plpre_list_patsfun_90__closurerize($$)
{
  my($env0, $env1) = @_;
  return [sub{ my($cenv, $arg0) = @_; return _ats2plpre_list_patsfun_90($cenv->[1], $cenv->[2], $arg0); }, $env0, $env1];
}


sub
ats2plpre_list_make_intrange_2($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret2;
##
  __patsflab_list_make_intrange_2:
  $tmpret2 = ats2plpre_list_make_intrange_3($arg0, $arg1, 1);
  return $tmpret2;
} #end-of-function


sub
ats2plpre_list_make_intrange_3($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret3;
  my $tmp14;
  my $tmp15;
  my $tmp16;
  my $tmp17;
  my $tmp18;
  my $tmp19;
  my $tmp20;
  my $tmp21;
  my $tmp22;
  my $tmp23;
  my $tmp24;
  my $tmp25;
  my $tmp26;
  my $tmp27;
  my $tmp28;
  my $tmp29;
  my $tmp30;
  my $tmp31;
  my $tmp32;
  my $tmp33;
  my $tmp34;
##
  __patsflab_list_make_intrange_3:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab6:
    $tmp14 = ats2plpre_gt_int0_int0($arg2, 0);
    if(!ATSCKpat_bool($tmp14, 1)) { goto __atstmplab7; }
    $tmp15 = ats2plpre_lt_int0_int0($arg0, $arg1);
    if($tmp15) {
      $tmp19 = ats2plpre_sub_int0_int0($arg1, $arg0);
      $tmp18 = ats2plpre_add_int0_int0($tmp19, $arg2);
      $tmp17 = ats2plpre_sub_int0_int0($tmp18, 1);
      $tmp16 = ats2plpre_div_int0_int0($tmp17, $arg2);
      $tmp22 = ats2plpre_sub_int0_int0($tmp16, 1);
      $tmp21 = ats2plpre_mul_int0_int0($tmp22, $arg2);
      $tmp20 = ats2plpre_add_int0_int0($arg0, $tmp21);
      $tmp23 = 0;
      $tmpret3 = _ats2plpre_list_loop1_4($tmp16, $tmp20, $arg2, $tmp23);
    } else {
      $tmpret3 = 0;
    } #endif
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab7:
    $tmp24 = ats2plpre_lt_int0_int0($arg2, 0);
    if(!ATSCKpat_bool($tmp24, 1)) { goto __atstmplab8; }
    $tmp25 = ats2plpre_gt_int0_int0($arg0, $arg1);
    if($tmp25) {
      $tmp26 = ats2plpre_neg_int0($arg2);
      $tmp30 = ats2plpre_sub_int0_int0($arg0, $arg1);
      $tmp29 = ats2plpre_add_int0_int0($tmp30, $tmp26);
      $tmp28 = ats2plpre_sub_int0_int0($tmp29, 1);
      $tmp27 = ats2plpre_div_int0_int0($tmp28, $tmp26);
      $tmp33 = ats2plpre_sub_int0_int0($tmp27, 1);
      $tmp32 = ats2plpre_mul_int0_int0($tmp33, $tmp26);
      $tmp31 = ats2plpre_sub_int0_int0($arg0, $tmp32);
      $tmp34 = 0;
      $tmpret3 = _ats2plpre_list_loop2_5($tmp27, $tmp31, $tmp26, $tmp34);
    } else {
      $tmpret3 = 0;
    } #endif
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab8:
    $tmpret3 = 0;
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret3;
} #end-of-function


sub
_ats2plpre_list_loop1_4($$$$)
{
##
  my($arg0, $arg1, $arg2, $arg3) = @_;
##
  my $apy0;
  my $apy1;
  my $apy2;
  my $apy3;
  my $tmpret4;
  my $tmp5;
  my $tmp6;
  my $tmp7;
  my $tmp8;
##
  __patsflab__ats2plpre_list_loop1_4:
  $tmp5 = ats2plpre_gt_int0_int0($arg0, 0);
  if($tmp5) {
    $tmp6 = ats2plpre_sub_int0_int0($arg0, 1);
    $tmp7 = ats2plpre_sub_int0_int0($arg1, $arg2);
    $tmp8 = [$arg1, $arg3];
    #ATStailcalseq_beg
    $apy0 = $tmp6;
    $apy1 = $tmp7;
    $apy2 = $arg2;
    $apy3 = $tmp8;
    $arg0 = $apy0;
    $arg1 = $apy1;
    $arg2 = $apy2;
    $arg3 = $apy3;
    goto __patsflab__ats2plpre_list_loop1_4;
    #ATStailcalseq_end
  } else {
    $tmpret4 = $arg3;
  } #endif
  return $tmpret4;
} #end-of-function


sub
_ats2plpre_list_loop2_5($$$$)
{
##
  my($arg0, $arg1, $arg2, $arg3) = @_;
##
  my $apy0;
  my $apy1;
  my $apy2;
  my $apy3;
  my $tmpret9;
  my $tmp10;
  my $tmp11;
  my $tmp12;
  my $tmp13;
##
  __patsflab__ats2plpre_list_loop2_5:
  $tmp10 = ats2plpre_gt_int0_int0($arg0, 0);
  if($tmp10) {
    $tmp11 = ats2plpre_sub_int0_int0($arg0, 1);
    $tmp12 = ats2plpre_add_int0_int0($arg1, $arg2);
    $tmp13 = [$arg1, $arg3];
    #ATStailcalseq_beg
    $apy0 = $tmp11;
    $apy1 = $tmp12;
    $apy2 = $arg2;
    $apy3 = $tmp13;
    $arg0 = $apy0;
    $arg1 = $apy1;
    $arg2 = $apy2;
    $arg3 = $apy3;
    goto __patsflab__ats2plpre_list_loop2_5;
    #ATStailcalseq_end
  } else {
    $tmpret9 = $arg3;
  } #endif
  return $tmpret9;
} #end-of-function


sub
ats2plpre_list_length($)
{
##
  my($arg0) = @_;
##
  my $tmpret46;
##
  __patsflab_list_length:
  $tmpret46 = _ats2plpre_list_loop_12($arg0, 0);
  return $tmpret46;
} #end-of-function


sub
_ats2plpre_list_loop_12($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret47;
  my $tmp49;
  my $tmp50;
##
  __patsflab__ats2plpre_list_loop_12:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab13:
    if(ATSCKptriscons($arg0)) { goto __atstmplab16; }
    __atstmplab14:
    $tmpret47 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab15:
    __atstmplab16:
    $tmp49 = $arg0->[1];
    $tmp50 = ats2plpre_add_int1_int1($arg1, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp49;
    $apy1 = $tmp50;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_list_loop_12;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret47;
} #end-of-function


sub
ats2plpre_list_last($)
{
##
  my($arg0) = @_;
##
  my $apy0;
  my $tmpret51;
  my $tmp52;
  my $tmp53;
##
  __patsflab_list_last:
  $tmp52 = $arg0->[0];
  $tmp53 = $arg0->[1];
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab17:
    if(ATSCKptriscons($tmp53)) { goto __atstmplab20; }
    __atstmplab18:
    $tmpret51 = $tmp52;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab19:
    __atstmplab20:
    #ATStailcalseq_beg
    $apy0 = $tmp53;
    $arg0 = $apy0;
    goto __patsflab_list_last;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret51;
} #end-of-function


sub
ats2plpre_list_get_at($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret54;
  my $tmp55;
  my $tmp56;
  my $tmp57;
  my $tmp58;
##
  __patsflab_list_get_at:
  $tmp55 = ats2plpre_eq_int1_int1($arg1, 0);
  if($tmp55) {
    $tmp56 = $arg0->[0];
    $tmpret54 = $tmp56;
  } else {
    $tmp57 = $arg0->[1];
    $tmp58 = ats2plpre_sub_int1_int1($arg1, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp57;
    $apy1 = $tmp58;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab_list_get_at;
    #ATStailcalseq_end
  } #endif
  return $tmpret54;
} #end-of-function


sub
ats2plpre_list_snoc($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret59;
  my $tmp60;
  my $tmp61;
##
  __patsflab_list_snoc:
  $tmp61 = 0;
  $tmp60 = [$arg1, $tmp61];
  $tmpret59 = ats2plpre_list_append($arg0, $tmp60);
  return $tmpret59;
} #end-of-function


sub
ats2plpre_list_extend($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret62;
  my $tmp63;
  my $tmp64;
##
  __patsflab_list_extend:
  $tmp64 = 0;
  $tmp63 = [$arg1, $tmp64];
  $tmpret62 = ats2plpre_list_append($arg0, $tmp63);
  return $tmpret62;
} #end-of-function


sub
ats2plpre_list_append($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret65;
  my $tmp66;
  my $tmp67;
  my $tmp68;
##
  __patsflab_list_append:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab21:
    if(ATSCKptriscons($arg0)) { goto __atstmplab24; }
    __atstmplab22:
    $tmpret65 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab23:
    __atstmplab24:
    $tmp66 = $arg0->[0];
    $tmp67 = $arg0->[1];
    $tmp68 = ats2plpre_list_append($tmp67, $arg1);
    $tmpret65 = [$tmp66, $tmp68];
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret65;
} #end-of-function


sub
ats2plpre_list_reverse($)
{
##
  my($arg0) = @_;
##
  my $tmpret69;
  my $tmp70;
##
  __patsflab_list_reverse:
  $tmp70 = 0;
  $tmpret69 = ats2plpre_list_reverse_append($arg0, $tmp70);
  return $tmpret69;
} #end-of-function


sub
ats2plpre_list_reverse_append($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret71;
##
  __patsflab_list_reverse_append:
  $tmpret71 = _ats2plpre_list_loop_20($arg0, $arg1);
  return $tmpret71;
} #end-of-function


sub
_ats2plpre_list_loop_20($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret72;
  my $tmp73;
  my $tmp74;
  my $tmp75;
##
  __patsflab__ats2plpre_list_loop_20:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab25:
    if(ATSCKptriscons($arg0)) { goto __atstmplab28; }
    __atstmplab26:
    $tmpret72 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab27:
    __atstmplab28:
    $tmp73 = $arg0->[0];
    $tmp74 = $arg0->[1];
    $tmp75 = [$tmp73, $arg1];
    #ATStailcalseq_beg
    $apy0 = $tmp74;
    $apy1 = $tmp75;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_list_loop_20;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret72;
} #end-of-function


sub
ats2plpre_list_concat($)
{
##
  my($arg0) = @_;
##
  my $tmpret76;
##
  __patsflab_list_concat:
  $tmpret76 = _ats2plpre_list_auxlst_22($arg0);
  return $tmpret76;
} #end-of-function


sub
_ats2plpre_list_auxlst_22($)
{
##
  my($arg0) = @_;
##
  my $tmpret77;
  my $tmp78;
  my $tmp79;
  my $tmp80;
##
  __patsflab__ats2plpre_list_auxlst_22:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab29:
    if(ATSCKptriscons($arg0)) { goto __atstmplab32; }
    __atstmplab30:
    $tmpret77 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab31:
    __atstmplab32:
    $tmp78 = $arg0->[0];
    $tmp79 = $arg0->[1];
    $tmp80 = _ats2plpre_list_auxlst_22($tmp79);
    $tmpret77 = ats2plpre_list_append($tmp78, $tmp80);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret77;
} #end-of-function


sub
ats2plpre_list_take($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret81;
  my $tmp82;
  my $tmp83;
  my $tmp84;
  my $tmp85;
  my $tmp86;
##
  __patsflab_list_take:
  $tmp82 = ats2plpre_gt_int1_int1($arg1, 0);
  if($tmp82) {
    $tmp83 = $arg0->[0];
    $tmp84 = $arg0->[1];
    $tmp86 = ats2plpre_sub_int1_int1($arg1, 1);
    $tmp85 = ats2plpre_list_take($tmp84, $tmp86);
    $tmpret81 = [$tmp83, $tmp85];
  } else {
    $tmpret81 = 0;
  } #endif
  return $tmpret81;
} #end-of-function


sub
ats2plpre_list_drop($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret87;
  my $tmp88;
  my $tmp89;
  my $tmp90;
##
  __patsflab_list_drop:
  $tmp88 = ats2plpre_gt_int1_int1($arg1, 0);
  if($tmp88) {
    $tmp89 = $arg0->[1];
    $tmp90 = ats2plpre_sub_int1_int1($arg1, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp89;
    $apy1 = $tmp90;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab_list_drop;
    #ATStailcalseq_end
  } else {
    $tmpret87 = $arg0;
  } #endif
  return $tmpret87;
} #end-of-function


sub
ats2plpre_list_split_at($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret91;
  my $tmp92;
  my $tmp93;
##
  __patsflab_list_split_at:
  $tmp92 = ats2plpre_list_take($arg0, $arg1);
  $tmp93 = ats2plpre_list_drop($arg0, $arg1);
  $tmpret91 = [$tmp92, $tmp93];
  return $tmpret91;
} #end-of-function


sub
ats2plpre_list_insert_at($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret94;
  my $tmp95;
  my $tmp96;
  my $tmp97;
  my $tmp98;
  my $tmp99;
##
  __patsflab_list_insert_at:
  $tmp95 = ats2plpre_gt_int1_int1($arg1, 0);
  if($tmp95) {
    $tmp96 = $arg0->[0];
    $tmp97 = $arg0->[1];
    $tmp99 = ats2plpre_sub_int1_int1($arg1, 1);
    $tmp98 = ats2plpre_list_insert_at($tmp97, $tmp99, $arg2);
    $tmpret94 = [$tmp96, $tmp98];
  } else {
    $tmpret94 = [$arg2, $arg0];
  } #endif
  return $tmpret94;
} #end-of-function


sub
ats2plpre_list_remove_at($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret100;
  my $tmp101;
  my $tmp102;
  my $tmp103;
  my $tmp104;
  my $tmp105;
##
  __patsflab_list_remove_at:
  $tmp101 = $arg0->[0];
  $tmp102 = $arg0->[1];
  $tmp103 = ats2plpre_gt_int1_int1($arg1, 0);
  if($tmp103) {
    $tmp105 = ats2plpre_sub_int1_int1($arg1, 1);
    $tmp104 = ats2plpre_list_remove_at($tmp102, $tmp105);
    $tmpret100 = [$tmp101, $tmp104];
  } else {
    $tmpret100 = $tmp102;
  } #endif
  return $tmpret100;
} #end-of-function


sub
ats2plpre_list_takeout_at($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret106;
  my $tmp107;
  my $tmp108;
  my $tmp109;
  my $tmp110;
  my $tmp111;
  my $tmp112;
  my $tmp113;
  my $tmp114;
##
  __patsflab_list_takeout_at:
  $tmp107 = $arg0->[0];
  $tmp108 = $arg0->[1];
  $tmp109 = ats2plpre_gt_int1_int1($arg1, 0);
  if($tmp109) {
    $tmp111 = ats2plpre_sub_int1_int1($arg1, 1);
    $tmp110 = ats2plpre_list_takeout_at($tmp108, $tmp111);
    $tmp112 = $tmp110->[0];
    $tmp113 = $tmp110->[1];
    $tmp114 = [$tmp107, $tmp113];
    $tmpret106 = [$tmp112, $tmp114];
  } else {
    $tmpret106 = [$tmp107, $tmp108];
  } #endif
  return $tmpret106;
} #end-of-function


sub
ats2plpre_list_exists($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret115;
  my $tmp116;
  my $tmp117;
  my $tmp118;
##
  __patsflab_list_exists:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab33:
    if(ATSCKptriscons($arg0)) { goto __atstmplab36; }
    __atstmplab34:
    $tmpret115 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab35:
    __atstmplab36:
    $tmp116 = $arg0->[0];
    $tmp117 = $arg0->[1];
    $tmp118 = &{$arg1->[0]}($arg1, $tmp116);
    if($tmp118) {
      $tmpret115 = 1;
    } else {
      #ATStailcalseq_beg
      $apy0 = $tmp117;
      $apy1 = $arg1;
      $arg0 = $apy0;
      $arg1 = $apy1;
      goto __patsflab_list_exists;
      #ATStailcalseq_end
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret115;
} #end-of-function


sub
ats2plpre_list_exists_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret119;
##
  __patsflab_list_exists_method:
  $tmpret119 = _ats2plpre_list_patsfun_31__closurerize($arg0);
  return $tmpret119;
} #end-of-function


sub
_ats2plpre_list_patsfun_31($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret120;
##
  __patsflab__ats2plpre_list_patsfun_31:
  $tmpret120 = ats2plpre_list_exists($env0, $arg0);
  return $tmpret120;
} #end-of-function


sub
ats2plpre_list_iexists($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret121;
##
  __patsflab_list_iexists:
  $tmpret121 = _ats2plpre_list_loop_33($arg1, 0, $arg0);
  return $tmpret121;
} #end-of-function


sub
_ats2plpre_list_loop_33($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret122;
  my $tmp123;
  my $tmp124;
  my $tmp125;
  my $tmp126;
##
  __patsflab__ats2plpre_list_loop_33:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab37:
    if(ATSCKptriscons($arg1)) { goto __atstmplab40; }
    __atstmplab38:
    $tmpret122 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab39:
    __atstmplab40:
    $tmp123 = $arg1->[0];
    $tmp124 = $arg1->[1];
    $tmp125 = &{$env0->[0]}($env0, $arg0, $tmp123);
    if($tmp125) {
      $tmpret122 = 1;
    } else {
      $tmp126 = ats2plpre_add_int1_int1($arg0, 1);
      #ATStailcalseq_beg
      $apy0 = $tmp126;
      $apy1 = $tmp124;
      $arg0 = $apy0;
      $arg1 = $apy1;
      goto __patsflab__ats2plpre_list_loop_33;
      #ATStailcalseq_end
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret122;
} #end-of-function


sub
ats2plpre_list_iexists_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret127;
##
  __patsflab_list_iexists_method:
  $tmpret127 = _ats2plpre_list_patsfun_35__closurerize($arg0);
  return $tmpret127;
} #end-of-function


sub
_ats2plpre_list_patsfun_35($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret128;
##
  __patsflab__ats2plpre_list_patsfun_35:
  $tmpret128 = ats2plpre_list_iexists($env0, $arg0);
  return $tmpret128;
} #end-of-function


sub
ats2plpre_list_forall($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret129;
  my $tmp130;
  my $tmp131;
  my $tmp132;
##
  __patsflab_list_forall:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab41:
    if(ATSCKptriscons($arg0)) { goto __atstmplab44; }
    __atstmplab42:
    $tmpret129 = 1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab43:
    __atstmplab44:
    $tmp130 = $arg0->[0];
    $tmp131 = $arg0->[1];
    $tmp132 = &{$arg1->[0]}($arg1, $tmp130);
    if($tmp132) {
      #ATStailcalseq_beg
      $apy0 = $tmp131;
      $apy1 = $arg1;
      $arg0 = $apy0;
      $arg1 = $apy1;
      goto __patsflab_list_forall;
      #ATStailcalseq_end
    } else {
      $tmpret129 = 0;
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret129;
} #end-of-function


sub
ats2plpre_list_forall_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret133;
##
  __patsflab_list_forall_method:
  $tmpret133 = _ats2plpre_list_patsfun_38__closurerize($arg0);
  return $tmpret133;
} #end-of-function


sub
_ats2plpre_list_patsfun_38($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret134;
##
  __patsflab__ats2plpre_list_patsfun_38:
  $tmpret134 = ats2plpre_list_forall($env0, $arg0);
  return $tmpret134;
} #end-of-function


sub
ats2plpre_list_iforall($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret135;
##
  __patsflab_list_iforall:
  $tmpret135 = _ats2plpre_list_loop_40($arg1, 0, $arg0);
  return $tmpret135;
} #end-of-function


sub
_ats2plpre_list_loop_40($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret136;
  my $tmp137;
  my $tmp138;
  my $tmp139;
  my $tmp140;
##
  __patsflab__ats2plpre_list_loop_40:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab45:
    if(ATSCKptriscons($arg1)) { goto __atstmplab48; }
    __atstmplab46:
    $tmpret136 = 1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab47:
    __atstmplab48:
    $tmp137 = $arg1->[0];
    $tmp138 = $arg1->[1];
    $tmp139 = &{$env0->[0]}($env0, $arg0, $tmp137);
    if($tmp139) {
      $tmp140 = ats2plpre_add_int1_int1($arg0, 1);
      #ATStailcalseq_beg
      $apy0 = $tmp140;
      $apy1 = $tmp138;
      $arg0 = $apy0;
      $arg1 = $apy1;
      goto __patsflab__ats2plpre_list_loop_40;
      #ATStailcalseq_end
    } else {
      $tmpret136 = 0;
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret136;
} #end-of-function


sub
ats2plpre_list_iforall_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret141;
##
  __patsflab_list_iforall_method:
  $tmpret141 = _ats2plpre_list_patsfun_42__closurerize($arg0);
  return $tmpret141;
} #end-of-function


sub
_ats2plpre_list_patsfun_42($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret142;
##
  __patsflab__ats2plpre_list_patsfun_42:
  $tmpret142 = ats2plpre_list_iforall($env0, $arg0);
  return $tmpret142;
} #end-of-function


sub
ats2plpre_list_app($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_list_app:
  ats2plpre_list_foreach($arg0, $arg1);
  return;#_void
} #end-of-function


sub
ats2plpre_list_foreach($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmp145;
  my $tmp146;
##
  __patsflab_list_foreach:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab49:
    if(ATSCKptriscons($arg0)) { goto __atstmplab52; }
    __atstmplab50:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab51:
    __atstmplab52:
    $tmp145 = $arg0->[0];
    $tmp146 = $arg0->[1];
    &{$arg1->[0]}($arg1, $tmp145);
    #ATStailcalseq_beg
    $apy0 = $tmp146;
    $apy1 = $arg1;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab_list_foreach;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_list_foreach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret148;
##
  __patsflab_list_foreach_method:
  $tmpret148 = _ats2plpre_list_patsfun_46__closurerize($arg0);
  return $tmpret148;
} #end-of-function


sub
_ats2plpre_list_patsfun_46($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_list_patsfun_46:
  ats2plpre_list_foreach($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_list_iforeach($$)
{
##
  my($arg0, $arg1) = @_;
##
##
  __patsflab_list_iforeach:
  _ats2plpre_list_aux_48($arg1, 0, $arg0);
  return;#_void
} #end-of-function


sub
_ats2plpre_list_aux_48($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmp152;
  my $tmp153;
  my $tmp155;
##
  __patsflab__ats2plpre_list_aux_48:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab53:
    if(ATSCKptriscons($arg1)) { goto __atstmplab56; }
    __atstmplab54:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab55:
    __atstmplab56:
    $tmp152 = $arg1->[0];
    $tmp153 = $arg1->[1];
    &{$env0->[0]}($env0, $arg0, $tmp152);
    $tmp155 = ats2plpre_add_int1_int1($arg0, 1);
    #ATStailcalseq_beg
    $apy0 = $tmp155;
    $apy1 = $tmp153;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_list_aux_48;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_list_iforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret156;
##
  __patsflab_list_iforeach_method:
  $tmpret156 = _ats2plpre_list_patsfun_50__closurerize($arg0);
  return $tmpret156;
} #end-of-function


sub
_ats2plpre_list_patsfun_50($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_list_patsfun_50:
  ats2plpre_list_iforeach($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_list_rforeach($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmp159;
  my $tmp160;
##
  __patsflab_list_rforeach:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab57:
    if(ATSCKptriscons($arg0)) { goto __atstmplab60; }
    __atstmplab58:
    #ATSINSmove_void;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab59:
    __atstmplab60:
    $tmp159 = $arg0->[0];
    $tmp160 = $arg0->[1];
    ats2plpre_list_rforeach($tmp160, $arg1);
    &{$arg1->[0]}($arg1, $tmp159);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return;#_void
} #end-of-function


sub
ats2plpre_list_rforeach_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret162;
##
  __patsflab_list_rforeach_method:
  $tmpret162 = _ats2plpre_list_patsfun_53__closurerize($arg0);
  return $tmpret162;
} #end-of-function


sub
_ats2plpre_list_patsfun_53($$)
{
##
  my($env0, $arg0) = @_;
##
##
  __patsflab__ats2plpre_list_patsfun_53:
  ats2plpre_list_rforeach($env0, $arg0);
  return;#_void
} #end-of-function


sub
ats2plpre_list_filter($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret164;
##
  __patsflab_list_filter:
  $tmpret164 = _ats2plpre_list_aux_55($arg1, $arg0);
  return $tmpret164;
} #end-of-function


sub
_ats2plpre_list_aux_55($$)
{
##
  my($env0, $arg0) = @_;
##
  my $apy0;
  my $tmpret165;
  my $tmp166;
  my $tmp167;
  my $tmp168;
  my $tmp169;
##
  __patsflab__ats2plpre_list_aux_55:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab61:
    if(ATSCKptriscons($arg0)) { goto __atstmplab64; }
    __atstmplab62:
    $tmpret165 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab63:
    __atstmplab64:
    $tmp166 = $arg0->[0];
    $tmp167 = $arg0->[1];
    $tmp168 = &{$env0->[0]}($env0, $tmp166);
    if($tmp168) {
      $tmp169 = _ats2plpre_list_aux_55($env0, $tmp167);
      $tmpret165 = [$tmp166, $tmp169];
    } else {
      #ATStailcalseq_beg
      $apy0 = $tmp167;
      $arg0 = $apy0;
      goto __patsflab__ats2plpre_list_aux_55;
      #ATStailcalseq_end
    } #endif
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret165;
} #end-of-function


sub
ats2plpre_list_filter_method($)
{
##
  my($arg0) = @_;
##
  my $tmpret170;
##
  __patsflab_list_filter_method:
  $tmpret170 = _ats2plpre_list_patsfun_57__closurerize($arg0);
  return $tmpret170;
} #end-of-function


sub
_ats2plpre_list_patsfun_57($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret171;
##
  __patsflab__ats2plpre_list_patsfun_57:
  $tmpret171 = ats2plpre_list_filter($env0, $arg0);
  return $tmpret171;
} #end-of-function


sub
ats2plpre_list_map($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret172;
##
  __patsflab_list_map:
  $tmpret172 = _ats2plpre_list_aux_59($arg1, $arg0);
  return $tmpret172;
} #end-of-function


sub
_ats2plpre_list_aux_59($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret173;
  my $tmp174;
  my $tmp175;
  my $tmp176;
  my $tmp177;
##
  __patsflab__ats2plpre_list_aux_59:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab65:
    if(ATSCKptriscons($arg0)) { goto __atstmplab68; }
    __atstmplab66:
    $tmpret173 = 0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab67:
    __atstmplab68:
    $tmp174 = $arg0->[0];
    $tmp175 = $arg0->[1];
    $tmp176 = &{$env0->[0]}($env0, $tmp174);
    $tmp177 = _ats2plpre_list_aux_59($env0, $tmp175);
    $tmpret173 = [$tmp176, $tmp177];
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret173;
} #end-of-function


sub
ats2plpre_list_map_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret178;
##
  __patsflab_list_map_method:
  $tmpret178 = _ats2plpre_list_patsfun_61__closurerize($arg0);
  return $tmpret178;
} #end-of-function


sub
_ats2plpre_list_patsfun_61($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret179;
##
  __patsflab__ats2plpre_list_patsfun_61:
  $tmpret179 = ats2plpre_list_map($env0, $arg0);
  return $tmpret179;
} #end-of-function


sub
ats2plpre_list_foldleft($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret180;
##
  __patsflab_list_foldleft:
  $tmpret180 = _ats2plpre_list_loop_63($arg2, $arg1, $arg0);
  return $tmpret180;
} #end-of-function


sub
_ats2plpre_list_loop_63($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $apy0;
  my $apy1;
  my $tmpret181;
  my $tmp182;
  my $tmp183;
  my $tmp184;
##
  __patsflab__ats2plpre_list_loop_63:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab69:
    if(ATSCKptriscons($arg1)) { goto __atstmplab72; }
    __atstmplab70:
    $tmpret181 = $arg0;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab71:
    __atstmplab72:
    $tmp182 = $arg1->[0];
    $tmp183 = $arg1->[1];
    $tmp184 = &{$env0->[0]}($env0, $arg0, $tmp182);
    #ATStailcalseq_beg
    $apy0 = $tmp184;
    $apy1 = $tmp183;
    $arg0 = $apy0;
    $arg1 = $apy1;
    goto __patsflab__ats2plpre_list_loop_63;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret181;
} #end-of-function


sub
ats2plpre_list_foldleft_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret185;
##
  __patsflab_list_foldleft_method:
  $tmpret185 = _ats2plpre_list_patsfun_65__closurerize($arg0, $arg1);
  return $tmpret185;
} #end-of-function


sub
_ats2plpre_list_patsfun_65($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret186;
##
  __patsflab__ats2plpre_list_patsfun_65:
  $tmpret186 = ats2plpre_list_foldleft($env0, $env1, $arg0);
  return $tmpret186;
} #end-of-function


sub
ats2plpre_list_ifoldleft($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret187;
##
  __patsflab_list_ifoldleft:
  $tmpret187 = _ats2plpre_list_loop_67($arg2, 0, $arg1, $arg0);
  return $tmpret187;
} #end-of-function


sub
_ats2plpre_list_loop_67($$$$)
{
##
  my($env0, $arg0, $arg1, $arg2) = @_;
##
  my $apy0;
  my $apy1;
  my $apy2;
  my $tmpret188;
  my $tmp189;
  my $tmp190;
  my $tmp191;
  my $tmp192;
##
  __patsflab__ats2plpre_list_loop_67:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab73:
    if(ATSCKptriscons($arg2)) { goto __atstmplab76; }
    __atstmplab74:
    $tmpret188 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab75:
    __atstmplab76:
    $tmp189 = $arg2->[0];
    $tmp190 = $arg2->[1];
    $tmp191 = ats2plpre_add_int1_int1($arg0, 1);
    $tmp192 = &{$env0->[0]}($env0, $arg0, $arg1, $tmp189);
    #ATStailcalseq_beg
    $apy0 = $tmp191;
    $apy1 = $tmp192;
    $apy2 = $tmp190;
    $arg0 = $apy0;
    $arg1 = $apy1;
    $arg2 = $apy2;
    goto __patsflab__ats2plpre_list_loop_67;
    #ATStailcalseq_end
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret188;
} #end-of-function


sub
ats2plpre_list_ifoldleft_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret193;
##
  __patsflab_list_ifoldleft_method:
  $tmpret193 = _ats2plpre_list_patsfun_69__closurerize($arg0, $arg1);
  return $tmpret193;
} #end-of-function


sub
_ats2plpre_list_patsfun_69($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret194;
##
  __patsflab__ats2plpre_list_patsfun_69:
  $tmpret194 = ats2plpre_list_ifoldleft($env0, $env1, $arg0);
  return $tmpret194;
} #end-of-function


sub
ats2plpre_list_foldright($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret195;
##
  __patsflab_list_foldright:
  $tmpret195 = _ats2plpre_list_aux_71($arg1, $arg0, $arg2);
  return $tmpret195;
} #end-of-function


sub
_ats2plpre_list_aux_71($$$)
{
##
  my($env0, $arg0, $arg1) = @_;
##
  my $tmpret196;
  my $tmp197;
  my $tmp198;
  my $tmp199;
##
  __patsflab__ats2plpre_list_aux_71:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab77:
    if(ATSCKptriscons($arg0)) { goto __atstmplab80; }
    __atstmplab78:
    $tmpret196 = $arg1;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab79:
    __atstmplab80:
    $tmp197 = $arg0->[0];
    $tmp198 = $arg0->[1];
    $tmp199 = _ats2plpre_list_aux_71($env0, $tmp198, $arg1);
    $tmpret196 = &{$env0->[0]}($env0, $tmp197, $tmp199);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret196;
} #end-of-function


sub
ats2plpre_list_foldright_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret200;
##
  __patsflab_list_foldright_method:
  $tmpret200 = _ats2plpre_list_patsfun_73__closurerize($arg0, $arg1);
  return $tmpret200;
} #end-of-function


sub
_ats2plpre_list_patsfun_73($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret201;
##
  __patsflab__ats2plpre_list_patsfun_73:
  $tmpret201 = ats2plpre_list_foldright($env0, $arg0, $env1);
  return $tmpret201;
} #end-of-function


sub
ats2plpre_list_ifoldright($$$)
{
##
  my($arg0, $arg1, $arg2) = @_;
##
  my $tmpret202;
##
  __patsflab_list_ifoldright:
  $tmpret202 = _ats2plpre_list_aux_75($arg1, 0, $arg0, $arg2);
  return $tmpret202;
} #end-of-function


sub
_ats2plpre_list_aux_75($$$$)
{
##
  my($env0, $arg0, $arg1, $arg2) = @_;
##
  my $tmpret203;
  my $tmp204;
  my $tmp205;
  my $tmp206;
  my $tmp207;
##
  __patsflab__ats2plpre_list_aux_75:
  #ATScaseofseq_beg
  while(1)
  {
    #ATSbranchseq_beg
    __atstmplab81:
    if(ATSCKptriscons($arg1)) { goto __atstmplab84; }
    __atstmplab82:
    $tmpret203 = $arg2;
    last;
    #ATSbranchseq_end
    #ATSbranchseq_beg
    __atstmplab83:
    __atstmplab84:
    $tmp204 = $arg1->[0];
    $tmp205 = $arg1->[1];
    $tmp207 = ats2plpre_add_int1_int1($arg0, 1);
    $tmp206 = _ats2plpre_list_aux_75($env0, $tmp207, $tmp205, $arg2);
    $tmpret203 = &{$env0->[0]}($env0, $arg0, $tmp204, $tmp206);
    last;
    #ATSbranchseq_end
  } #end-of-while-loop;
  #ATScaseofseq_end
  return $tmpret203;
} #end-of-function


sub
ats2plpre_list_ifoldright_method($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret208;
##
  __patsflab_list_ifoldright_method:
  $tmpret208 = _ats2plpre_list_patsfun_77__closurerize($arg0, $arg1);
  return $tmpret208;
} #end-of-function


sub
_ats2plpre_list_patsfun_77($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret209;
##
  __patsflab__ats2plpre_list_patsfun_77:
  $tmpret209 = ats2plpre_list_ifoldright($env0, $arg0, $env1);
  return $tmpret209;
} #end-of-function


sub
ats2plpre_streamize_list_elt($)
{
##
  my($arg0) = @_;
##
  my $tmpret212;
##
  __patsflab_streamize_list_elt:
  $tmpret212 = _ats2plpre_list_auxmain_81($arg0);
  return $tmpret212;
} #end-of-function


sub
_ats2plpre_list_auxmain_81($)
{
##
  my($arg0) = @_;
##
  my $tmpret213;
##
  __patsflab__ats2plpre_list_auxmain_81:
  $tmpret213 = ATSPMVllazyval(_ats2plpre_list_patsfun_82__closurerize($arg0));
  return $tmpret213;
} #end-of-function


sub
_ats2plpre_list_patsfun_82($$)
{
##
  my($env0, $arg0) = @_;
##
  my $tmpret214;
  my $tmp215;
  my $tmp216;
  my $tmp217;
##
  __patsflab__ats2plpre_list_patsfun_82:
  if($arg0) {
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab85:
      if(ATSCKptriscons($env0)) { goto __atstmplab88; }
      __atstmplab86:
      $tmpret214 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab87:
      __atstmplab88:
      $tmp215 = $env0->[0];
      $tmp216 = $env0->[1];
      $tmp217 = _ats2plpre_list_auxmain_81($tmp216);
      $tmpret214 = [$tmp215, $tmp217];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
  } #endif
  return $tmpret214;
} #end-of-function


sub
ats2plpre_streamize_list_zip($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret218;
##
  __patsflab_streamize_list_zip:
  $tmpret218 = _ats2plpre_list_auxmain_84($arg0, $arg1);
  return $tmpret218;
} #end-of-function


sub
_ats2plpre_list_auxmain_84($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret219;
##
  __patsflab__ats2plpre_list_auxmain_84:
  $tmpret219 = ATSPMVllazyval(_ats2plpre_list_patsfun_85__closurerize($arg0, $arg1));
  return $tmpret219;
} #end-of-function


sub
_ats2plpre_list_patsfun_85($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret220;
  my $tmp221;
  my $tmp222;
  my $tmp223;
  my $tmp224;
  my $tmp225;
  my $tmp226;
##
  __patsflab__ats2plpre_list_patsfun_85:
  if($arg0) {
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab89:
      if(ATSCKptriscons($env0)) { goto __atstmplab92; }
      __atstmplab90:
      $tmpret220 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab91:
      __atstmplab92:
      $tmp221 = $env0->[0];
      $tmp222 = $env0->[1];
      #ATScaseofseq_beg
      while(1)
      {
        #ATSbranchseq_beg
        __atstmplab93:
        if(ATSCKptriscons($env1)) { goto __atstmplab96; }
        __atstmplab94:
        $tmpret220 = 0;
        last;
        #ATSbranchseq_end
        #ATSbranchseq_beg
        __atstmplab95:
        __atstmplab96:
        $tmp223 = $env1->[0];
        $tmp224 = $env1->[1];
        $tmp225 = [$tmp221, $tmp223];
        $tmp226 = _ats2plpre_list_auxmain_84($tmp222, $tmp224);
        $tmpret220 = [$tmp225, $tmp226];
        last;
        #ATSbranchseq_end
      } #end-of-while-loop;
      #ATScaseofseq_end
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
  } #endif
  return $tmpret220;
} #end-of-function


sub
ats2plpre_streamize_list_cross($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret227;
##
  __patsflab_streamize_list_cross:
  $tmpret227 = _ats2plpre_list_auxmain_89($arg0, $arg1);
  return $tmpret227;
} #end-of-function


sub
_ats2plpre_list_auxone_87($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret228;
##
  __patsflab__ats2plpre_list_auxone_87:
  $tmpret228 = ATSPMVllazyval(_ats2plpre_list_patsfun_88__closurerize($arg0, $arg1));
  return $tmpret228;
} #end-of-function


sub
_ats2plpre_list_patsfun_88($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret229;
  my $tmp230;
  my $tmp231;
  my $tmp232;
  my $tmp233;
##
  __patsflab__ats2plpre_list_patsfun_88:
  if($arg0) {
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab97:
      if(ATSCKptriscons($env1)) { goto __atstmplab100; }
      __atstmplab98:
      $tmpret229 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab99:
      __atstmplab100:
      $tmp230 = $env1->[0];
      $tmp231 = $env1->[1];
      $tmp232 = [$env0, $tmp230];
      $tmp233 = _ats2plpre_list_auxone_87($env0, $tmp231);
      $tmpret229 = [$tmp232, $tmp233];
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
  } #endif
  return $tmpret229;
} #end-of-function


sub
_ats2plpre_list_auxmain_89($$)
{
##
  my($arg0, $arg1) = @_;
##
  my $tmpret234;
##
  __patsflab__ats2plpre_list_auxmain_89:
  $tmpret234 = ATSPMVllazyval(_ats2plpre_list_patsfun_90__closurerize($arg0, $arg1));
  return $tmpret234;
} #end-of-function


sub
_ats2plpre_list_patsfun_90($$$)
{
##
  my($env0, $env1, $arg0) = @_;
##
  my $tmpret235;
  my $tmp236;
  my $tmp237;
  my $tmp238;
  my $tmp239;
  my $tmp240;
##
  __patsflab__ats2plpre_list_patsfun_90:
  if($arg0) {
    #ATScaseofseq_beg
    while(1)
    {
      #ATSbranchseq_beg
      __atstmplab101:
      if(ATSCKptriscons($env0)) { goto __atstmplab104; }
      __atstmplab102:
      $tmpret235 = 0;
      last;
      #ATSbranchseq_end
      #ATSbranchseq_beg
      __atstmplab103:
      __atstmplab104:
      $tmp236 = $env0->[0];
      $tmp237 = $env0->[1];
      $tmp239 = _ats2plpre_list_auxone_87($tmp236, $env1);
      $tmp240 = _ats2plpre_list_auxmain_89($tmp237, $env1);
      $tmp238 = ats2plpre_stream_vt_append($tmp239, $tmp240);
      $tmpret235 = ATSPMVllazyval_eval($tmp238);
      last;
      #ATSbranchseq_end
    } #end-of-while-loop;
    #ATScaseofseq_end
  } else {
  } #endif
  return $tmpret235;
} #end-of-function


######
#ATSextcode_beg()
######
######
1; ##note that it is needed by 'use' or 'require'
######
######
#ATSextcode_end()
######
######
##
## end-of-compilation-unit
##
######
